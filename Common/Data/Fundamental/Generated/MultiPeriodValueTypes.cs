/*
 * QUANTCONNECT.COM - Democratizing Finance, Empowering Individuals.
 * Lean Algorithmic Trading Engine v2.0. Copyright 2014 QuantConnect Corporation.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
*/

//------------------------------------------------------------------------------
// This code was generated by a tool.
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

// To get up to date fundamental definition files for your hedgefund contact sales@quantconnect.com

using System.Collections.Generic;
using Newtonsoft.Json;

namespace QuantConnect.Data.Fundamental
{
    /// <summary>
    /// The non-cash expense recognized on intangible assets over the benefit period of the asset.
    /// </summary>
    public class AmortizationIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the AmortizationIncomeStatement class
        /// </summary>
        public AmortizationIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the AmortizationIncomeStatement class
        /// </summary>
        public AmortizationIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The gradual elimination of a liability, such as a mortgage, in regular payments over a specified period of time. Such payments must
    /// be sufficient to cover both principal and interest.
    /// </summary>
    public class SecuritiesAmortizationIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the SecuritiesAmortizationIncomeStatement class
        /// </summary>
        public SecuritiesAmortizationIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the SecuritiesAmortizationIncomeStatement class
        /// </summary>
        public SecuritiesAmortizationIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The aggregate cost of goods produced and sold and services rendered during the reporting Intperiod. It excludes all operating
    /// expenses such as depreciation, depletion, amortization, and SG&amp;A. For the must have cost industry, if the number is not reported
    /// by the company, it will be calculated based on accounting equation.
    /// Cost of Revenue = Revenue - Operating Expenses - Operating Profit.
    /// </summary>
    public class CostOfRevenueIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the CostOfRevenueIncomeStatement class
        /// </summary>
        public CostOfRevenueIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the CostOfRevenueIncomeStatement class
        /// </summary>
        public CostOfRevenueIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The non-cash expense recognized on natural resources (eg. Oil and mineral deposits) over the benefit period of the asset.
    /// </summary>
    public class DepletionIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the DepletionIncomeStatement class
        /// </summary>
        public DepletionIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the DepletionIncomeStatement class
        /// </summary>
        public DepletionIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The current period non-cash expense recognized on tangible assets used in the normal course of business, by allocating the cost of
    /// assets over their useful lives, in the Income Statement. Examples of tangible asset include buildings, production and equipment.
    /// </summary>
    public class DepreciationIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the DepreciationIncomeStatement class
        /// </summary>
        public DepreciationIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the DepreciationIncomeStatement class
        /// </summary>
        public DepreciationIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The sum of depreciation and amortization expense in the Income Statement.
    /// Depreciation is the non-cash expense recognized on tangible assets used in the normal course of business, by allocating the cost of
    /// assets over their useful lives
    /// Amortization is the non-cash expense recognized on intangible assets over the benefit period of the asset.
    /// </summary>
    public class DepreciationAndAmortizationIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the DepreciationAndAmortizationIncomeStatement class
        /// </summary>
        public DepreciationAndAmortizationIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the DepreciationAndAmortizationIncomeStatement class
        /// </summary>
        public DepreciationAndAmortizationIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The sum of depreciation, amortization and depletion expense in the Income Statement.
    /// Depreciation is the non-cash expense recognized on tangible assets used in the normal course of business, by allocating the cost of
    /// assets over their useful lives
    /// Amortization is the non-cash expense recognized on intangible assets over the benefit period of the asset.
    /// Depletion is the non-cash expense recognized on natural resources (eg. Oil and mineral deposits) over the benefit period of the
    /// asset.
    /// </summary>
    public class DepreciationAmortizationDepletionIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the DepreciationAmortizationDepletionIncomeStatement class
        /// </summary>
        public DepreciationAmortizationDepletionIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the DepreciationAmortizationDepletionIncomeStatement class
        /// </summary>
        public DepreciationAmortizationDepletionIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// To be classified as discontinued operations, if both of the following conditions are met:
    /// 1: The operations and cash flow of the component have been or will be removed from the ongoing operations of the entity as a
    /// result of the disposal transaction, and
    /// 2: The entity will have no significant continuing involvement in the operations of the component after the disposal transaction.
    /// The discontinued operation is reported net of tax.
    /// Gains/Loss on Disposal of Discontinued Operations: Any gains or loss recognized on disposal of discontinued operations,
    /// which is the difference between the carrying value of the division and its fair value less costs to sell.
    /// Provision for Gain/Loss on Disposal: The amount of current expense charged in order to prepare for the disposal of
    /// discontinued operations.
    /// </summary>
    public class NetIncomeDiscontinuousOperationsIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the NetIncomeDiscontinuousOperationsIncomeStatement class
        /// </summary>
        public NetIncomeDiscontinuousOperationsIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the NetIncomeDiscontinuousOperationsIncomeStatement class
        /// </summary>
        public NetIncomeDiscontinuousOperationsIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Excise taxes are taxes paid when purchases are made on a specific good, such as gasoline. Excise taxes are often included in the
    /// price of the product. There are also excise taxes on activities, such as on wagering or on highway usage by trucks.
    /// </summary>
    public class ExciseTaxesIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ExciseTaxesIncomeStatement class
        /// </summary>
        public ExciseTaxesIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the ExciseTaxesIncomeStatement class
        /// </summary>
        public ExciseTaxesIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Gains (losses), whether arising from extinguishment of debt, prior period adjustments, or from other events or transactions, that are
    /// both unusual in nature and infrequent in occurrence thereby meeting the criteria for an event or transaction to be classified as an
    /// extraordinary item.
    /// </summary>
    public class NetIncomeExtraordinaryIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the NetIncomeExtraordinaryIncomeStatement class
        /// </summary>
        public NetIncomeExtraordinaryIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the NetIncomeExtraordinaryIncomeStatement class
        /// </summary>
        public NetIncomeExtraordinaryIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The aggregate amount of fees, commissions, and other income.
    /// </summary>
    public class FeeRevenueAndOtherIncomeIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the FeeRevenueAndOtherIncomeIncomeStatement class
        /// </summary>
        public FeeRevenueAndOtherIncomeIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the FeeRevenueAndOtherIncomeIncomeStatement class
        /// </summary>
        public FeeRevenueAndOtherIncomeIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The aggregate total of general managing and administering expenses for the company.
    /// </summary>
    public class GeneralAndAdministrativeExpenseIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the GeneralAndAdministrativeExpenseIncomeStatement class
        /// </summary>
        public GeneralAndAdministrativeExpenseIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the GeneralAndAdministrativeExpenseIncomeStatement class
        /// </summary>
        public GeneralAndAdministrativeExpenseIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Total revenue less cost of revenue. The number is as reported by the company on the income statement; however, the number will
    /// be calculated if it is not reported. This field is null if the cost of revenue is not given.
    /// Gross Profit = Total Revenue - Cost of Revenue.
    /// </summary>
    public class GrossProfitIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the GrossProfitIncomeStatement class
        /// </summary>
        public GrossProfitIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the GrossProfitIncomeStatement class
        /// </summary>
        public GrossProfitIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Relates to the general cost of borrowing money. It is the price that a lender charges a borrower for the use of the lender's money.
    /// </summary>
    public class InterestExpenseIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the InterestExpenseIncomeStatement class
        /// </summary>
        public InterestExpenseIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the InterestExpenseIncomeStatement class
        /// </summary>
        public InterestExpenseIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Interest expense caused by long term financing activities; such as interest expense incurred on trading liabilities, commercial paper,
    /// long-term debt, capital leases, deposits, and all other borrowings.
    /// </summary>
    public class InterestExpenseNonOperatingIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the InterestExpenseNonOperatingIncomeStatement class
        /// </summary>
        public InterestExpenseNonOperatingIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the InterestExpenseNonOperatingIncomeStatement class
        /// </summary>
        public InterestExpenseNonOperatingIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Net interest and dividend income or expense, including any amortization and accretion (as applicable) of discounts and premiums,
    /// including consideration of the provisions for loan, lease, credit, and other related losses, if any.
    /// </summary>
    public class InterestIncomeAfterProvisionForLoanLossIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the InterestIncomeAfterProvisionForLoanLossIncomeStatement class
        /// </summary>
        public InterestIncomeAfterProvisionForLoanLossIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the InterestIncomeAfterProvisionForLoanLossIncomeStatement class
        /// </summary>
        public InterestIncomeAfterProvisionForLoanLossIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Interest income earned from long term financing activities.
    /// </summary>
    public class InterestIncomeNonOperatingIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the InterestIncomeNonOperatingIncomeStatement class
        /// </summary>
        public InterestIncomeNonOperatingIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the InterestIncomeNonOperatingIncomeStatement class
        /// </summary>
        public InterestIncomeNonOperatingIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Net-Non Operating interest income or expenses caused by financing activities.
    /// </summary>
    public class NetNonOperatingInterestIncomeExpenseIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the NetNonOperatingInterestIncomeExpenseIncomeStatement class
        /// </summary>
        public NetNonOperatingInterestIncomeExpenseIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the NetNonOperatingInterestIncomeExpenseIncomeStatement class
        /// </summary>
        public NetNonOperatingInterestIncomeExpenseIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Losses generally refer to (1) the amount of reduction in the value of an insured's property caused by an insured peril, (2) the amount
    /// sought through an insured's claim, or (3) the amount paid on behalf of an insured under an insurance contract.  Loss Adjustment
    /// Expenses is expenses incurred in the course of investigating and settling claims that includes any legal and adjusters' fees and the
    /// costs of paying claims and all related expenses.
    /// </summary>
    public class LossAdjustmentExpenseIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the LossAdjustmentExpenseIncomeStatement class
        /// </summary>
        public LossAdjustmentExpenseIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the LossAdjustmentExpenseIncomeStatement class
        /// </summary>
        public LossAdjustmentExpenseIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Represents par or stated value of the subsidiary stock not owned by the parent company plus the minority interest's equity in the
    /// surplus of the subsidiary. This item includes preferred dividend averages on the minority preferred stock (preferred shares not
    /// owned by the reporting parent company). Minority interest also refers to stockholders who own less than 50% of a subsidiary's
    /// outstanding voting common stock. The minority stockholders hold an interest in the subsidiary's net assets and share earnings with
    /// the parent company.
    /// </summary>
    public class MinorityInterestsIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the MinorityInterestsIncomeStatement class
        /// </summary>
        public MinorityInterestsIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the MinorityInterestsIncomeStatement class
        /// </summary>
        public MinorityInterestsIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Includes all the operations (continuing and discontinued) and all the other income or charges (extraordinary, accounting changes,
    /// tax loss carry forward, and other gains and losses).
    /// </summary>
    public class NetIncomeIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the NetIncomeIncomeStatement class
        /// </summary>
        public NetIncomeIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the NetIncomeIncomeStatement class
        /// </summary>
        public NetIncomeIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Net income minus the preferred dividends paid as presented in the Income Statement.
    /// </summary>
    public class NetIncomeCommonStockholdersIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the NetIncomeCommonStockholdersIncomeStatement class
        /// </summary>
        public NetIncomeCommonStockholdersIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the NetIncomeCommonStockholdersIncomeStatement class
        /// </summary>
        public NetIncomeCommonStockholdersIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Revenue less expenses and taxes from the entity's ongoing operations and before income (loss) from: Preferred Dividends;
    /// Extraordinary Gains and Losses; Income from Cumulative Effects of Accounting Change; Discontinuing Operation; Income from Tax
    /// Loss Carry forward; Other Gains/Losses.
    /// </summary>
    public class NetIncomeContinuousOperationsIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the NetIncomeContinuousOperationsIncomeStatement class
        /// </summary>
        public NetIncomeContinuousOperationsIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the NetIncomeContinuousOperationsIncomeStatement class
        /// </summary>
        public NetIncomeContinuousOperationsIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Total interest income minus total interest expense. It represents the difference between interest and dividends earned on interest-
    /// bearing assets and interest paid to depositors and other creditors.
    /// </summary>
    public class NetInterestIncomeIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the NetInterestIncomeIncomeStatement class
        /// </summary>
        public NetInterestIncomeIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the NetInterestIncomeIncomeStatement class
        /// </summary>
        public NetInterestIncomeIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Total of interest, dividends, and other earnings derived from the insurance company's invested assets minus the expenses
    /// associated with these investments. Excluded from this income are capital gains or losses as the result of the sale of assets, as well
    /// as any unrealized capital gains or losses.
    /// </summary>
    public class NetInvestmentIncomeIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the NetInvestmentIncomeIncomeStatement class
        /// </summary>
        public NetInvestmentIncomeIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the NetInvestmentIncomeIncomeStatement class
        /// </summary>
        public NetInvestmentIncomeIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// All sales, business revenues and income that the company makes from its business operations, net of excise taxes. This applies for
    /// all companies and can be used as comparison for all industries.
    /// For Normal, Mining, Transportation and Utility templates companies, this is the sum of Operating Revenues, Excise Taxes and Fees.
    /// For Bank template companies, this is the sum of Net Interest Income and Non-Interest Income.
    /// For Insurance template companies, this is the sum of Premiums, Interest Income, Fees, Investment and Other Income.
    /// </summary>
    public class TotalRevenueIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the TotalRevenueIncomeStatement class
        /// </summary>
        public TotalRevenueIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the TotalRevenueIncomeStatement class
        /// </summary>
        public TotalRevenueIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Any expenses that not related to interest. It includes labor and related expense, occupancy and equipment, commission,
    /// professional expense and contract services expenses, selling, general and administrative, research and development depreciation,
    /// amortization and depletion, and any other special income/charges.
    /// </summary>
    public class NonInterestExpenseIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the NonInterestExpenseIncomeStatement class
        /// </summary>
        public NonInterestExpenseIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the NonInterestExpenseIncomeStatement class
        /// </summary>
        public NonInterestExpenseIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The total amount of non-interest income which may be derived from: (1) fees and commissions; (2) premiums earned; (3) equity
    /// investment; (4) the sale or disposal of assets; and (5) other sources not otherwise specified.
    /// </summary>
    public class NonInterestIncomeIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the NonInterestIncomeIncomeStatement class
        /// </summary>
        public NonInterestIncomeIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the NonInterestIncomeIncomeStatement class
        /// </summary>
        public NonInterestIncomeIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Operating expenses are primary recurring costs associated with central operations (other than cost of goods sold) that are incurred
    /// in order to generate sales.
    /// </summary>
    public class OperatingExpenseIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the OperatingExpenseIncomeStatement class
        /// </summary>
        public OperatingExpenseIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the OperatingExpenseIncomeStatement class
        /// </summary>
        public OperatingExpenseIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Income from normal business operations after deducting cost of revenue and operating expenses. It does not include income from
    /// any investing activities.
    /// </summary>
    public class OperatingIncomeIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the OperatingIncomeIncomeStatement class
        /// </summary>
        public OperatingIncomeIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the OperatingIncomeIncomeStatement class
        /// </summary>
        public OperatingIncomeIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Sales and income that the company makes from its business operations. This applies only to non-bank and insurance companies.
    /// For Utility template companies, this is the sum of revenue from electric, gas, transportation and other operating revenue.
    /// For Transportation template companies, this is the sum of revenue-passenger, revenue-cargo, and other operating revenue.
    /// </summary>
    public class OperatingRevenueIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the OperatingRevenueIncomeStatement class
        /// </summary>
        public OperatingRevenueIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the OperatingRevenueIncomeStatement class
        /// </summary>
        public OperatingRevenueIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Income or expense that comes from miscellaneous sources.
    /// </summary>
    public class OtherIncomeExpenseIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the OtherIncomeExpenseIncomeStatement class
        /// </summary>
        public OtherIncomeExpenseIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the OtherIncomeExpenseIncomeStatement class
        /// </summary>
        public OtherIncomeExpenseIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Costs that vary with and are primarily related to the acquisition of new and renewal insurance contracts. Also referred to as
    /// underwriting expenses.
    /// </summary>
    public class PolicyAcquisitionExpenseIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the PolicyAcquisitionExpenseIncomeStatement class
        /// </summary>
        public PolicyAcquisitionExpenseIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the PolicyAcquisitionExpenseIncomeStatement class
        /// </summary>
        public PolicyAcquisitionExpenseIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The net provision in current period for future policy benefits, claims, and claims settlement expenses incurred in the claims
    /// settlement process before the effects of reinsurance arrangements. The value is net of the effects of contracts assumed and
    /// ceded.
    /// </summary>
    public class NetPolicyholderBenefitsAndClaimsIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the NetPolicyholderBenefitsAndClaimsIncomeStatement class
        /// </summary>
        public NetPolicyholderBenefitsAndClaimsIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the NetPolicyholderBenefitsAndClaimsIncomeStatement class
        /// </summary>
        public NetPolicyholderBenefitsAndClaimsIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The amount of dividends declared or paid in the period to preferred shareholders, or the amount for which the obligation to pay
    /// them dividends arose in the Intperiod. Preferred dividends are the amount required for the current year only, and not for any amount
    /// required in past years.
    /// </summary>
    public class PreferredStockDividendsIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the PreferredStockDividendsIncomeStatement class
        /// </summary>
        public PreferredStockDividendsIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the PreferredStockDividendsIncomeStatement class
        /// </summary>
        public PreferredStockDividendsIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Premiums earned is the portion of an insurance written premium which is considered "earned" by the insurer, based on the part of
    /// the policy period that the insurance has been in effect, and during which the insurer has been exposed to loss.
    /// </summary>
    public class TotalPremiumsEarnedIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the TotalPremiumsEarnedIncomeStatement class
        /// </summary>
        public TotalPremiumsEarnedIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the TotalPremiumsEarnedIncomeStatement class
        /// </summary>
        public TotalPremiumsEarnedIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Reported income before the deduction or benefit of income taxes.
    /// </summary>
    public class PretaxIncomeIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the PretaxIncomeIncomeStatement class
        /// </summary>
        public PretaxIncomeIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the PretaxIncomeIncomeStatement class
        /// </summary>
        public PretaxIncomeIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Include any taxes on income, net of any investment tax credits for the current accounting Intperiod.
    /// </summary>
    public class TaxProvisionIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the TaxProvisionIncomeStatement class
        /// </summary>
        public TaxProvisionIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the TaxProvisionIncomeStatement class
        /// </summary>
        public TaxProvisionIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// A charge to income which represents an expense deemed adequate by management given the composition of a bank's credit
    /// portfolios, their probability of default, the economic environment and the allowance for credit losses already established. Specific
    /// provisions are established to reduce the book value of specific assets (primarily loans) to establish the amount expected to be
    /// recovered on the loans.
    /// </summary>
    public class CreditLossesProvisionIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the CreditLossesProvisionIncomeStatement class
        /// </summary>
        public CreditLossesProvisionIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the CreditLossesProvisionIncomeStatement class
        /// </summary>
        public CreditLossesProvisionIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The aggregate amount of research and development expenses during the year.
    /// </summary>
    public class ResearchAndDevelopmentIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ResearchAndDevelopmentIncomeStatement class
        /// </summary>
        public ResearchAndDevelopmentIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the ResearchAndDevelopmentIncomeStatement class
        /// </summary>
        public ResearchAndDevelopmentIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The aggregate total amount of expenses directly related to the marketing or selling of products or services.
    /// </summary>
    public class SellingAndMarketingExpenseIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the SellingAndMarketingExpenseIncomeStatement class
        /// </summary>
        public SellingAndMarketingExpenseIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the SellingAndMarketingExpenseIncomeStatement class
        /// </summary>
        public SellingAndMarketingExpenseIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The aggregate total costs related to selling a firm's product and services, as well as all other general and administrative expenses.
    /// Selling expenses are those directly related to the company's efforts to generate sales (e.g., sales salaries, commissions,
    /// advertising, delivery expenses). General and administrative expenses are expenses related to general administration of the
    /// company's operation (e.g., officers and office salaries, office supplies, telephone, accounting and legal services, and business
    /// licenses and fees).
    /// </summary>
    public class SellingGeneralAndAdministrationIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the SellingGeneralAndAdministrationIncomeStatement class
        /// </summary>
        public SellingGeneralAndAdministrationIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the SellingGeneralAndAdministrationIncomeStatement class
        /// </summary>
        public SellingGeneralAndAdministrationIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Earnings or losses attributable to occurrences or actions by the firm that is either infrequent or unusual.
    /// </summary>
    public class SpecialIncomeChargesIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the SpecialIncomeChargesIncomeStatement class
        /// </summary>
        public SpecialIncomeChargesIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the SpecialIncomeChargesIncomeStatement class
        /// </summary>
        public SpecialIncomeChargesIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The sum of operating expense and cost of revenue. If the company does not give the reported number, it will be calculated by
    /// adding operating expense and cost of revenue.
    /// </summary>
    public class TotalExpensesIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the TotalExpensesIncomeStatement class
        /// </summary>
        public TotalExpensesIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the TotalExpensesIncomeStatement class
        /// </summary>
        public TotalExpensesIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Income generated from interest-bearing deposits or accounts.
    /// </summary>
    public class InterestIncomeIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the InterestIncomeIncomeStatement class
        /// </summary>
        public InterestIncomeIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the InterestIncomeIncomeStatement class
        /// </summary>
        public InterestIncomeIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Earnings minus expenses (excluding interest and tax expenses).
    /// </summary>
    public class EBITIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the EBITIncomeStatement class
        /// </summary>
        public EBITIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the EBITIncomeStatement class
        /// </summary>
        public EBITIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Earnings minus expenses (excluding interest, tax, depreciation, and amortization expenses).
    /// </summary>
    public class EBITDAIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the EBITDAIncomeStatement class
        /// </summary>
        public EBITDAIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the EBITDAIncomeStatement class
        /// </summary>
        public EBITDAIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Revenue less expenses and taxes from the entity's ongoing operations net of minority interest and before income (loss) from:
    /// Preferred Dividends; Extraordinary Gains and Losses; Income from Cumulative Effects of Accounting Change; Discontinuing
    /// Operation; Income from Tax Loss Carry forward; Other Gains/Losses.
    /// </summary>
    public class NetIncomeContinuousOperationsNetMinorityInterestIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the NetIncomeContinuousOperationsNetMinorityInterestIncomeStatement class
        /// </summary>
        public NetIncomeContinuousOperationsNetMinorityInterestIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the NetIncomeContinuousOperationsNetMinorityInterestIncomeStatement class
        /// </summary>
        public NetIncomeContinuousOperationsNetMinorityInterestIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The amount of premiums paid and payable to another insurer as a result of reinsurance arrangements in order to exchange for that
    /// company accepting all or part of insurance on a risk or exposure. This item is usually only available for insurance industry.
    /// </summary>
    public class CededPremiumsIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the CededPremiumsIncomeStatement class
        /// </summary>
        public CededPremiumsIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the CededPremiumsIncomeStatement class
        /// </summary>
        public CededPremiumsIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// </summary>
    public class CommissionExpensesIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the CommissionExpensesIncomeStatement class
        /// </summary>
        public CommissionExpensesIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the CommissionExpensesIncomeStatement class
        /// </summary>
        public CommissionExpensesIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Income earned from credit card services including late, over limit, and annual fees. This item is usually only available for bank
    /// industry.
    /// </summary>
    public class CreditCardIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the CreditCardIncomeStatement class
        /// </summary>
        public CreditCardIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the CreditCardIncomeStatement class
        /// </summary>
        public CreditCardIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Dividends earned from equity investment securities. This item is usually only available for bank industry.
    /// </summary>
    public class DividendIncomeIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the DividendIncomeIncomeStatement class
        /// </summary>
        public DividendIncomeIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the DividendIncomeIncomeStatement class
        /// </summary>
        public DividendIncomeIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The earnings from equity interest can be a result of any of the following: Income from earnings distribution of the business, either
    /// as dividends paid to corporate shareholders or as drawings in a partnership; Capital gain realized upon sale of the business; Capital
    /// gain realized from selling his or her interest to other partners. This item is usually not available for bank and insurance industries.
    /// </summary>
    public class EarningsFromEquityInterestIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the EarningsFromEquityInterestIncomeStatement class
        /// </summary>
        public EarningsFromEquityInterestIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the EarningsFromEquityInterestIncomeStatement class
        /// </summary>
        public EarningsFromEquityInterestIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Equipment expenses include depreciation, repairs, rentals, and service contract costs. This also includes equipment purchases
    /// which do not qualify for capitalization in accordance with the entity's accounting policy. This item may also include furniture
    /// expenses. This item is usually only available for bank industry.
    /// </summary>
    public class EquipmentIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the EquipmentIncomeStatement class
        /// </summary>
        public EquipmentIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the EquipmentIncomeStatement class
        /// </summary>
        public EquipmentIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Costs incurred in identifying areas that may warrant examination and in examining specific areas that are considered to have
    /// prospects of containing energy or metal reserves, including costs of drilling exploratory wells. Development expense is the
    /// capitalized costs incurred to obtain access to proved reserves and to provide facilities for extracting, treating, gathering and storing
    /// the energy and metal. Mineral property includes oil and gas wells, mines, and other natural deposits (including geothermal
    /// deposits). The payment for leasing those properties is called mineral property lease expense. Exploration expense is included in
    /// operation expenses for mining industry.
    /// </summary>
    public class ExplorationDevelopmentAndMineralPropertyLeaseExpensesIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ExplorationDevelopmentAndMineralPropertyLeaseExpensesIncomeStatement class
        /// </summary>
        public ExplorationDevelopmentAndMineralPropertyLeaseExpensesIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the ExplorationDevelopmentAndMineralPropertyLeaseExpensesIncomeStatement class
        /// </summary>
        public ExplorationDevelopmentAndMineralPropertyLeaseExpensesIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Total fees and commissions earned from providing services such as leasing of space or maintaining: (1) depositor accounts; (2)
    /// transfer agent; (3) fiduciary and trust; (4) brokerage and underwriting; (5) mortgage; (6) credit cards; (7) correspondent clearing;
    /// and (8) other such services and activities performed for others. This item is usually available for bank and insurance industries.
    /// </summary>
    public class FeesAndCommissionsIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the FeesAndCommissionsIncomeStatement class
        /// </summary>
        public FeesAndCommissionsIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the FeesAndCommissionsIncomeStatement class
        /// </summary>
        public FeesAndCommissionsIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Trading revenues that result from foreign exchange exposures such as cash instruments and off-balance sheet derivative
    /// instruments. This item is usually only available for bank industry.
    /// </summary>
    public class ForeignExchangeTradingGainsIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ForeignExchangeTradingGainsIncomeStatement class
        /// </summary>
        public ForeignExchangeTradingGainsIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the ForeignExchangeTradingGainsIncomeStatement class
        /// </summary>
        public ForeignExchangeTradingGainsIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The aggregate amount of fuel cost for current period associated with the revenue generation. This item is usually only available for
    /// transportation industry.
    /// </summary>
    public class FuelIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the FuelIncomeStatement class
        /// </summary>
        public FuelIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the FuelIncomeStatement class
        /// </summary>
        public FuelIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Cost of fuel, purchase power and gas associated with revenue generation. This item is usually only available for utility industry.
    /// </summary>
    public class FuelAndPurchasePowerIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the FuelAndPurchasePowerIncomeStatement class
        /// </summary>
        public FuelAndPurchasePowerIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the FuelAndPurchasePowerIncomeStatement class
        /// </summary>
        public FuelAndPurchasePowerIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The amount of excess earned in comparison to fair value when selling a business. This item is usually not available for insurance
    /// industry.
    /// </summary>
    public class GainOnSaleOfBusinessIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the GainOnSaleOfBusinessIncomeStatement class
        /// </summary>
        public GainOnSaleOfBusinessIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the GainOnSaleOfBusinessIncomeStatement class
        /// </summary>
        public GainOnSaleOfBusinessIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The amount of excess earned in comparison to the net book value for sale of property, plant, equipment. This item is usually not
    /// available for bank and insurance industries.
    /// </summary>
    public class GainOnSaleOfPPEIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the GainOnSaleOfPPEIncomeStatement class
        /// </summary>
        public GainOnSaleOfPPEIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the GainOnSaleOfPPEIncomeStatement class
        /// </summary>
        public GainOnSaleOfPPEIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The amount of excess earned in comparison to the original purchase value of the security.
    /// </summary>
    public class GainOnSaleOfSecurityIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the GainOnSaleOfSecurityIncomeStatement class
        /// </summary>
        public GainOnSaleOfSecurityIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the GainOnSaleOfSecurityIncomeStatement class
        /// </summary>
        public GainOnSaleOfSecurityIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Total premiums generated from all policies written by an insurance company within a given period of time. This item is usually only
    /// available for insurance industry.
    /// </summary>
    public class GrossPremiumsWrittenIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the GrossPremiumsWrittenIncomeStatement class
        /// </summary>
        public GrossPremiumsWrittenIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the GrossPremiumsWrittenIncomeStatement class
        /// </summary>
        public GrossPremiumsWrittenIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Impairments are considered to be permanent, which is a downward revaluation of fixed assets. If the sum of all estimated future
    /// cash flows is less than the carrying value of the asset, then the asset would be considered impaired and would have to be written
    /// down to its fair value. Once an asset is written down, it may only be written back up under very few circumstances. Usually the
    /// company uses the sum of undiscounted future cash flows to determine if the impairment should occur, and uses the sum of
    /// discounted future cash flows to make the impairment judgment. The impairment decision emphasizes on capital assets' future
    /// profit collection ability.
    /// </summary>
    public class ImpairmentOfCapitalAssetsIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ImpairmentOfCapitalAssetsIncomeStatement class
        /// </summary>
        public ImpairmentOfCapitalAssetsIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the ImpairmentOfCapitalAssetsIncomeStatement class
        /// </summary>
        public ImpairmentOfCapitalAssetsIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Premium might contain a portion of the amount that has been paid in advance for insurance that has not yet been provided, which
    /// is called unearned premium. If either party cancels the contract, the insurer must have the unearned premium ready to refund.
    /// Hence, the amount of premium reserve maintained by insurers is called unearned premium reserves, which is prepared for
    /// liquidation.  This item is usually only available for insurance industry.
    /// </summary>
    public class IncreaseDecreaseInNetUnearnedPremiumReservesIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the IncreaseDecreaseInNetUnearnedPremiumReservesIncomeStatement class
        /// </summary>
        public IncreaseDecreaseInNetUnearnedPremiumReservesIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the IncreaseDecreaseInNetUnearnedPremiumReservesIncomeStatement class
        /// </summary>
        public IncreaseDecreaseInNetUnearnedPremiumReservesIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Insurance and claims are the expenses in the period incurred with respect to protection provided by insurance entities against risks
    /// other than risks associated with production (which is allocated to cost of sales). This item is usually not available for insurance
    /// industries.
    /// </summary>
    public class InsuranceAndClaimsIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the InsuranceAndClaimsIncomeStatement class
        /// </summary>
        public InsuranceAndClaimsIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the InsuranceAndClaimsIncomeStatement class
        /// </summary>
        public InsuranceAndClaimsIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Includes interest expense on the following deposit accounts: Interest-bearing Demand deposit; Checking account; Savings account;
    /// Deposit in foreign offices; Money Market Certificates &amp; Deposit Accounts. This item is usually only available for bank industry.
    /// </summary>
    public class InterestExpenseForDepositIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the InterestExpenseForDepositIncomeStatement class
        /// </summary>
        public InterestExpenseForDepositIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the InterestExpenseForDepositIncomeStatement class
        /// </summary>
        public InterestExpenseForDepositIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Gross expenses on the purchase of Federal funds at a specified price with a simultaneous agreement to sell the same to the same
    /// counterparty at a fixed or determinable price at a future date. This item is usually only available for bank industry.
    /// </summary>
    public class InterestExpenseForFederalFundsSoldAndSecuritiesPurchaseUnderAgreementsToResellIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the InterestExpenseForFederalFundsSoldAndSecuritiesPurchaseUnderAgreementsToResellIncomeStatement class
        /// </summary>
        public InterestExpenseForFederalFundsSoldAndSecuritiesPurchaseUnderAgreementsToResellIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the InterestExpenseForFederalFundsSoldAndSecuritiesPurchaseUnderAgreementsToResellIncomeStatement class
        /// </summary>
        public InterestExpenseForFederalFundsSoldAndSecuritiesPurchaseUnderAgreementsToResellIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The aggregate interest expenses incurred on long-term borrowings and any interest expenses on fixed assets (property, plant,
    /// equipment) that are leased due longer than one year. This item is usually only available for bank industry.
    /// </summary>
    public class InterestExpenseForLongTermDebtAndCapitalSecuritiesIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the InterestExpenseForLongTermDebtAndCapitalSecuritiesIncomeStatement class
        /// </summary>
        public InterestExpenseForLongTermDebtAndCapitalSecuritiesIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the InterestExpenseForLongTermDebtAndCapitalSecuritiesIncomeStatement class
        /// </summary>
        public InterestExpenseForLongTermDebtAndCapitalSecuritiesIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The aggregate interest expenses incurred on short-term borrowings and any interest expenses on fixed assets (property, plant,
    /// equipment) that are leased within one year. This item is usually only available for bank industry.
    /// </summary>
    public class InterestExpenseForShortTermDebtIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the InterestExpenseForShortTermDebtIncomeStatement class
        /// </summary>
        public InterestExpenseForShortTermDebtIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the InterestExpenseForShortTermDebtIncomeStatement class
        /// </summary>
        public InterestExpenseForShortTermDebtIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Interest income generated from all deposit accounts. This item is usually only available for bank industry.
    /// </summary>
    public class InterestIncomeFromDepositsIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the InterestIncomeFromDepositsIncomeStatement class
        /// </summary>
        public InterestIncomeFromDepositsIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the InterestIncomeFromDepositsIncomeStatement class
        /// </summary>
        public InterestIncomeFromDepositsIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The carrying value of funds outstanding loaned in the form of security resale agreements if the agreement requires the purchaser to
    /// resell the identical security purchased or a security that meets the definition of ""substantially the same"" in the case of a dollar roll.
    /// Also includes purchases of participations in pools of securities that are subject to a resale agreement; This category includes all
    /// interest income generated from federal funds sold and securities purchases under agreements to resell; This category includes all
    /// interest income generated from federal funds sold and securities purchases under agreements to resell.
    /// </summary>
    public class InterestIncomeFromFederalFundsSoldAndSecuritiesPurchaseUnderAgreementsToResellIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the InterestIncomeFromFederalFundsSoldAndSecuritiesPurchaseUnderAgreementsToResellIncomeStatement class
        /// </summary>
        public InterestIncomeFromFederalFundsSoldAndSecuritiesPurchaseUnderAgreementsToResellIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the InterestIncomeFromFederalFundsSoldAndSecuritiesPurchaseUnderAgreementsToResellIncomeStatement class
        /// </summary>
        public InterestIncomeFromFederalFundsSoldAndSecuritiesPurchaseUnderAgreementsToResellIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Includes interest and fee income generated by direct lease financing. This item is usually only available for bank industry.
    /// </summary>
    public class InterestIncomeFromLeasesIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the InterestIncomeFromLeasesIncomeStatement class
        /// </summary>
        public InterestIncomeFromLeasesIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the InterestIncomeFromLeasesIncomeStatement class
        /// </summary>
        public InterestIncomeFromLeasesIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Loan is a common field to banks. Interest Income from Loans is interest and fee income generated from all loans, which includes
    /// Commercial loans; Credit loans; Other consumer loans; Real Estate - Construction; Real Estate - Mortgage; Foreign loans. Banks
    /// earn interest from loans. This item is usually only available for bank industry.
    /// </summary>
    public class InterestIncomeFromLoansIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the InterestIncomeFromLoansIncomeStatement class
        /// </summary>
        public InterestIncomeFromLoansIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the InterestIncomeFromLoansIncomeStatement class
        /// </summary>
        public InterestIncomeFromLoansIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Total interest and fee income generated by loans and lease. This item is usually only available for bank industry.
    /// </summary>
    public class InterestIncomeFromLoansAndLeaseIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the InterestIncomeFromLoansAndLeaseIncomeStatement class
        /// </summary>
        public InterestIncomeFromLoansAndLeaseIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the InterestIncomeFromLoansAndLeaseIncomeStatement class
        /// </summary>
        public InterestIncomeFromLoansAndLeaseIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Represents total interest and dividend income from U.S. Treasury securities, U.S. government agency and corporation obligations,
    /// securities issued by states and political subdivisions, other domestic debt securities, foreign debt securities, and equity securities
    /// (including investments in mutual funds). Excludes interest income from securities held in trading accounts. This item is usually only
    /// available for bank industry.
    /// </summary>
    public class InterestIncomeFromSecuritiesIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the InterestIncomeFromSecuritiesIncomeStatement class
        /// </summary>
        public InterestIncomeFromSecuritiesIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the InterestIncomeFromSecuritiesIncomeStatement class
        /// </summary>
        public InterestIncomeFromSecuritiesIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Includes (1) underwriting revenue (the spread between the resale price received and the cost of the securities and related
    /// expenses) generated through the purchasing, distributing and reselling of new issues of securities (alternatively, could be a
    /// secondary offering of a large block of previously issued securities); and (2) fees earned for mergers, acquisitions, divestitures,
    /// restructurings, and other types of financial advisory services. This item is usually only available for bank industry.
    /// </summary>
    public class InvestmentBankingProfitIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the InvestmentBankingProfitIncomeStatement class
        /// </summary>
        public InvestmentBankingProfitIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the InvestmentBankingProfitIncomeStatement class
        /// </summary>
        public InvestmentBankingProfitIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The aggregate amount of maintenance and repair expenses in the current period associated with the revenue generation. Mainly
    /// for fixed assets. This item is usually only available for transportation industry.
    /// </summary>
    public class MaintenanceAndRepairsIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the MaintenanceAndRepairsIncomeStatement class
        /// </summary>
        public MaintenanceAndRepairsIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the MaintenanceAndRepairsIncomeStatement class
        /// </summary>
        public MaintenanceAndRepairsIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The aggregate foreign currency translation gain or loss (both realized and unrealized) included as part of revenue. This item is
    /// usually only available for insurance industry.
    /// </summary>
    public class NetForeignExchangeGainLossIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the NetForeignExchangeGainLossIncomeStatement class
        /// </summary>
        public NetForeignExchangeGainLossIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the NetForeignExchangeGainLossIncomeStatement class
        /// </summary>
        public NetForeignExchangeGainLossIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Occupancy expense may include items, such as depreciation of facilities and equipment, lease expenses, property taxes and
    /// property and casualty insurance expense. This item is usually only available for bank industry.
    /// </summary>
    public class NetOccupancyExpenseIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the NetOccupancyExpenseIncomeStatement class
        /// </summary>
        public NetOccupancyExpenseIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the NetOccupancyExpenseIncomeStatement class
        /// </summary>
        public NetOccupancyExpenseIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Net premiums written are gross premiums written less ceded premiums. This item is usually only available for insurance industry.
    /// </summary>
    public class NetPremiumsWrittenIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the NetPremiumsWrittenIncomeStatement class
        /// </summary>
        public NetPremiumsWrittenIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the NetPremiumsWrittenIncomeStatement class
        /// </summary>
        public NetPremiumsWrittenIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Gain or loss realized during the period of time for all kinds of investment securities. In might include trading, available-for-sale, or
    /// held-to-maturity securities. This item is usually only available for insurance industry.
    /// </summary>
    public class NetRealizedGainLossOnInvestmentsIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the NetRealizedGainLossOnInvestmentsIncomeStatement class
        /// </summary>
        public NetRealizedGainLossOnInvestmentsIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the NetRealizedGainLossOnInvestmentsIncomeStatement class
        /// </summary>
        public NetRealizedGainLossOnInvestmentsIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Includes total expenses of occupancy and equipment. This item is usually only available for bank industry.
    /// </summary>
    public class OccupancyAndEquipmentIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the OccupancyAndEquipmentIncomeStatement class
        /// </summary>
        public OccupancyAndEquipmentIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the OccupancyAndEquipmentIncomeStatement class
        /// </summary>
        public OccupancyAndEquipmentIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The aggregate amount of operation and maintenance expenses, which is the one important operating expense for the utility
    /// industry. It includes any costs related to production and maintenance cost of the property during the revenue generation process.
    /// This item is usually only available for mining and utility industries.
    /// </summary>
    public class OperationAndMaintenanceIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the OperationAndMaintenanceIncomeStatement class
        /// </summary>
        public OperationAndMaintenanceIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the OperationAndMaintenanceIncomeStatement class
        /// </summary>
        public OperationAndMaintenanceIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Represents fees and commissions earned from provide other services. This item is usually only available for bank industry.
    /// </summary>
    public class OtherCustomerServicesIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the OtherCustomerServicesIncomeStatement class
        /// </summary>
        public OtherCustomerServicesIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the OtherCustomerServicesIncomeStatement class
        /// </summary>
        public OtherCustomerServicesIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// All other interest expense that is not otherwise classified
    /// </summary>
    public class OtherInterestExpenseIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the OtherInterestExpenseIncomeStatement class
        /// </summary>
        public OtherInterestExpenseIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the OtherInterestExpenseIncomeStatement class
        /// </summary>
        public OtherInterestExpenseIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// All other interest income that is not otherwise classified
    /// </summary>
    public class OtherInterestIncomeIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the OtherInterestIncomeIncomeStatement class
        /// </summary>
        public OtherInterestIncomeIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the OtherInterestIncomeIncomeStatement class
        /// </summary>
        public OtherInterestIncomeIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// All other non interest expense that is not otherwise classified
    /// </summary>
    public class OtherNonInterestExpenseIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the OtherNonInterestExpenseIncomeStatement class
        /// </summary>
        public OtherNonInterestExpenseIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the OtherNonInterestExpenseIncomeStatement class
        /// </summary>
        public OtherNonInterestExpenseIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// All other special charges that are not otherwise classified
    /// </summary>
    public class OtherSpecialChargesIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the OtherSpecialChargesIncomeStatement class
        /// </summary>
        public OtherSpecialChargesIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the OtherSpecialChargesIncomeStatement class
        /// </summary>
        public OtherSpecialChargesIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Any taxes that are not part of income taxes. This item is usually not available for bank and insurance industries.
    /// </summary>
    public class OtherTaxesIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the OtherTaxesIncomeStatement class
        /// </summary>
        public OtherTaxesIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the OtherTaxesIncomeStatement class
        /// </summary>
        public OtherTaxesIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The provision in current period for future policy benefits, claims, and claims settlement, which is under reinsurance arrangements.
    /// This item is usually only available for insurance industry.
    /// </summary>
    public class PolicyholderBenefitsCededIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the PolicyholderBenefitsCededIncomeStatement class
        /// </summary>
        public PolicyholderBenefitsCededIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the PolicyholderBenefitsCededIncomeStatement class
        /// </summary>
        public PolicyholderBenefitsCededIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The gross amount of provision in current period for future policyholder benefits, claims, and claims settlement, incurred in the
    /// claims settlement process before the effects of reinsurance arrangements. This item is usually only available for insurance industry.
    /// </summary>
    public class PolicyholderBenefitsGrossIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the PolicyholderBenefitsGrossIncomeStatement class
        /// </summary>
        public PolicyholderBenefitsGrossIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the PolicyholderBenefitsGrossIncomeStatement class
        /// </summary>
        public PolicyholderBenefitsGrossIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Payments made or credits extended to the insured by the company, usually at the end of a policy year results in reducing the net
    /// insurance cost to the policyholder. Such dividends may be paid in cash to the insured or applied by the insured as reductions of the
    /// premiums due for the next policy year. This item is usually only available for insurance industry.
    /// </summary>
    public class PolicyholderDividendsIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the PolicyholderDividendsIncomeStatement class
        /// </summary>
        public PolicyholderDividendsIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the PolicyholderDividendsIncomeStatement class
        /// </summary>
        public PolicyholderDividendsIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The periodic income payment provided to the annuitant by the insurance company, which is determined by the assumed interest
    /// rate (AIR) and other factors. This item is usually only available for insurance industry.
    /// </summary>
    public class PolicyholderInterestIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the PolicyholderInterestIncomeStatement class
        /// </summary>
        public PolicyholderInterestIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the PolicyholderInterestIncomeStatement class
        /// </summary>
        public PolicyholderInterestIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Professional and contract service expense includes cost reimbursements for support services related to contracted projects,
    /// outsourced management, technical and staff support. This item is usually only available for bank industry.
    /// </summary>
    public class ProfessionalExpenseAndContractServicesExpenseIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ProfessionalExpenseAndContractServicesExpenseIncomeStatement class
        /// </summary>
        public ProfessionalExpenseAndContractServicesExpenseIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the ProfessionalExpenseAndContractServicesExpenseIncomeStatement class
        /// </summary>
        public ProfessionalExpenseAndContractServicesExpenseIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Amount of the current period expense charged against operations, the offset which is generally to the allowance for doubtful
    /// accounts for the purpose of reducing receivables, including notes receivable, to an amount that approximates their net realizable
    /// value (the amount expected to be collected). The category includes provision for loan losses, provision for any doubtful account
    /// receivable, and bad debt expenses. This item is usually not available for bank and insurance industries.
    /// </summary>
    public class ProvisionForDoubtfulAccountsIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ProvisionForDoubtfulAccountsIncomeStatement class
        /// </summary>
        public ProvisionForDoubtfulAccountsIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the ProvisionForDoubtfulAccountsIncomeStatement class
        /// </summary>
        public ProvisionForDoubtfulAccountsIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Rent fees are the cost of occupying space during the accounting Intperiod. Landing fees are a change paid to an airport company for
    /// landing at a particular airport. This item is not available for insurance industry.
    /// </summary>
    public class RentAndLandingFeesIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the RentAndLandingFeesIncomeStatement class
        /// </summary>
        public RentAndLandingFeesIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the RentAndLandingFeesIncomeStatement class
        /// </summary>
        public RentAndLandingFeesIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Expenses are related to restructuring, merger, or acquisitions. Restructuring expenses are charges associated with the
    /// consolidation and relocation of operations, disposition or abandonment of operations or productive assets. Merger and acquisition
    /// expenses are the amount of costs of a business combination including legal, accounting, and other costs that were charged to
    /// expense during the Intperiod.
    /// </summary>
    public class RestructuringAndMergernAcquisitionIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the RestructuringAndMergernAcquisitionIncomeStatement class
        /// </summary>
        public RestructuringAndMergernAcquisitionIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the RestructuringAndMergernAcquisitionIncomeStatement class
        /// </summary>
        public RestructuringAndMergernAcquisitionIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// All salary, wages, compensation, management fees, and employee benefit expenses.
    /// </summary>
    public class SalariesAndWagesIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the SalariesAndWagesIncomeStatement class
        /// </summary>
        public SalariesAndWagesIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the SalariesAndWagesIncomeStatement class
        /// </summary>
        public SalariesAndWagesIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Income/Loss from Securities and Activities
    /// </summary>
    public class SecuritiesActivitiesIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the SecuritiesActivitiesIncomeStatement class
        /// </summary>
        public SecuritiesActivitiesIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the SecuritiesActivitiesIncomeStatement class
        /// </summary>
        public SecuritiesActivitiesIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Includes any service charges on following accounts: Demand Deposit; Checking account; Savings account; Deposit in foreign
    /// offices; ESCROW accounts; Money Market Certificates &amp; Deposit accounts, CDs (Negotiable Certificates of Deposits); NOW
    /// Accounts (Negotiable Order of Withdrawal); IRAs (Individual Retirement Accounts). This item is usually only available for bank
    /// industry.
    /// </summary>
    public class ServiceChargeOnDepositorAccountsIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ServiceChargeOnDepositorAccountsIncomeStatement class
        /// </summary>
        public ServiceChargeOnDepositorAccountsIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the ServiceChargeOnDepositorAccountsIncomeStatement class
        /// </summary>
        public ServiceChargeOnDepositorAccountsIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// A broker-dealer or other financial entity may buy and sell securities exclusively for its own account, sometimes referred to as
    /// proprietary trading. The profit or loss is measured by the difference between the acquisition cost and the selling price or current
    /// market or fair value. The net gain or loss, includes both realized and unrealized, from trading cash instruments, equities and
    /// derivative contracts (including commodity contracts) that has been recognized during the accounting period for the broker dealer or
    /// other financial entity's own account. This item is typically available for bank industry.
    /// </summary>
    public class TradingGainLossIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the TradingGainLossIncomeStatement class
        /// </summary>
        public TradingGainLossIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the TradingGainLossIncomeStatement class
        /// </summary>
        public TradingGainLossIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Bank manages funds on behalf of its customers through the operation of various trust accounts. Any fees earned through managing
    /// those funds are called trust fees, which are recognized when earned. This item is typically available for bank industry.
    /// </summary>
    public class TrustFeesbyCommissionsIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the TrustFeesbyCommissionsIncomeStatement class
        /// </summary>
        public TrustFeesbyCommissionsIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the TrustFeesbyCommissionsIncomeStatement class
        /// </summary>
        public TrustFeesbyCommissionsIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Also known as Policy Acquisition Costs; and reported by insurance companies.  The cost incurred by an insurer when deciding
    /// whether to accept or decline a risk; may include meetings with the insureds or brokers, actuarial review of loss history, or physical
    /// inspections of exposures. Also, expenses deducted from insurance company revenues (including incurred losses and acquisition
    /// costs) to determine underwriting profit.
    /// </summary>
    public class UnderwritingExpensesIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the UnderwritingExpensesIncomeStatement class
        /// </summary>
        public UnderwritingExpensesIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the UnderwritingExpensesIncomeStatement class
        /// </summary>
        public UnderwritingExpensesIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// A reduction in the value of an asset or earnings by the amount of an expense or loss.
    /// </summary>
    public class WriteOffIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the WriteOffIncomeStatement class
        /// </summary>
        public WriteOffIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the WriteOffIncomeStatement class
        /// </summary>
        public WriteOffIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Usually available for the banking industry.  This is Non-Interest Income that is not otherwise classified.
    /// </summary>
    public class OtherNonInterestIncomeIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the OtherNonInterestIncomeIncomeStatement class
        /// </summary>
        public OtherNonInterestIncomeIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the OtherNonInterestIncomeIncomeStatement class
        /// </summary>
        public OtherNonInterestIncomeIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The aggregate expense charged against earnings to allocate the cost of intangible assets (nonphysical assets not used in
    /// production) in a systematic and rational manner to the periods expected to benefit from such assets.
    /// </summary>
    public class AmortizationOfIntangiblesIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the AmortizationOfIntangiblesIncomeStatement class
        /// </summary>
        public AmortizationOfIntangiblesIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the AmortizationOfIntangiblesIncomeStatement class
        /// </summary>
        public AmortizationOfIntangiblesIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Net Income from Continuing Operations and Discontinued Operations, added together.
    /// </summary>
    public class NetIncomeFromContinuingAndDiscontinuedOperationIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the NetIncomeFromContinuingAndDiscontinuedOperationIncomeStatement class
        /// </summary>
        public NetIncomeFromContinuingAndDiscontinuedOperationIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the NetIncomeFromContinuingAndDiscontinuedOperationIncomeStatement class
        /// </summary>
        public NetIncomeFromContinuingAndDiscontinuedOperationIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Occurs if a company has had a net loss from operations on a previous year that can be carried forward to reduce net income for tax
    /// purposes.
    /// </summary>
    public class NetIncomeFromTaxLossCarryforwardIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the NetIncomeFromTaxLossCarryforwardIncomeStatement class
        /// </summary>
        public NetIncomeFromTaxLossCarryforwardIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the NetIncomeFromTaxLossCarryforwardIncomeStatement class
        /// </summary>
        public NetIncomeFromTaxLossCarryforwardIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The aggregate amount of operating expenses associated with normal operations. Will not include any gain, loss, benefit, or income;
    /// and its value reported by the company should be &lt;0.
    /// </summary>
    public class OtherOperatingExpensesIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the OtherOperatingExpensesIncomeStatement class
        /// </summary>
        public OtherOperatingExpensesIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the OtherOperatingExpensesIncomeStatement class
        /// </summary>
        public OtherOperatingExpensesIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The sum of the money market investments held by a bank's depositors, which are FDIC insured.
    /// </summary>
    public class TotalMoneyMarketInvestmentsIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the TotalMoneyMarketInvestmentsIncomeStatement class
        /// </summary>
        public TotalMoneyMarketInvestmentsIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the TotalMoneyMarketInvestmentsIncomeStatement class
        /// </summary>
        public TotalMoneyMarketInvestmentsIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The Cost Of Revenue plus Depreciation, Depletion &amp; Amortization from the IncomeStatement; minus Depreciation, Depletion &amp;
    /// Amortization from the Cash Flow Statement
    /// </summary>
    public class ReconciledCostOfRevenueIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ReconciledCostOfRevenueIncomeStatement class
        /// </summary>
        public ReconciledCostOfRevenueIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the ReconciledCostOfRevenueIncomeStatement class
        /// </summary>
        public ReconciledCostOfRevenueIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Is Depreciation, Depletion &amp; Amortization from the Cash Flow Statement
    /// </summary>
    public class ReconciledDepreciationIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ReconciledDepreciationIncomeStatement class
        /// </summary>
        public ReconciledDepreciationIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the ReconciledDepreciationIncomeStatement class
        /// </summary>
        public ReconciledDepreciationIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// This calculation represents earnings adjusted for items that are irregular or unusual in nature, and/or are non-recurring. This can be
    /// used to fairly measure a company's profitability. This is calculated using Net Income from Continuing Operations plus/minus any tax
    /// affected unusual Items and Goodwill Impairments/Write Offs.
    /// </summary>
    public class NormalizedIncomeIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the NormalizedIncomeIncomeStatement class
        /// </summary>
        public NormalizedIncomeIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the NormalizedIncomeIncomeStatement class
        /// </summary>
        public NormalizedIncomeIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Revenue less expenses and taxes from the entity's ongoing operations net of minority interest and before income (loss) from:
    /// Preferred Dividends; Extraordinary Gains and Losses; Income from Cumulative Effects of Accounting Change; Discontinuing
    /// Operation; Income from Tax Loss Carry forward; Other Gains/Losses.
    /// </summary>
    public class NetIncomeFromContinuingOperationNetMinorityInterestIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the NetIncomeFromContinuingOperationNetMinorityInterestIncomeStatement class
        /// </summary>
        public NetIncomeFromContinuingOperationNetMinorityInterestIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the NetIncomeFromContinuingOperationNetMinorityInterestIncomeStatement class
        /// </summary>
        public NetIncomeFromContinuingOperationNetMinorityInterestIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Any gain (loss) recognized on the sale of assets or a sale which generates profit or loss, which is a difference between sales price
    /// and net book value at the disposal time.
    /// </summary>
    public class GainLossonSaleofAssetsIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the GainLossonSaleofAssetsIncomeStatement class
        /// </summary>
        public GainLossonSaleofAssetsIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the GainLossonSaleofAssetsIncomeStatement class
        /// </summary>
        public GainLossonSaleofAssetsIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Gain on sale of any loans investment.
    /// </summary>
    public class GainonSaleofLoansIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the GainonSaleofLoansIncomeStatement class
        /// </summary>
        public GainonSaleofLoansIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the GainonSaleofLoansIncomeStatement class
        /// </summary>
        public GainonSaleofLoansIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Gain on the disposal of investment property.
    /// </summary>
    public class GainonSaleofInvestmentPropertyIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the GainonSaleofInvestmentPropertyIncomeStatement class
        /// </summary>
        public GainonSaleofInvestmentPropertyIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the GainonSaleofInvestmentPropertyIncomeStatement class
        /// </summary>
        public GainonSaleofInvestmentPropertyIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Loss on extinguishment of debt is the accounting loss that results from a debt extinguishment. A debt shall be accounted for as
    /// having been extinguished in a number of circumstances, including when it has been settled through repayment or replacement by
    /// another liability. It generally results in an accounting gain or loss. Amount represents the difference between the fair value of the
    /// payments made and the carrying amount of the debt at the time of its extinguishment.
    /// </summary>
    public class LossonExtinguishmentofDebtIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the LossonExtinguishmentofDebtIncomeStatement class
        /// </summary>
        public LossonExtinguishmentofDebtIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the LossonExtinguishmentofDebtIncomeStatement class
        /// </summary>
        public LossonExtinguishmentofDebtIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Income from other equity interest reported after Provision of Tax. This applies to all industries.
    /// </summary>
    public class EarningsfromEquityInterestNetOfTaxIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the EarningsfromEquityInterestNetOfTaxIncomeStatement class
        /// </summary>
        public EarningsfromEquityInterestNetOfTaxIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the EarningsfromEquityInterestNetOfTaxIncomeStatement class
        /// </summary>
        public EarningsfromEquityInterestNetOfTaxIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Net income of the group after the adjustment of all expenses and benefit.
    /// </summary>
    public class NetIncomeIncludingNoncontrollingInterestsIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the NetIncomeIncludingNoncontrollingInterestsIncomeStatement class
        /// </summary>
        public NetIncomeIncludingNoncontrollingInterestsIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the NetIncomeIncludingNoncontrollingInterestsIncomeStatement class
        /// </summary>
        public NetIncomeIncludingNoncontrollingInterestsIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Dividend paid to the preferred shareholders before the common stock shareholders.
    /// </summary>
    public class OtherunderPreferredStockDividendIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the OtherunderPreferredStockDividendIncomeStatement class
        /// </summary>
        public OtherunderPreferredStockDividendIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the OtherunderPreferredStockDividendIncomeStatement class
        /// </summary>
        public OtherunderPreferredStockDividendIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Total staff cost which is paid to the employees that is not part of Selling, General, and Administration expense.
    /// </summary>
    public class StaffCostsIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the StaffCostsIncomeStatement class
        /// </summary>
        public StaffCostsIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the StaffCostsIncomeStatement class
        /// </summary>
        public StaffCostsIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Benefits paid to the employees in respect of their work.
    /// </summary>
    public class SocialSecurityCostsIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the SocialSecurityCostsIncomeStatement class
        /// </summary>
        public SocialSecurityCostsIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the SocialSecurityCostsIncomeStatement class
        /// </summary>
        public SocialSecurityCostsIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The expense that a company incurs each year by providing a pension plan for its employees. Major expenses in the pension cost
    /// include employer matching contributions and management fees.
    /// </summary>
    public class PensionCostsIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the PensionCostsIncomeStatement class
        /// </summary>
        public PensionCostsIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the PensionCostsIncomeStatement class
        /// </summary>
        public PensionCostsIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Total Other Operating Income- including interest income, dividend income and other types of operating income.
    /// </summary>
    public class OtherOperatingIncomeTotalIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the OtherOperatingIncomeTotalIncomeStatement class
        /// </summary>
        public OtherOperatingIncomeTotalIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the OtherOperatingIncomeTotalIncomeStatement class
        /// </summary>
        public OtherOperatingIncomeTotalIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Total income from the associates and joint venture via investment, accounted for in the Non-Operating section.
    /// </summary>
    public class IncomefromAssociatesandOtherParticipatingInterestsIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the IncomefromAssociatesandOtherParticipatingInterestsIncomeStatement class
        /// </summary>
        public IncomefromAssociatesandOtherParticipatingInterestsIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the IncomefromAssociatesandOtherParticipatingInterestsIncomeStatement class
        /// </summary>
        public IncomefromAssociatesandOtherParticipatingInterestsIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Any other finance cost which is not clearly defined in the Non-Operating section.
    /// </summary>
    public class TotalOtherFinanceCostIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the TotalOtherFinanceCostIncomeStatement class
        /// </summary>
        public TotalOtherFinanceCostIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the TotalOtherFinanceCostIncomeStatement class
        /// </summary>
        public TotalOtherFinanceCostIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Total amount paid in dividends to investors- this includes dividends paid on equity and non-equity shares.
    /// </summary>
    public class GrossDividendPaymentIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the GrossDividendPaymentIncomeStatement class
        /// </summary>
        public GrossDividendPaymentIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the GrossDividendPaymentIncomeStatement class
        /// </summary>
        public GrossDividendPaymentIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Fees and commission income earned by bank and insurance companies on the rendering services.
    /// </summary>
    public class FeesandCommissionIncomeIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the FeesandCommissionIncomeIncomeStatement class
        /// </summary>
        public FeesandCommissionIncomeIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the FeesandCommissionIncomeIncomeStatement class
        /// </summary>
        public FeesandCommissionIncomeIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Cost incurred by bank and insurance companies for fees and commission income.
    /// </summary>
    public class FeesandCommissionExpenseIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the FeesandCommissionExpenseIncomeStatement class
        /// </summary>
        public FeesandCommissionExpenseIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the FeesandCommissionExpenseIncomeStatement class
        /// </summary>
        public FeesandCommissionExpenseIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Any trading income on the securities.
    /// </summary>
    public class NetTradingIncomeIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the NetTradingIncomeIncomeStatement class
        /// </summary>
        public NetTradingIncomeIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the NetTradingIncomeIncomeStatement class
        /// </summary>
        public NetTradingIncomeIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Other costs in incurred in lieu of the employees that cannot be identified by other specific items in the Staff Costs section.
    /// </summary>
    public class OtherStaffCostsIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the OtherStaffCostsIncomeStatement class
        /// </summary>
        public OtherStaffCostsIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the OtherStaffCostsIncomeStatement class
        /// </summary>
        public OtherStaffCostsIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Gain on disposal and change in fair value of investment properties.
    /// </summary>
    public class GainonInvestmentPropertiesIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the GainonInvestmentPropertiesIncomeStatement class
        /// </summary>
        public GainonInvestmentPropertiesIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the GainonInvestmentPropertiesIncomeStatement class
        /// </summary>
        public GainonInvestmentPropertiesIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Adjustments to reported net income to calculate Diluted EPS, by assuming that all convertible instruments are converted to
    /// Common Equity. The adjustments usually include the interest expense of debentures when assumed converted and preferred
    /// dividends of convertible preferred stock when assumed converted.
    /// </summary>
    public class AverageDilutionEarningsIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the AverageDilutionEarningsIncomeStatement class
        /// </summary>
        public AverageDilutionEarningsIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the AverageDilutionEarningsIncomeStatement class
        /// </summary>
        public AverageDilutionEarningsIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Gain/Loss through hedging activities.
    /// </summary>
    public class GainLossonFinancialInstrumentsDesignatedasCashFlowHedgesIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the GainLossonFinancialInstrumentsDesignatedasCashFlowHedgesIncomeStatement class
        /// </summary>
        public GainLossonFinancialInstrumentsDesignatedasCashFlowHedgesIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the GainLossonFinancialInstrumentsDesignatedasCashFlowHedgesIncomeStatement class
        /// </summary>
        public GainLossonFinancialInstrumentsDesignatedasCashFlowHedgesIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Gain/loss on the write-off of financial assets available-for-sale.
    /// </summary>
    public class GainLossonDerecognitionofAvailableForSaleFinancialAssetsIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the GainLossonDerecognitionofAvailableForSaleFinancialAssetsIncomeStatement class
        /// </summary>
        public GainLossonDerecognitionofAvailableForSaleFinancialAssetsIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the GainLossonDerecognitionofAvailableForSaleFinancialAssetsIncomeStatement class
        /// </summary>
        public GainLossonDerecognitionofAvailableForSaleFinancialAssetsIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Negative Goodwill recognized in the Income Statement. Negative Goodwill arises where the net assets at the date of acquisition,
    /// fairly valued, falls below the cost of acquisition.
    /// </summary>
    public class NegativeGoodwillImmediatelyRecognizedIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the NegativeGoodwillImmediatelyRecognizedIncomeStatement class
        /// </summary>
        public NegativeGoodwillImmediatelyRecognizedIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the NegativeGoodwillImmediatelyRecognizedIncomeStatement class
        /// </summary>
        public NegativeGoodwillImmediatelyRecognizedIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Gain or loss on derivatives investment due to the fair value adjustment.
    /// </summary>
    public class GainsLossesonFinancialInstrumentsDuetoFairValueAdjustmentsinHedgeAccountingTotalIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the GainsLossesonFinancialInstrumentsDuetoFairValueAdjustmentsinHedgeAccountingTotalIncomeStatement class
        /// </summary>
        public GainsLossesonFinancialInstrumentsDuetoFairValueAdjustmentsinHedgeAccountingTotalIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the GainsLossesonFinancialInstrumentsDuetoFairValueAdjustmentsinHedgeAccountingTotalIncomeStatement class
        /// </summary>
        public GainsLossesonFinancialInstrumentsDuetoFairValueAdjustmentsinHedgeAccountingTotalIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Impairment or reversal of impairment on financial instrument such as derivative. This is a contra account under Total Revenue in
    /// banks.
    /// </summary>
    public class ImpairmentLossesReversalsFinancialInstrumentsNetIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ImpairmentLossesReversalsFinancialInstrumentsNetIncomeStatement class
        /// </summary>
        public ImpairmentLossesReversalsFinancialInstrumentsNetIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the ImpairmentLossesReversalsFinancialInstrumentsNetIncomeStatement class
        /// </summary>
        public ImpairmentLossesReversalsFinancialInstrumentsNetIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// All reported claims arising out of incidents in that year are considered incurred grouped with claims paid out.
    /// </summary>
    public class ClaimsandPaidIncurredIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ClaimsandPaidIncurredIncomeStatement class
        /// </summary>
        public ClaimsandPaidIncurredIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the ClaimsandPaidIncurredIncomeStatement class
        /// </summary>
        public ClaimsandPaidIncurredIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Claim on the reinsurance company and take the benefits.
    /// </summary>
    public class ReinsuranceRecoveriesClaimsandBenefitsIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ReinsuranceRecoveriesClaimsandBenefitsIncomeStatement class
        /// </summary>
        public ReinsuranceRecoveriesClaimsandBenefitsIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the ReinsuranceRecoveriesClaimsandBenefitsIncomeStatement class
        /// </summary>
        public ReinsuranceRecoveriesClaimsandBenefitsIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Income/Expense due to changes between periods in insurance liabilities.
    /// </summary>
    public class ChangeinInsuranceLiabilitiesNetofReinsuranceIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ChangeinInsuranceLiabilitiesNetofReinsuranceIncomeStatement class
        /// </summary>
        public ChangeinInsuranceLiabilitiesNetofReinsuranceIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the ChangeinInsuranceLiabilitiesNetofReinsuranceIncomeStatement class
        /// </summary>
        public ChangeinInsuranceLiabilitiesNetofReinsuranceIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Income/Expense due to changes between periods in Investment Contracts.
    /// </summary>
    public class ChangeinInvestmentContractIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ChangeinInvestmentContractIncomeStatement class
        /// </summary>
        public ChangeinInvestmentContractIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the ChangeinInvestmentContractIncomeStatement class
        /// </summary>
        public ChangeinInvestmentContractIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Provision for the risk of loss of principal or loss of a financial reward stemming from a borrower's failure to repay a loan or otherwise
    /// meet a contractual obligation. Credit risk arises whenever a borrower is expecting to use future cash flows to pay a current debt.
    /// Investors are compensated for assuming credit risk by way of interest payments from the borrower or issuer of a debt obligation.
    /// This is a contra account under Total Revenue in banks.
    /// </summary>
    public class CreditRiskProvisionsIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the CreditRiskProvisionsIncomeStatement class
        /// </summary>
        public CreditRiskProvisionsIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the CreditRiskProvisionsIncomeStatement class
        /// </summary>
        public CreditRiskProvisionsIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// This is the portion under Staff Costs that represents salary paid to the employees in respect of their work.
    /// </summary>
    public class WagesandSalariesIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the WagesandSalariesIncomeStatement class
        /// </summary>
        public WagesandSalariesIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the WagesandSalariesIncomeStatement class
        /// </summary>
        public WagesandSalariesIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Total other income and expense of the company that cannot be identified by other specific items in the Non-Operating section.
    /// </summary>
    public class OtherNonOperatingIncomeExpensesIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the OtherNonOperatingIncomeExpensesIncomeStatement class
        /// </summary>
        public OtherNonOperatingIncomeExpensesIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the OtherNonOperatingIncomeExpensesIncomeStatement class
        /// </summary>
        public OtherNonOperatingIncomeExpensesIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Other income of the company that cannot be identified by other specific items in the Non-Operating section.
    /// </summary>
    public class OtherNonOperatingIncomeIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the OtherNonOperatingIncomeIncomeStatement class
        /// </summary>
        public OtherNonOperatingIncomeIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the OtherNonOperatingIncomeIncomeStatement class
        /// </summary>
        public OtherNonOperatingIncomeIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Other expenses of the company that cannot be identified by other specific items in the Non-Operating section.
    /// </summary>
    public class OtherNonOperatingExpensesIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the OtherNonOperatingExpensesIncomeStatement class
        /// </summary>
        public OtherNonOperatingExpensesIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the OtherNonOperatingExpensesIncomeStatement class
        /// </summary>
        public OtherNonOperatingExpensesIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Total unusual items including Negative Goodwill.
    /// </summary>
    public class TotalUnusualItemsIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the TotalUnusualItemsIncomeStatement class
        /// </summary>
        public TotalUnusualItemsIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the TotalUnusualItemsIncomeStatement class
        /// </summary>
        public TotalUnusualItemsIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The sum of all the identifiable operating and non-operating unusual items.
    /// </summary>
    public class TotalUnusualItemsExcludingGoodwillIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the TotalUnusualItemsExcludingGoodwillIncomeStatement class
        /// </summary>
        public TotalUnusualItemsExcludingGoodwillIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the TotalUnusualItemsExcludingGoodwillIncomeStatement class
        /// </summary>
        public TotalUnusualItemsExcludingGoodwillIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Tax rate used for Morningstar calculations.
    /// </summary>
    public class TaxRateForCalcsIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the TaxRateForCalcsIncomeStatement class
        /// </summary>
        public TaxRateForCalcsIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the TaxRateForCalcsIncomeStatement class
        /// </summary>
        public TaxRateForCalcsIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Tax effect of the usual items
    /// </summary>
    public class TaxEffectOfUnusualItemsIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the TaxEffectOfUnusualItemsIncomeStatement class
        /// </summary>
        public TaxEffectOfUnusualItemsIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the TaxEffectOfUnusualItemsIncomeStatement class
        /// </summary>
        public TaxEffectOfUnusualItemsIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// EBITDA less Total Unusual Items
    /// </summary>
    public class NormalizedEBITDAIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the NormalizedEBITDAIncomeStatement class
        /// </summary>
        public NormalizedEBITDAIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the NormalizedEBITDAIncomeStatement class
        /// </summary>
        public NormalizedEBITDAIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The cost to the company for granting stock options to reward employees.
    /// </summary>
    public class StockBasedCompensationIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the StockBasedCompensationIncomeStatement class
        /// </summary>
        public StockBasedCompensationIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the StockBasedCompensationIncomeStatement class
        /// </summary>
        public StockBasedCompensationIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Net income to calculate Diluted EPS, accounting for adjustments assuming that all the convertible instruments are being converted
    /// to Common Equity.
    /// </summary>
    public class DilutedNIAvailtoComStockholdersIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the DilutedNIAvailtoComStockholdersIncomeStatement class
        /// </summary>
        public DilutedNIAvailtoComStockholdersIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the DilutedNIAvailtoComStockholdersIncomeStatement class
        /// </summary>
        public DilutedNIAvailtoComStockholdersIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Income/Expenses due to the insurer's liabilities incurred in Investment Contracts.
    /// </summary>
    public class InvestmentContractLiabilitiesIncurredIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the InvestmentContractLiabilitiesIncurredIncomeStatement class
        /// </summary>
        public InvestmentContractLiabilitiesIncurredIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the InvestmentContractLiabilitiesIncurredIncomeStatement class
        /// </summary>
        public InvestmentContractLiabilitiesIncurredIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Income/Expense due to recoveries from reinsurers for Investment Contracts.
    /// </summary>
    public class ReinsuranceRecoveriesofInvestmentContractIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ReinsuranceRecoveriesofInvestmentContractIncomeStatement class
        /// </summary>
        public ReinsuranceRecoveriesofInvestmentContractIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the ReinsuranceRecoveriesofInvestmentContractIncomeStatement class
        /// </summary>
        public ReinsuranceRecoveriesofInvestmentContractIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Total amount paid in dividends to equity securities investors.
    /// </summary>
    public class TotalDividendPaymentofEquitySharesIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the TotalDividendPaymentofEquitySharesIncomeStatement class
        /// </summary>
        public TotalDividendPaymentofEquitySharesIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the TotalDividendPaymentofEquitySharesIncomeStatement class
        /// </summary>
        public TotalDividendPaymentofEquitySharesIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Total amount paid in dividends to Non-Equity securities investors.
    /// </summary>
    public class TotalDividendPaymentofNonEquitySharesIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the TotalDividendPaymentofNonEquitySharesIncomeStatement class
        /// </summary>
        public TotalDividendPaymentofNonEquitySharesIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the TotalDividendPaymentofNonEquitySharesIncomeStatement class
        /// </summary>
        public TotalDividendPaymentofNonEquitySharesIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The change in the amount of the unearned premium reserves maintained by insurers.
    /// </summary>
    public class ChangeinTheGrossProvisionforUnearnedPremiumsIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ChangeinTheGrossProvisionforUnearnedPremiumsIncomeStatement class
        /// </summary>
        public ChangeinTheGrossProvisionforUnearnedPremiumsIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the ChangeinTheGrossProvisionforUnearnedPremiumsIncomeStatement class
        /// </summary>
        public ChangeinTheGrossProvisionforUnearnedPremiumsIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The change in the amount of unearned premium reserve to be covered by reinsurers.
    /// </summary>
    public class ChangeinTheGrossProvisionforUnearnedPremiumsReinsurersShareIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ChangeinTheGrossProvisionforUnearnedPremiumsReinsurersShareIncomeStatement class
        /// </summary>
        public ChangeinTheGrossProvisionforUnearnedPremiumsReinsurersShareIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the ChangeinTheGrossProvisionforUnearnedPremiumsReinsurersShareIncomeStatement class
        /// </summary>
        public ChangeinTheGrossProvisionforUnearnedPremiumsReinsurersShareIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Income/Expense due to the insurer's changes in insurance liabilities.
    /// </summary>
    public class ClaimsandChangeinInsuranceLiabilitiesIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ClaimsandChangeinInsuranceLiabilitiesIncomeStatement class
        /// </summary>
        public ClaimsandChangeinInsuranceLiabilitiesIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the ClaimsandChangeinInsuranceLiabilitiesIncomeStatement class
        /// </summary>
        public ClaimsandChangeinInsuranceLiabilitiesIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Income/Expense due to recoveries from reinsurers for insurance liabilities.
    /// </summary>
    public class ReinsuranceRecoveriesofInsuranceLiabilitiesIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ReinsuranceRecoveriesofInsuranceLiabilitiesIncomeStatement class
        /// </summary>
        public ReinsuranceRecoveriesofInsuranceLiabilitiesIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the ReinsuranceRecoveriesofInsuranceLiabilitiesIncomeStatement class
        /// </summary>
        public ReinsuranceRecoveriesofInsuranceLiabilitiesIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Operating profit/loss as reported by the company, may be the same or not the same as Morningstar's standardized definition.
    /// </summary>
    public class TotalOperatingIncomeAsReportedIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the TotalOperatingIncomeAsReportedIncomeStatement class
        /// </summary>
        public TotalOperatingIncomeAsReportedIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the TotalOperatingIncomeAsReportedIncomeStatement class
        /// </summary>
        public TotalOperatingIncomeAsReportedIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Other General and Administrative Expenses not categorized that the company incurs that are not directly tied to a specific function
    /// such as manufacturing, production, or sales.
    /// </summary>
    public class OtherGAIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the OtherGAIncomeStatement class
        /// </summary>
        public OtherGAIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the OtherGAIncomeStatement class
        /// </summary>
        public OtherGAIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Other costs associated with the revenue-generating activities of the company not categorized above.
    /// </summary>
    public class OtherCostofRevenueIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the OtherCostofRevenueIncomeStatement class
        /// </summary>
        public OtherCostofRevenueIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the OtherCostofRevenueIncomeStatement class
        /// </summary>
        public OtherCostofRevenueIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Costs paid to use the facilities necessary to generate revenue during the accounting Intperiod.
    /// </summary>
    public class RentandLandingFeesCostofRevenueIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the RentandLandingFeesCostofRevenueIncomeStatement class
        /// </summary>
        public RentandLandingFeesCostofRevenueIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the RentandLandingFeesCostofRevenueIncomeStatement class
        /// </summary>
        public RentandLandingFeesCostofRevenueIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Costs of depreciation and amortization on assets used for the revenue-generating activities during the accounting period
    /// </summary>
    public class DDACostofRevenueIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the DDACostofRevenueIncomeStatement class
        /// </summary>
        public DDACostofRevenueIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the DDACostofRevenueIncomeStatement class
        /// </summary>
        public DDACostofRevenueIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The sum of all rent expenses incurred by the company for operating leases during the year, it is a supplemental value which would
    /// be reported outside consolidated statements or consolidated statement's footnotes.
    /// </summary>
    public class RentExpenseSupplementalIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the RentExpenseSupplementalIncomeStatement class
        /// </summary>
        public RentExpenseSupplementalIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the RentExpenseSupplementalIncomeStatement class
        /// </summary>
        public RentExpenseSupplementalIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// This calculation represents pre-tax earnings adjusted for items that are irregular or unusual in nature, and/or are non-recurring. This
    /// can be used to fairly measure a company's profitability. This is calculated using Pre-Tax Income plus/minus any unusual Items and
    /// Goodwill Impairments/Write Offs.
    /// </summary>
    public class NormalizedPreTaxIncomeIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the NormalizedPreTaxIncomeIncomeStatement class
        /// </summary>
        public NormalizedPreTaxIncomeIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the NormalizedPreTaxIncomeIncomeStatement class
        /// </summary>
        public NormalizedPreTaxIncomeIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The aggregate amount of research and development expenses during the year. It is a supplemental value which would be reported
    /// outside consolidated statements.
    /// </summary>
    public class ResearchAndDevelopmentExpensesSupplementalIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ResearchAndDevelopmentExpensesSupplementalIncomeStatement class
        /// </summary>
        public ResearchAndDevelopmentExpensesSupplementalIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the ResearchAndDevelopmentExpensesSupplementalIncomeStatement class
        /// </summary>
        public ResearchAndDevelopmentExpensesSupplementalIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The current period expense charged against earnings on tangible asset over its useful life. It is a supplemental value which would
    /// be reported outside consolidated statements.
    /// </summary>
    public class DepreciationSupplementalIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the DepreciationSupplementalIncomeStatement class
        /// </summary>
        public DepreciationSupplementalIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the DepreciationSupplementalIncomeStatement class
        /// </summary>
        public DepreciationSupplementalIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The current period expense charged against earnings on intangible asset over its useful life. It is a supplemental value which would
    /// be reported outside consolidated statements.
    /// </summary>
    public class AmortizationSupplementalIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the AmortizationSupplementalIncomeStatement class
        /// </summary>
        public AmortizationSupplementalIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the AmortizationSupplementalIncomeStatement class
        /// </summary>
        public AmortizationSupplementalIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Total revenue as reported by the company, may be the same or not the same as Morningstar's standardized definition.
    /// </summary>
    public class TotalRevenueAsReportedIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the TotalRevenueAsReportedIncomeStatement class
        /// </summary>
        public TotalRevenueAsReportedIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the TotalRevenueAsReportedIncomeStatement class
        /// </summary>
        public TotalRevenueAsReportedIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Operating expense as reported by the company, may be the same or not the same as Morningstar's standardized definition.
    /// </summary>
    public class OperatingExpenseAsReportedIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the OperatingExpenseAsReportedIncomeStatement class
        /// </summary>
        public OperatingExpenseAsReportedIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the OperatingExpenseAsReportedIncomeStatement class
        /// </summary>
        public OperatingExpenseAsReportedIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Earnings adjusted for items that are irregular or unusual in nature, and/or are non-recurring. This can be used to fairly measure a
    /// company's profitability. This is as reported by the company, may be the same or not the same as Morningstar's standardized
    /// definition.
    /// </summary>
    public class NormalizedIncomeAsReportedIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the NormalizedIncomeAsReportedIncomeStatement class
        /// </summary>
        public NormalizedIncomeAsReportedIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the NormalizedIncomeAsReportedIncomeStatement class
        /// </summary>
        public NormalizedIncomeAsReportedIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// EBITDA less Total Unusual Items. This is as reported by the company, may be the same or not the same as Morningstar's
    /// standardized definition.
    /// </summary>
    public class NormalizedEBITDAAsReportedIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the NormalizedEBITDAAsReportedIncomeStatement class
        /// </summary>
        public NormalizedEBITDAAsReportedIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the NormalizedEBITDAAsReportedIncomeStatement class
        /// </summary>
        public NormalizedEBITDAAsReportedIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// EBIT less Total Unusual Items. This is as reported by the company, may be the same or not the same as Morningstar's standardized
    /// definition.
    /// </summary>
    public class NormalizedEBITAsReportedIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the NormalizedEBITAsReportedIncomeStatement class
        /// </summary>
        public NormalizedEBITAsReportedIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the NormalizedEBITAsReportedIncomeStatement class
        /// </summary>
        public NormalizedEBITAsReportedIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Operating profit adjusted for items that are irregular or unusual in nature, and/or are non-recurring. This can be used to fairly
    /// measure a company's profitability. This is as reported by the company, may be the same or not the same as Morningstar's
    /// standardized definition.
    /// </summary>
    public class NormalizedOperatingProfitAsReportedIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the NormalizedOperatingProfitAsReportedIncomeStatement class
        /// </summary>
        public NormalizedOperatingProfitAsReportedIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the NormalizedOperatingProfitAsReportedIncomeStatement class
        /// </summary>
        public NormalizedOperatingProfitAsReportedIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The average tax rate for the period as reported by the company, may be the same or not the same as Morningstar's standardized
    /// definition.
    /// </summary>
    public class EffectiveTaxRateAsReportedIncomeStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the EffectiveTaxRateAsReportedIncomeStatement class
        /// </summary>
        public EffectiveTaxRateAsReportedIncomeStatement() { }

        /// <summary>
        /// Creates an instance of the EffectiveTaxRateAsReportedIncomeStatement class
        /// </summary>
        public EffectiveTaxRateAsReportedIncomeStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Any money that a company owes its suppliers for goods and services purchased on credit and is expected to pay within the next
    /// year or operating cycle.
    /// </summary>
    public class AccountsPayableBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the AccountsPayableBalanceSheet class
        /// </summary>
        public AccountsPayableBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the AccountsPayableBalanceSheet class
        /// </summary>
        public AccountsPayableBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Accounts owed to a company by customers within a year as a result of exchanging goods or services on credit.
    /// </summary>
    public class AccountsReceivableBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the AccountsReceivableBalanceSheet class
        /// </summary>
        public AccountsReceivableBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the AccountsReceivableBalanceSheet class
        /// </summary>
        public AccountsReceivableBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// An expense recognized before it is paid for. Includes compensation, interest, pensions and all other miscellaneous accruals
    /// reported by the company. Expenses incurred during the accounting period, but not required to be paid until a later date.
    /// </summary>
    public class CurrentAccruedExpensesBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the CurrentAccruedExpensesBalanceSheet class
        /// </summary>
        public CurrentAccruedExpensesBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the CurrentAccruedExpensesBalanceSheet class
        /// </summary>
        public CurrentAccruedExpensesBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// An expense that has occurred but the transaction has not been entered in the accounting records. Accordingly, an adjusting entry
    /// is made to debit the appropriate expense account and to credit a liability account such as accrued expenses payable or accounts
    /// payable.
    /// </summary>
    public class NonCurrentAccruedExpensesBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the NonCurrentAccruedExpensesBalanceSheet class
        /// </summary>
        public NonCurrentAccruedExpensesBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the NonCurrentAccruedExpensesBalanceSheet class
        /// </summary>
        public NonCurrentAccruedExpensesBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Interest, dividends, rents, ancillary and other revenues earned but not yet received by the entity on its investments.
    /// </summary>
    public class AccruedInvestmentIncomeBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the AccruedInvestmentIncomeBalanceSheet class
        /// </summary>
        public AccruedInvestmentIncomeBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the AccruedInvestmentIncomeBalanceSheet class
        /// </summary>
        public AccruedInvestmentIncomeBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The cumulative amount of wear and tear or obsolescence charged against the fixed assets of a company.
    /// </summary>
    public class AccumulatedDepreciationBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the AccumulatedDepreciationBalanceSheet class
        /// </summary>
        public AccumulatedDepreciationBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the AccumulatedDepreciationBalanceSheet class
        /// </summary>
        public AccumulatedDepreciationBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The aggregate amount of gains or losses that are not part of retained earnings. It is also called other comprehensive income.
    /// </summary>
    public class GainsLossesNotAffectingRetainedEarningsBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the GainsLossesNotAffectingRetainedEarningsBalanceSheet class
        /// </summary>
        public GainsLossesNotAffectingRetainedEarningsBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the GainsLossesNotAffectingRetainedEarningsBalanceSheet class
        /// </summary>
        public GainsLossesNotAffectingRetainedEarningsBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Excess of issue price over par or stated value of the entity's capital stock and amounts received from other transactions involving
    /// the entity's stock or stockholders. Includes adjustments to additional paid in capital. There are two major categories of additional
    /// paid in capital: 1) Paid in capital in excess of par/stated value, which is the difference between the actual issue price of the shares
    /// and the shares' par/stated value. 2) Paid in capital from other transactions which includes treasury stock, retirement of stock, stock
    /// dividends recorded at market, lapse of stock purchase warrants, conversion of convertible bonds in excess of the par value of the
    /// stock, and any other additional capital from the company's own stock transactions.
    /// </summary>
    public class AdditionalPaidInCapitalBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the AdditionalPaidInCapitalBalanceSheet class
        /// </summary>
        public AdditionalPaidInCapitalBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the AdditionalPaidInCapitalBalanceSheet class
        /// </summary>
        public AdditionalPaidInCapitalBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// A contra account sets aside as an allowance for bad loans (e.g. customer defaults).
    /// </summary>
    public class AllowanceForLoansAndLeaseLossesBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the AllowanceForLoansAndLeaseLossesBalanceSheet class
        /// </summary>
        public AllowanceForLoansAndLeaseLossesBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the AllowanceForLoansAndLeaseLossesBalanceSheet class
        /// </summary>
        public AllowanceForLoansAndLeaseLossesBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// For an unclassified balance sheet, this item represents equity securities categorized neither as held-to-maturity nor trading. Equity
    /// securities represent ownership interests or the right to acquire ownership interests in corporations and other legal entities which
    /// ownership interest is represented by shares of common or preferred stock (which is not mandatory redeemable or redeemable at
    /// the option of the holder), convertible securities, stock rights, or stock warrants. This category includes preferred stocks, available-
    /// for-sale and common stock, available-for-sale.
    /// </summary>
    public class AvailableForSaleSecuritiesBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the AvailableForSaleSecuritiesBalanceSheet class
        /// </summary>
        public AvailableForSaleSecuritiesBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the AvailableForSaleSecuritiesBalanceSheet class
        /// </summary>
        public AvailableForSaleSecuritiesBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The total amount of stock authorized for issue by a corporation, including common and preferred stock.
    /// </summary>
    public class CapitalStockBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the CapitalStockBalanceSheet class
        /// </summary>
        public CapitalStockBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the CapitalStockBalanceSheet class
        /// </summary>
        public CapitalStockBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Cash includes currency on hand as well as demand deposits with banks or financial institutions. It also includes other kinds of
    /// accounts that have the general characteristics of demand deposits in that the customer may deposit additional funds at any time
    /// and also effectively may withdraw funds at any time without prior notice or penalty.
    /// </summary>
    public class CashBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the CashBalanceSheet class
        /// </summary>
        public CashBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the CashBalanceSheet class
        /// </summary>
        public CashBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Cash equivalents, excluding items classified as marketable securities, include short-term, highly liquid investments that are both
    /// readily convertible to known amounts of cash, and so near their maturity that they present insignificant risk of changes in value
    /// because of changes in interest rates.  Generally, only investments with original maturities of three months or less qualify under this
    /// definition. Original maturity means original maturity to the entity holding the investment. For example, both a three-month US
    /// Treasury bill and a three-year Treasury note purchased three months from maturity qualify as cash equivalents. However, a Treasury
    /// note purchased three years ago does not become a cash equivalent when its remaining maturity is three months.
    /// </summary>
    public class CashEquivalentsBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the CashEquivalentsBalanceSheet class
        /// </summary>
        public CashEquivalentsBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the CashEquivalentsBalanceSheet class
        /// </summary>
        public CashEquivalentsBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Includes unrestricted cash on hand, money market instruments and other debt securities which can be converted to cash
    /// immediately.
    /// </summary>
    public class CashAndCashEquivalentsBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the CashAndCashEquivalentsBalanceSheet class
        /// </summary>
        public CashAndCashEquivalentsBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the CashAndCashEquivalentsBalanceSheet class
        /// </summary>
        public CashAndCashEquivalentsBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Includes cash on hand (currency and coin), cash items in process of collection, non-interest bearing deposits due from other
    /// financial institutions (including corporate credit unions), and balances with the Federal Reserve Banks, Federal Home Loan Banks
    /// and central banks.
    /// </summary>
    public class CashAndDueFromBanksBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the CashAndDueFromBanksBalanceSheet class
        /// </summary>
        public CashAndDueFromBanksBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the CashAndDueFromBanksBalanceSheet class
        /// </summary>
        public CashAndDueFromBanksBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The aggregate amount of cash, cash equivalents, and federal funds sold.
    /// </summary>
    public class CashCashEquivalentsAndFederalFundsSoldBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the CashCashEquivalentsAndFederalFundsSoldBalanceSheet class
        /// </summary>
        public CashCashEquivalentsAndFederalFundsSoldBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the CashCashEquivalentsAndFederalFundsSoldBalanceSheet class
        /// </summary>
        public CashCashEquivalentsAndFederalFundsSoldBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The aggregate amount of cash, cash equivalents, and marketable securities.
    /// </summary>
    public class CashCashEquivalentsAndMarketableSecuritiesBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the CashCashEquivalentsAndMarketableSecuritiesBalanceSheet class
        /// </summary>
        public CashCashEquivalentsAndMarketableSecuritiesBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the CashCashEquivalentsAndMarketableSecuritiesBalanceSheet class
        /// </summary>
        public CashCashEquivalentsAndMarketableSecuritiesBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Common stock (all issues) at par value, as reported within the Stockholder's Equity section of the balance sheet; i.e. it is one
    /// component of Common Stockholder's Equity
    /// </summary>
    public class CommonStockBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the CommonStockBalanceSheet class
        /// </summary>
        public CommonStockBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the CommonStockBalanceSheet class
        /// </summary>
        public CommonStockBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The total amount of assets considered to be convertible into cash within a relatively short period of time, usually a year.
    /// </summary>
    public class CurrentAssetsBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the CurrentAssetsBalanceSheet class
        /// </summary>
        public CurrentAssetsBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the CurrentAssetsBalanceSheet class
        /// </summary>
        public CurrentAssetsBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Represents the total amount of long-term debt such as bank loans and commercial paper, which is due within one year.
    /// </summary>
    public class CurrentDebtBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the CurrentDebtBalanceSheet class
        /// </summary>
        public CurrentDebtBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the CurrentDebtBalanceSheet class
        /// </summary>
        public CurrentDebtBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// All borrowings due within one year including current portions of long-term debt and capital leases as well as short-term debt such
    /// as bank loans and commercial paper.
    /// </summary>
    public class CurrentDebtAndCapitalLeaseObligationBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the CurrentDebtAndCapitalLeaseObligationBalanceSheet class
        /// </summary>
        public CurrentDebtAndCapitalLeaseObligationBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the CurrentDebtAndCapitalLeaseObligationBalanceSheet class
        /// </summary>
        public CurrentDebtAndCapitalLeaseObligationBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The debts or obligations of the firm that are due within one year.
    /// </summary>
    public class CurrentLiabilitiesBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the CurrentLiabilitiesBalanceSheet class
        /// </summary>
        public CurrentLiabilitiesBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the CurrentLiabilitiesBalanceSheet class
        /// </summary>
        public CurrentLiabilitiesBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Represents the total amount of long-term capital leases that must be paid within the next accounting Intperiod. Capital lease
    /// obligations are contractual obligations that arise from obtaining the use of property or equipment via a capital lease contract.
    /// </summary>
    public class CurrentCapitalLeaseObligationBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the CurrentCapitalLeaseObligationBalanceSheet class
        /// </summary>
        public CurrentCapitalLeaseObligationBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the CurrentCapitalLeaseObligationBalanceSheet class
        /// </summary>
        public CurrentCapitalLeaseObligationBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// An amount owed to a firm that is not expected to be received by the firm within one year from the date of the balance sheet.
    /// </summary>
    public class DeferredAssetsBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the DeferredAssetsBalanceSheet class
        /// </summary>
        public DeferredAssetsBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the DeferredAssetsBalanceSheet class
        /// </summary>
        public DeferredAssetsBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// An expenditure not recognized as a cost of operation of the period in which incurred, but carried forward to be written off in future
    /// periods.
    /// </summary>
    public class DeferredCostsBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the DeferredCostsBalanceSheet class
        /// </summary>
        public DeferredCostsBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the DeferredCostsBalanceSheet class
        /// </summary>
        public DeferredCostsBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Represents the non-current portion of obligations, which is a liability that usually would have been paid but is now past due.
    /// </summary>
    public class NonCurrentDeferredLiabilitiesBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the NonCurrentDeferredLiabilitiesBalanceSheet class
        /// </summary>
        public NonCurrentDeferredLiabilitiesBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the NonCurrentDeferredLiabilitiesBalanceSheet class
        /// </summary>
        public NonCurrentDeferredLiabilitiesBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Represents the current portion of obligations, which is a liability that usually would have been paid but is now past due.
    /// </summary>
    public class CurrentDeferredLiabilitiesBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the CurrentDeferredLiabilitiesBalanceSheet class
        /// </summary>
        public CurrentDeferredLiabilitiesBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the CurrentDeferredLiabilitiesBalanceSheet class
        /// </summary>
        public CurrentDeferredLiabilitiesBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Net amount of deferred policy acquisition costs capitalized on contracts remaining in force as of the balance sheet date.
    /// </summary>
    public class DeferredPolicyAcquisitionCostsBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the DeferredPolicyAcquisitionCostsBalanceSheet class
        /// </summary>
        public DeferredPolicyAcquisitionCostsBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the DeferredPolicyAcquisitionCostsBalanceSheet class
        /// </summary>
        public DeferredPolicyAcquisitionCostsBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Represents collections of cash or other assets related to revenue producing activity for which revenue has not yet been recognized.
    /// Generally, an entity records deferred revenue when it receives consideration from a customer before achieving certain criteria that
    /// must be met for revenue to be recognized in conformity with GAAP. It can be either current or non-current item. Also called
    /// unearned revenue.
    /// </summary>
    public class CurrentDeferredRevenueBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the CurrentDeferredRevenueBalanceSheet class
        /// </summary>
        public CurrentDeferredRevenueBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the CurrentDeferredRevenueBalanceSheet class
        /// </summary>
        public CurrentDeferredRevenueBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The non-current portion of deferred revenue amount as of the balance sheet date. Deferred revenue is a liability related to revenue
    /// producing activity for which revenue has not yet been recognized, and is not expected be recognized in the next twelve months.
    /// </summary>
    public class NonCurrentDeferredRevenueBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the NonCurrentDeferredRevenueBalanceSheet class
        /// </summary>
        public NonCurrentDeferredRevenueBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the NonCurrentDeferredRevenueBalanceSheet class
        /// </summary>
        public NonCurrentDeferredRevenueBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// An asset on a company's balance sheet that may be used to reduce any subsequent period's income tax expense. Deferred tax
    /// assets can arise due to net loss carryovers, which are only recorded as assets if it is deemed more likely than not that the asset
    /// will be used in future fiscal periods.
    /// </summary>
    public class DeferredTaxAssetsBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the DeferredTaxAssetsBalanceSheet class
        /// </summary>
        public DeferredTaxAssetsBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the DeferredTaxAssetsBalanceSheet class
        /// </summary>
        public DeferredTaxAssetsBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Meaning a future tax asset, resulting from temporary differences between book (accounting) value of assets and liabilities and their
    /// tax value, or timing differences between the recognition of gains and losses in financial statements and their recognition in a tax
    /// computation. It is also called future tax.
    /// </summary>
    public class CurrentDeferredTaxesAssetsBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the CurrentDeferredTaxesAssetsBalanceSheet class
        /// </summary>
        public CurrentDeferredTaxesAssetsBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the CurrentDeferredTaxesAssetsBalanceSheet class
        /// </summary>
        public CurrentDeferredTaxesAssetsBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Meaning a future tax liability, resulting from temporary differences between book (accounting) value of assets and liabilities and
    /// their tax value, or timing differences between the recognition of gains and losses in financial statements and their recognition in a
    /// tax computation. Deferred tax liabilities generally arise where tax relief is provided in advance of an accounting expense, or income
    /// is accrued but not taxed until received.
    /// </summary>
    public class CurrentDeferredTaxesLiabilitiesBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the CurrentDeferredTaxesLiabilitiesBalanceSheet class
        /// </summary>
        public CurrentDeferredTaxesLiabilitiesBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the CurrentDeferredTaxesLiabilitiesBalanceSheet class
        /// </summary>
        public CurrentDeferredTaxesLiabilitiesBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// A result of timing differences between taxable incomes reported on the income statement and taxable income from the company's
    /// tax return. Depending on the positioning of deferred income taxes, the field may be either current (within current assets) or non-
    /// current (below total current assets). Typically a company will have two deferred income taxes fields.
    /// </summary>
    public class NonCurrentDeferredTaxesAssetsBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the NonCurrentDeferredTaxesAssetsBalanceSheet class
        /// </summary>
        public NonCurrentDeferredTaxesAssetsBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the NonCurrentDeferredTaxesAssetsBalanceSheet class
        /// </summary>
        public NonCurrentDeferredTaxesAssetsBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The estimated future tax obligations, which usually arise when different accounting methods are used for financial statements and
    /// tax statement It is also an add-back to the cash flow statement. Deferred income taxes include accumulated tax deferrals due to
    /// accelerated depreciation and investment credit.
    /// </summary>
    public class NonCurrentDeferredTaxesLiabilitiesBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the NonCurrentDeferredTaxesLiabilitiesBalanceSheet class
        /// </summary>
        public NonCurrentDeferredTaxesLiabilitiesBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the NonCurrentDeferredTaxesLiabilitiesBalanceSheet class
        /// </summary>
        public NonCurrentDeferredTaxesLiabilitiesBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// This asset represents equity securities categorized neither as held-to-maturity nor trading.
    /// </summary>
    public class EquityInvestmentsBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the EquityInvestmentsBalanceSheet class
        /// </summary>
        public EquityInvestmentsBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the EquityInvestmentsBalanceSheet class
        /// </summary>
        public EquityInvestmentsBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// This liability refers to the amount shown on the books that a bank with insufficient reserves borrows, at the federal funds rate, from
    /// another bank to meet its reserve requirements; and the amount of securities that an institution sells and agrees to repurchase at a
    /// specified date for a specified price, net of any reductions or offsets.
    /// </summary>
    public class FederalFundsPurchasedAndSecuritiesSoldUnderAgreementToRepurchaseBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the FederalFundsPurchasedAndSecuritiesSoldUnderAgreementToRepurchaseBalanceSheet class
        /// </summary>
        public FederalFundsPurchasedAndSecuritiesSoldUnderAgreementToRepurchaseBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the FederalFundsPurchasedAndSecuritiesSoldUnderAgreementToRepurchaseBalanceSheet class
        /// </summary>
        public FederalFundsPurchasedAndSecuritiesSoldUnderAgreementToRepurchaseBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// This asset refers to very-short-term loans of funds to other banks and securities dealers.
    /// </summary>
    public class FederalFundsSoldAndSecuritiesPurchaseUnderAgreementsToResellBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the FederalFundsSoldAndSecuritiesPurchaseUnderAgreementsToResellBalanceSheet class
        /// </summary>
        public FederalFundsSoldAndSecuritiesPurchaseUnderAgreementsToResellBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the FederalFundsSoldAndSecuritiesPurchaseUnderAgreementsToResellBalanceSheet class
        /// </summary>
        public FederalFundsSoldAndSecuritiesPurchaseUnderAgreementsToResellBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// This asset refers to types of investments that may be contained within the fixed maturity category which securities are having a
    /// stated final repayment date. Examples of items within this category may include bonds, including convertibles and bonds with
    /// warrants, and redeemable preferred stocks.
    /// </summary>
    public class FixedMaturityInvestmentsBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the FixedMaturityInvestmentsBalanceSheet class
        /// </summary>
        public FixedMaturityInvestmentsBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the FixedMaturityInvestmentsBalanceSheet class
        /// </summary>
        public FixedMaturityInvestmentsBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Accounting policy pertaining to an insurance entity's net liability for future benefits (for example, death, cash surrender value) to be
    /// paid to or on behalf of policyholders, describing the bases, methodologies and components of the reserve, and assumptions
    /// regarding estimates of expected investment yields, mortality, morbidity, terminations and expenses.
    /// </summary>
    public class FuturePolicyBenefitsBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the FuturePolicyBenefitsBalanceSheet class
        /// </summary>
        public FuturePolicyBenefitsBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the FuturePolicyBenefitsBalanceSheet class
        /// </summary>
        public FuturePolicyBenefitsBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// In a limited partnership or master limited partnership form of business, this represents the balance of capital held by the general
    /// partners.
    /// </summary>
    public class GeneralPartnershipCapitalBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the GeneralPartnershipCapitalBalanceSheet class
        /// </summary>
        public GeneralPartnershipCapitalBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the GeneralPartnershipCapitalBalanceSheet class
        /// </summary>
        public GeneralPartnershipCapitalBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The excess of the cost of an acquired company over the sum of the fair market value of its identifiable individual assets less the
    /// liabilities.
    /// </summary>
    public class GoodwillBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the GoodwillBalanceSheet class
        /// </summary>
        public GoodwillBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the GoodwillBalanceSheet class
        /// </summary>
        public GoodwillBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Rights or economic benefits, such as patents and goodwill, that is not physical in nature. They are those that are neither physical
    /// nor financial in nature, nevertheless, have value to the company. Intangibles are listed net of accumulated amortization.
    /// </summary>
    public class GoodwillAndOtherIntangibleAssetsBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the GoodwillAndOtherIntangibleAssetsBalanceSheet class
        /// </summary>
        public GoodwillAndOtherIntangibleAssetsBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the GoodwillAndOtherIntangibleAssetsBalanceSheet class
        /// </summary>
        public GoodwillAndOtherIntangibleAssetsBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Represents the sum of all loans (commercial, consumer, mortgage, etc.) as well as leases before any provisions for loan losses or
    /// unearned discounts.
    /// </summary>
    public class GrossLoanBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the GrossLoanBalanceSheet class
        /// </summary>
        public GrossLoanBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the GrossLoanBalanceSheet class
        /// </summary>
        public GrossLoanBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Carrying amount at the balance sheet date for long-lived physical assets used in the normal conduct of business and not intended
    /// for resale. This can include land, physical structures, machinery, vehicles, furniture, computer equipment, construction in progress,
    /// and similar items. Amount does not include depreciation.
    /// </summary>
    public class GrossPPEBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the GrossPPEBalanceSheet class
        /// </summary>
        public GrossPPEBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the GrossPPEBalanceSheet class
        /// </summary>
        public GrossPPEBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Debt securities that a firm has the ability and intent to hold until maturity.
    /// </summary>
    public class HeldToMaturitySecuritiesBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the HeldToMaturitySecuritiesBalanceSheet class
        /// </summary>
        public HeldToMaturitySecuritiesBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the HeldToMaturitySecuritiesBalanceSheet class
        /// </summary>
        public HeldToMaturitySecuritiesBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// A current liability account which reflects the amount of income taxes currently due to the federal, state, and local governments.
    /// </summary>
    public class IncomeTaxPayableBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the IncomeTaxPayableBalanceSheet class
        /// </summary>
        public IncomeTaxPayableBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the IncomeTaxPayableBalanceSheet class
        /// </summary>
        public IncomeTaxPayableBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The aggregate of all domestic and foreign deposits in the bank that earns interests.
    /// </summary>
    public class InterestBearingDepositsLiabilitiesBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the InterestBearingDepositsLiabilitiesBalanceSheet class
        /// </summary>
        public InterestBearingDepositsLiabilitiesBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the InterestBearingDepositsLiabilitiesBalanceSheet class
        /// </summary>
        public InterestBearingDepositsLiabilitiesBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Sum of the carrying values as of the balance sheet date of interest payable on all forms of debt, including trade payable that has
    /// been incurred.
    /// </summary>
    public class InterestPayableBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the InterestPayableBalanceSheet class
        /// </summary>
        public InterestPayableBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the InterestPayableBalanceSheet class
        /// </summary>
        public InterestPayableBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Deposit of money with a financial institution, in consideration of which the financial institution pays or credits interest, or amounts in the nature
    /// of interest.
    /// </summary>
    public class InterestBearingDepositsAssetsBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the InterestBearingDepositsAssetsBalanceSheet class
        /// </summary>
        public InterestBearingDepositsAssetsBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the InterestBearingDepositsAssetsBalanceSheet class
        /// </summary>
        public InterestBearingDepositsAssetsBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// A company's merchandise, raw materials, and finished and unfinished products which have not yet been sold.
    /// </summary>
    public class InventoryBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the InventoryBalanceSheet class
        /// </summary>
        public InventoryBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the InventoryBalanceSheet class
        /// </summary>
        public InventoryBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// All investments in affiliates, real estate, securities, etc. Non-current investment, not including marketable securities.
    /// </summary>
    public class InvestmentsAndAdvancesBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the InvestmentsAndAdvancesBalanceSheet class
        /// </summary>
        public InvestmentsAndAdvancesBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the InvestmentsAndAdvancesBalanceSheet class
        /// </summary>
        public InvestmentsAndAdvancesBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// In a limited partnership or master limited partnership form of business, this represents the balance of capital held by the limited
    /// partners.
    /// </summary>
    public class LimitedPartnershipCapitalBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the LimitedPartnershipCapitalBalanceSheet class
        /// </summary>
        public LimitedPartnershipCapitalBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the LimitedPartnershipCapitalBalanceSheet class
        /// </summary>
        public LimitedPartnershipCapitalBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Sum of the carrying values as of the balance sheet date of all long-term debt, which is debt initially having maturities due after one
    /// year or beyond the operating cycle, if longer, but excluding the portions thereof scheduled to be repaid within one year or the
    /// normal operating cycle, if longer. Long-term debt includes notes payable, bonds payable, mortgage loans, convertible debt,
    /// subordinated debt and other types of long term debt.
    /// </summary>
    public class LongTermDebtBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the LongTermDebtBalanceSheet class
        /// </summary>
        public LongTermDebtBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the LongTermDebtBalanceSheet class
        /// </summary>
        public LongTermDebtBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// All borrowings lasting over one year including long-term debt and long-term portion of capital lease obligations.
    /// </summary>
    public class LongTermDebtAndCapitalLeaseObligationBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the LongTermDebtAndCapitalLeaseObligationBalanceSheet class
        /// </summary>
        public LongTermDebtAndCapitalLeaseObligationBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the LongTermDebtAndCapitalLeaseObligationBalanceSheet class
        /// </summary>
        public LongTermDebtAndCapitalLeaseObligationBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Often referred to simply as "investments". Long-term investments are to be held for many years and are not intended to be
    /// disposed in the near future. This group usually consists of four types of investments.
    /// </summary>
    public class LongTermInvestmentsBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the LongTermInvestmentsBalanceSheet class
        /// </summary>
        public LongTermInvestmentsBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the LongTermInvestmentsBalanceSheet class
        /// </summary>
        public LongTermInvestmentsBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Represents the total liability for long-term leases lasting over one year. Amount equal to the present value (the principal) at the
    /// beginning of the lease term less lease payments during the lease term.
    /// </summary>
    public class LongTermCapitalLeaseObligationBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the LongTermCapitalLeaseObligationBalanceSheet class
        /// </summary>
        public LongTermCapitalLeaseObligationBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the LongTermCapitalLeaseObligationBalanceSheet class
        /// </summary>
        public LongTermCapitalLeaseObligationBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Carrying amount of the equity interests owned by non-controlling shareholders, partners, or other equity holders in one or more of
    /// the entities included in the reporting entity's consolidated financial statements.
    /// </summary>
    public class MinorityInterestBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the MinorityInterestBalanceSheet class
        /// </summary>
        public MinorityInterestBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the MinorityInterestBalanceSheet class
        /// </summary>
        public MinorityInterestBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Short-term (typical maturity is less than one year), highly liquid government or corporate debt instrument such as bankers'
    /// acceptance, promissory notes, and treasury bills.
    /// </summary>
    public class MoneyMarketInvestmentsBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the MoneyMarketInvestmentsBalanceSheet class
        /// </summary>
        public MoneyMarketInvestmentsBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the MoneyMarketInvestmentsBalanceSheet class
        /// </summary>
        public MoneyMarketInvestmentsBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Represents the value of all loans after deduction of the appropriate allowances for loan and lease losses.
    /// </summary>
    public class NetLoanBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the NetLoanBalanceSheet class
        /// </summary>
        public NetLoanBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the NetLoanBalanceSheet class
        /// </summary>
        public NetLoanBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Tangible assets that are held by an entity for use in the production or supply of goods and services, for rental to others, or for
    /// administrative purposes and that are expected to provide economic benefit for more than one year; net of accumulated
    /// depreciation.
    /// </summary>
    public class NetPPEBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the NetPPEBalanceSheet class
        /// </summary>
        public NetPPEBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the NetPPEBalanceSheet class
        /// </summary>
        public NetPPEBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The aggregate amount of all domestic and foreign deposits in the banks that do not draw interest.
    /// </summary>
    public class NonInterestBearingDepositsBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the NonInterestBearingDepositsBalanceSheet class
        /// </summary>
        public NonInterestBearingDepositsBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the NonInterestBearingDepositsBalanceSheet class
        /// </summary>
        public NonInterestBearingDepositsBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Written promises to pay a stated sum at one or more specified dates in the future, within the accounting Intperiod.
    /// </summary>
    public class CurrentNotesPayableBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the CurrentNotesPayableBalanceSheet class
        /// </summary>
        public CurrentNotesPayableBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the CurrentNotesPayableBalanceSheet class
        /// </summary>
        public CurrentNotesPayableBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// An amount representing an agreement for an unconditional promise by the maker to pay the entity (holder) a definite sum of money
    /// at a future date(s) within one year of the balance sheet date or the normal operating cycle, whichever is longer. Such amount may
    /// include accrued interest receivable in accordance with the terms of the note. The note also may contain provisions including a
    /// discount or premium, payable on demand, secured, or unsecured, interest bearing or non-interest bearing, among a myriad of other
    /// features and characteristics.
    /// </summary>
    public class NotesReceivableBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the NotesReceivableBalanceSheet class
        /// </summary>
        public NotesReceivableBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the NotesReceivableBalanceSheet class
        /// </summary>
        public NotesReceivableBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// An amount representing an agreement for an unconditional promise by the maker to pay the entity (holder) a definite sum of money
    /// at a future date(s), excluding the portion that is expected to be received within one year of the balance sheet date or the normal
    /// operating cycle, whichever is longer.
    /// </summary>
    public class NonCurrentNoteReceivablesBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the NonCurrentNoteReceivablesBalanceSheet class
        /// </summary>
        public NonCurrentNoteReceivablesBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the NonCurrentNoteReceivablesBalanceSheet class
        /// </summary>
        public NonCurrentNoteReceivablesBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Other current liabilities = Total current liabilities - Payables and accrued Expenses - Current debt and capital lease obligation -
    /// provisions, current - deferred liabilities, current.
    /// </summary>
    public class OtherCurrentLiabilitiesBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the OtherCurrentLiabilitiesBalanceSheet class
        /// </summary>
        public OtherCurrentLiabilitiesBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the OtherCurrentLiabilitiesBalanceSheet class
        /// </summary>
        public OtherCurrentLiabilitiesBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Sum of the carrying amounts of all intangible assets, excluding goodwill.
    /// </summary>
    public class OtherIntangibleAssetsBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the OtherIntangibleAssetsBalanceSheet class
        /// </summary>
        public OtherIntangibleAssetsBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the OtherIntangibleAssetsBalanceSheet class
        /// </summary>
        public OtherIntangibleAssetsBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The aggregate amount of short term investments, which will be expired within one year that are not specifically classified as
    /// Available-for-Sale, Held-to-Maturity,  nor Trading investments.
    /// </summary>
    public class OtherShortTermInvestmentsBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the OtherShortTermInvestmentsBalanceSheet class
        /// </summary>
        public OtherShortTermInvestmentsBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the OtherShortTermInvestmentsBalanceSheet class
        /// </summary>
        public OtherShortTermInvestmentsBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The sum of all payables owed and expected to be paid within one year or one operating cycle, including accounts payables, taxes
    /// payable, dividends payable and all other current payables.
    /// </summary>
    public class PayablesBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the PayablesBalanceSheet class
        /// </summary>
        public PayablesBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the PayablesBalanceSheet class
        /// </summary>
        public PayablesBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// This balance sheet account includes all current payables and accrued expenses.
    /// </summary>
    public class PayablesAndAccruedExpensesBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the PayablesAndAccruedExpensesBalanceSheet class
        /// </summary>
        public PayablesAndAccruedExpensesBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the PayablesAndAccruedExpensesBalanceSheet class
        /// </summary>
        public PayablesAndAccruedExpensesBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Accounting policy pertaining to an insurance entity's net liability for future benefits (for example, death, cash surrender value) to be
    /// paid to or on behalf of policyholders, describing the bases, methodologies and components of the reserve, and assumptions
    /// regarding estimates of expected investment yields, mortality, morbidity, terminations and expenses.
    /// </summary>
    public class PolicyReservesBenefitsBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the PolicyReservesBenefitsBalanceSheet class
        /// </summary>
        public PolicyReservesBenefitsBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the PolicyReservesBenefitsBalanceSheet class
        /// </summary>
        public PolicyReservesBenefitsBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The total liability as of the balance sheet date of amounts due to policy holders, excluding future policy benefits and claims,
    /// including unpaid policy dividends, retrospective refunds, and undistributed earnings on participating business.
    /// </summary>
    public class PolicyholderFundsBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the PolicyholderFundsBalanceSheet class
        /// </summary>
        public PolicyholderFundsBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the PolicyholderFundsBalanceSheet class
        /// </summary>
        public PolicyholderFundsBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Preferred securities that that firm treats as a liability. It includes convertible preferred stock or redeemable preferred stock.
    /// </summary>
    public class PreferredSecuritiesOutsideStockEquityBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the PreferredSecuritiesOutsideStockEquityBalanceSheet class
        /// </summary>
        public PreferredSecuritiesOutsideStockEquityBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the PreferredSecuritiesOutsideStockEquityBalanceSheet class
        /// </summary>
        public PreferredSecuritiesOutsideStockEquityBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Preferred stock (all issues) at par value, as reported within the Stockholder's Equity section of the balance sheet.
    /// </summary>
    public class PreferredStockBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the PreferredStockBalanceSheet class
        /// </summary>
        public PreferredStockBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the PreferredStockBalanceSheet class
        /// </summary>
        public PreferredStockBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Sum of the carrying amounts that are paid in advance for expenses, which will be charged against earnings in subsequent periods.
    /// </summary>
    public class PrepaidAssetsBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the PrepaidAssetsBalanceSheet class
        /// </summary>
        public PrepaidAssetsBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the PrepaidAssetsBalanceSheet class
        /// </summary>
        public PrepaidAssetsBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Sum of the carrying amounts that are paid in advance for expenses, which will be charged against earnings in periods after one
    /// year or beyond the operating cycle, if longer.
    /// </summary>
    public class NonCurrentPrepaidAssetsBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the NonCurrentPrepaidAssetsBalanceSheet class
        /// </summary>
        public NonCurrentPrepaidAssetsBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the NonCurrentPrepaidAssetsBalanceSheet class
        /// </summary>
        public NonCurrentPrepaidAssetsBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The sum of all receivables owed by customers and affiliates within one year, including accounts receivable, notes receivable,
    /// premiums receivable, and other current receivables.
    /// </summary>
    public class ReceivablesBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ReceivablesBalanceSheet class
        /// </summary>
        public ReceivablesBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the ReceivablesBalanceSheet class
        /// </summary>
        public ReceivablesBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The amount of benefits the ceding insurer expects to recover on insurance policies ceded to other insurance entities as of the
    /// balance sheet date for all guaranteed benefit types. It includes estimated amounts for claims incurred but not reported, and policy
    /// benefits, net of any related valuation allowance.
    /// </summary>
    public class ReinsuranceRecoverableBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ReinsuranceRecoverableBalanceSheet class
        /// </summary>
        public ReinsuranceRecoverableBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the ReinsuranceRecoverableBalanceSheet class
        /// </summary>
        public ReinsuranceRecoverableBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The cumulative net income of the company from the date of its inception (or reorganization) to the date of the financial statement
    /// less the cumulative distributions to shareholders either directly (dividends) or indirectly (treasury stock).
    /// </summary>
    public class RetainedEarningsBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the RetainedEarningsBalanceSheet class
        /// </summary>
        public RetainedEarningsBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the RetainedEarningsBalanceSheet class
        /// </summary>
        public RetainedEarningsBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The carrying value as of the balance sheet date of the liabilities collateral securities loaned to other broker-dealers. Borrowers of
    /// securities generally are required to provide collateral to the lenders of securities, commonly cash but sometimes other securities or
    /// standby letters of credit, with a value slightly higher than that of the securities borrowed.
    /// </summary>
    public class SecuritiesLendingCollateralBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the SecuritiesLendingCollateralBalanceSheet class
        /// </summary>
        public SecuritiesLendingCollateralBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the SecuritiesLendingCollateralBalanceSheet class
        /// </summary>
        public SecuritiesLendingCollateralBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The carrying value of funds outstanding loaned in the form of security resale agreements if the agreement requires the purchaser to
    /// resell the identical security purchased or a security that meets the definition of "substantially the same" in the case of a dollar roll.
    /// Also includes purchases of participations in pools of securities that are subject to a resale agreement.
    /// </summary>
    public class SecurityAgreeToBeResellBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the SecurityAgreeToBeResellBalanceSheet class
        /// </summary>
        public SecurityAgreeToBeResellBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the SecurityAgreeToBeResellBalanceSheet class
        /// </summary>
        public SecurityAgreeToBeResellBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Represent obligations of the company to deliver the specified security at the contracted price and, thereby, create a liability to
    /// purchase the security in the market at prevailing prices.
    /// </summary>
    public class SecuritySoldNotYetRepurchasedBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the SecuritySoldNotYetRepurchasedBalanceSheet class
        /// </summary>
        public SecuritySoldNotYetRepurchasedBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the SecuritySoldNotYetRepurchasedBalanceSheet class
        /// </summary>
        public SecuritySoldNotYetRepurchasedBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The fair value of the assets held by the company for the benefit of separate account policyholders.
    /// </summary>
    public class SeparateAccountAssetsBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the SeparateAccountAssetsBalanceSheet class
        /// </summary>
        public SeparateAccountAssetsBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the SeparateAccountAssetsBalanceSheet class
        /// </summary>
        public SeparateAccountAssetsBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Refers to revenue that is generated that is not part of typical operations.
    /// </summary>
    public class SeparateAccountBusinessBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the SeparateAccountBusinessBalanceSheet class
        /// </summary>
        public SeparateAccountBusinessBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the SeparateAccountBusinessBalanceSheet class
        /// </summary>
        public SeparateAccountBusinessBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The current assets section of a company's balance sheet that contains the investments that a company holds with the purpose for
    /// trading.
    /// </summary>
    public class ShortTermInvestmentsAvailableForSaleBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ShortTermInvestmentsAvailableForSaleBalanceSheet class
        /// </summary>
        public ShortTermInvestmentsAvailableForSaleBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the ShortTermInvestmentsAvailableForSaleBalanceSheet class
        /// </summary>
        public ShortTermInvestmentsAvailableForSaleBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The current assets section of a company's balance sheet that contains the investments that a company has made that will expire
    /// at a fixed date within one year.
    /// </summary>
    public class ShortTermInvestmentsHeldToMaturityBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ShortTermInvestmentsHeldToMaturityBalanceSheet class
        /// </summary>
        public ShortTermInvestmentsHeldToMaturityBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the ShortTermInvestmentsHeldToMaturityBalanceSheet class
        /// </summary>
        public ShortTermInvestmentsHeldToMaturityBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The current assets section of a company's balance sheet that contains the investments that a company can trade at any moment.
    /// </summary>
    public class ShortTermInvestmentsTradingBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ShortTermInvestmentsTradingBalanceSheet class
        /// </summary>
        public ShortTermInvestmentsTradingBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the ShortTermInvestmentsTradingBalanceSheet class
        /// </summary>
        public ShortTermInvestmentsTradingBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The residual interest in the assets of the enterprise that remains after deducting its liabilities. Equity is increased by owners'
    /// investments and by comprehensive income, and it is reduced by distributions to the owners.
    /// </summary>
    public class StockholdersEquityBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the StockholdersEquityBalanceSheet class
        /// </summary>
        public StockholdersEquityBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the StockholdersEquityBalanceSheet class
        /// </summary>
        public StockholdersEquityBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// A liability that reflects the taxes owed to federal, state, and local tax authorities. It is the carrying value as of the balance sheet
    /// date of obligations incurred and payable for statutory income, sales, use, payroll, excise, real, property and other taxes.
    /// </summary>
    public class TotalTaxPayableBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the TotalTaxPayableBalanceSheet class
        /// </summary>
        public TotalTaxPayableBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the TotalTaxPayableBalanceSheet class
        /// </summary>
        public TotalTaxPayableBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The aggregate amount of probable future economic benefits obtained or controlled by a particular enterprise as a result of past
    /// transactions or events.
    /// </summary>
    public class TotalAssetsBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the TotalAssetsBalanceSheet class
        /// </summary>
        public TotalAssetsBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the TotalAssetsBalanceSheet class
        /// </summary>
        public TotalAssetsBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// A liability account which represents the total amount of funds deposited.
    /// </summary>
    public class TotalDepositsBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the TotalDepositsBalanceSheet class
        /// </summary>
        public TotalDepositsBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the TotalDepositsBalanceSheet class
        /// </summary>
        public TotalDepositsBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Asset that refers to the sum of all available for sale securities and other investments often reported on the balance sheet of
    /// insurance firms.
    /// </summary>
    public class TotalInvestmentsBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the TotalInvestmentsBalanceSheet class
        /// </summary>
        public TotalInvestmentsBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the TotalInvestmentsBalanceSheet class
        /// </summary>
        public TotalInvestmentsBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Sum of the carrying amounts as of the balance sheet date of all assets that are expected to be realized in cash, sold or consumed
    /// after one year or beyond the normal operating cycle, if longer.
    /// </summary>
    public class TotalNonCurrentAssetsBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the TotalNonCurrentAssetsBalanceSheet class
        /// </summary>
        public TotalNonCurrentAssetsBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the TotalNonCurrentAssetsBalanceSheet class
        /// </summary>
        public TotalNonCurrentAssetsBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Ownership interest of different classes of partners in the publicly listed limited partnership or master limited partnership. Partners
    /// include general, limited and preferred partners.
    /// </summary>
    public class TotalPartnershipCapitalBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the TotalPartnershipCapitalBalanceSheet class
        /// </summary>
        public TotalPartnershipCapitalBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the TotalPartnershipCapitalBalanceSheet class
        /// </summary>
        public TotalPartnershipCapitalBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Trading account assets are bought and held principally for the purpose of selling them in the near term (thus held for only a short
    /// period of time). Unrealized holding gains and losses for trading securities are included in earnings.
    /// </summary>
    public class TradingAssetsBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the TradingAssetsBalanceSheet class
        /// </summary>
        public TradingAssetsBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the TradingAssetsBalanceSheet class
        /// </summary>
        public TradingAssetsBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The carrying amount of liabilities as of the balance sheet date that pertain to principal and customer trading transactions, or which
    /// may be incurred with the objective of generating a profit from short-term fluctuations in price as part of an entity's market-making,
    /// hedging and proprietary trading. Examples include short positions in securities, derivatives and commodities, obligations under
    /// repurchase agreements, and securities borrowed arrangements.
    /// </summary>
    public class TradingLiabilitiesBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the TradingLiabilitiesBalanceSheet class
        /// </summary>
        public TradingLiabilitiesBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the TradingLiabilitiesBalanceSheet class
        /// </summary>
        public TradingLiabilitiesBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The total of financial instruments that are bought and held principally for the purpose of selling them in the near term (thus held for
    /// only a short period of time) or for debt and equity securities formerly categorized as available-for-sale or held-to-maturity which the
    /// company held as of the date it opted to account for such securities at fair value.
    /// </summary>
    public class TradingSecuritiesBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the TradingSecuritiesBalanceSheet class
        /// </summary>
        public TradingSecuritiesBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the TradingSecuritiesBalanceSheet class
        /// </summary>
        public TradingSecuritiesBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The portion of shares that a company keeps in their own treasury. Treasury stock may have come from a repurchase or buyback
    /// from shareholders; or it may have never been issued to the public in the first place. These shares don't pay dividends, have no
    /// voting rights, and are not included in shares outstanding calculations.
    /// </summary>
    public class TreasuryStockBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the TreasuryStockBalanceSheet class
        /// </summary>
        public TreasuryStockBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the TreasuryStockBalanceSheet class
        /// </summary>
        public TreasuryStockBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Income received but not yet earned, it represents the unearned amount that is netted against the total loan.
    /// </summary>
    public class UnearnedIncomeBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the UnearnedIncomeBalanceSheet class
        /// </summary>
        public UnearnedIncomeBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the UnearnedIncomeBalanceSheet class
        /// </summary>
        public UnearnedIncomeBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Carrying amount of premiums written on insurance contracts that have not been earned as of the balance sheet date.
    /// </summary>
    public class UnearnedPremiumsBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the UnearnedPremiumsBalanceSheet class
        /// </summary>
        public UnearnedPremiumsBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the UnearnedPremiumsBalanceSheet class
        /// </summary>
        public UnearnedPremiumsBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Liability amount that reflects claims that are expected based upon statistical projections, but which have not been reported to the
    /// insurer.
    /// </summary>
    public class UnpaidLossAndLossReserveBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the UnpaidLossAndLossReserveBalanceSheet class
        /// </summary>
        public UnpaidLossAndLossReserveBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the UnpaidLossAndLossReserveBalanceSheet class
        /// </summary>
        public UnpaidLossAndLossReserveBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Invested capital = common shareholders' equity + long term debt + current debt
    /// </summary>
    public class InvestedCapitalBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the InvestedCapitalBalanceSheet class
        /// </summary>
        public InvestedCapitalBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the InvestedCapitalBalanceSheet class
        /// </summary>
        public InvestedCapitalBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Payments that will be assigned as expenses with one accounting period, but that are paid in advance and temporarily set up as
    /// current assets on the balance sheet.
    /// </summary>
    public class CurrentDeferredAssetsBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the CurrentDeferredAssetsBalanceSheet class
        /// </summary>
        public CurrentDeferredAssetsBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the CurrentDeferredAssetsBalanceSheet class
        /// </summary>
        public CurrentDeferredAssetsBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Payments that will be assigned as expenses longer than one accounting period, but that are paid in advance and temporarily set up
    /// as non-current assets on the balance sheet.
    /// </summary>
    public class NonCurrentDeferredAssetsBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the NonCurrentDeferredAssetsBalanceSheet class
        /// </summary>
        public NonCurrentDeferredAssetsBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the NonCurrentDeferredAssetsBalanceSheet class
        /// </summary>
        public NonCurrentDeferredAssetsBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Asset, often applicable to Banks, which refers to the aggregate amount of all securities and investments.
    /// </summary>
    public class SecuritiesAndInvestmentsBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the SecuritiesAndInvestmentsBalanceSheet class
        /// </summary>
        public SecuritiesAndInvestmentsBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the SecuritiesAndInvestmentsBalanceSheet class
        /// </summary>
        public SecuritiesAndInvestmentsBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Probable future sacrifices of economic benefits arising from present obligations of an enterprise to transfer assets or provide
    /// services to others in the future as a result of past transactions or events, excluding minority interest.
    /// </summary>
    public class TotalLiabilitiesNetMinorityInterestBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the TotalLiabilitiesNetMinorityInterestBalanceSheet class
        /// </summary>
        public TotalLiabilitiesNetMinorityInterestBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the TotalLiabilitiesNetMinorityInterestBalanceSheet class
        /// </summary>
        public TotalLiabilitiesNetMinorityInterestBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Total obligations, net minority interest, incurred as part of normal operations that is expected to be repaid beyond the following
    /// twelve months or one business cycle; excludes minority interest.
    /// </summary>
    public class TotalNonCurrentLiabilitiesNetMinorityInterestBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the TotalNonCurrentLiabilitiesNetMinorityInterestBalanceSheet class
        /// </summary>
        public TotalNonCurrentLiabilitiesNetMinorityInterestBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the TotalNonCurrentLiabilitiesNetMinorityInterestBalanceSheet class
        /// </summary>
        public TotalNonCurrentLiabilitiesNetMinorityInterestBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Residual interest, including minority interest, that remains in the assets of the enterprise after deducting its liabilities. Equity is
    /// increased by owners' investments and by comprehensive income, and it is reduced by distributions to the owners.
    /// </summary>
    public class TotalEquityGrossMinorityInterestBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the TotalEquityGrossMinorityInterestBalanceSheet class
        /// </summary>
        public TotalEquityGrossMinorityInterestBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the TotalEquityGrossMinorityInterestBalanceSheet class
        /// </summary>
        public TotalEquityGrossMinorityInterestBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Accounts owed to a company by customers within a year as a result of exchanging goods or services on credit.
    /// </summary>
    public class GrossAccountsReceivableBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the GrossAccountsReceivableBalanceSheet class
        /// </summary>
        public GrossAccountsReceivableBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the GrossAccountsReceivableBalanceSheet class
        /// </summary>
        public GrossAccountsReceivableBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Accounts receivable represents sums owed to the business that the business records as revenue. Gross accounts receivable is
    /// accounts receivable before the business deducts uncollectable accounts to calculate the true value of accounts receivable.
    /// </summary>
    public class NonCurrentAccountsReceivableBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the NonCurrentAccountsReceivableBalanceSheet class
        /// </summary>
        public NonCurrentAccountsReceivableBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the NonCurrentAccountsReceivableBalanceSheet class
        /// </summary>
        public NonCurrentAccountsReceivableBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// This account shows the amount of unpaid interest accrued to the date of purchase and included in the purchase price of securities
    /// purchased between interest dates.
    /// </summary>
    public class AccruedInterestReceivableBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the AccruedInterestReceivableBalanceSheet class
        /// </summary>
        public AccruedInterestReceivableBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the AccruedInterestReceivableBalanceSheet class
        /// </summary>
        public AccruedInterestReceivableBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// This item is typically available for bank industry. It's the amount of borrowings as of the balance sheet date from the Federal Home
    /// Loan Bank, which are primarily used to cover shortages in the required reserve balance and liquidity shortages.
    /// </summary>
    public class AdvanceFromFederalHomeLoanBanksBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the AdvanceFromFederalHomeLoanBanksBalanceSheet class
        /// </summary>
        public AdvanceFromFederalHomeLoanBanksBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the AdvanceFromFederalHomeLoanBanksBalanceSheet class
        /// </summary>
        public AdvanceFromFederalHomeLoanBanksBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// An Allowance for Doubtful Accounts measures receivables recorded but not expected to be collected.
    /// </summary>
    public class AllowanceForDoubtfulAccountsReceivableBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the AllowanceForDoubtfulAccountsReceivableBalanceSheet class
        /// </summary>
        public AllowanceForDoubtfulAccountsReceivableBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the AllowanceForDoubtfulAccountsReceivableBalanceSheet class
        /// </summary>
        public AllowanceForDoubtfulAccountsReceivableBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// This item is typically available for bank industry. It represents a provision relating to a written agreement to receive money  with the
    /// terms of the note (at a specified future date(s) within one year from the reporting date (or the normal operating cycle, whichever is
    /// longer), consisting of principal as well as any accrued interest) for the portion that is expected to be uncollectible.
    /// </summary>
    public class AllowanceForNotesReceivableBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the AllowanceForNotesReceivableBalanceSheet class
        /// </summary>
        public AllowanceForNotesReceivableBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the AllowanceForNotesReceivableBalanceSheet class
        /// </summary>
        public AllowanceForNotesReceivableBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// This item is typically available for bank industry. It's a part of long-lived assets, which has been decided for sale in the future.
    /// </summary>
    public class AssetsHeldForSaleBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the AssetsHeldForSaleBalanceSheet class
        /// </summary>
        public AssetsHeldForSaleBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the AssetsHeldForSaleBalanceSheet class
        /// </summary>
        public AssetsHeldForSaleBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// A portion of a company's business that has been disposed of or sold.
    /// </summary>
    public class AssetsOfDiscontinuedOperationsBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the AssetsOfDiscontinuedOperationsBalanceSheet class
        /// </summary>
        public AssetsOfDiscontinuedOperationsBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the AssetsOfDiscontinuedOperationsBalanceSheet class
        /// </summary>
        public AssetsOfDiscontinuedOperationsBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// All indebtedness for borrowed money or the deferred purchase price of property or services, including without limitation
    /// reimbursement and other obligations with respect to surety bonds and letters of credit, all obligations evidenced by notes, bonds
    /// debentures or similar instruments, all capital lease obligations and all contingent obligations. 
    /// </summary>
    public class BankIndebtednessBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the BankIndebtednessBalanceSheet class
        /// </summary>
        public BankIndebtednessBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the BankIndebtednessBalanceSheet class
        /// </summary>
        public BankIndebtednessBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The carrying amount of a life insurance policy on an officer, executive or employee for which the reporting entity (a bank) is entitled
    /// to proceeds from the policy upon death of the insured or surrender of the insurance policy.
    /// </summary>
    public class BankOwnedLifeInsuranceBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the BankOwnedLifeInsuranceBalanceSheet class
        /// </summary>
        public BankOwnedLifeInsuranceBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the BankOwnedLifeInsuranceBalanceSheet class
        /// </summary>
        public BankOwnedLifeInsuranceBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The securities borrowed or on loan, which is the temporary loan of securities by a lender to a borrower in exchange for cash.  This
    /// item is usually only available for bank industry.
    /// </summary>
    public class SecurityBorrowedBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the SecurityBorrowedBalanceSheet class
        /// </summary>
        public SecurityBorrowedBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the SecurityBorrowedBalanceSheet class
        /// </summary>
        public SecurityBorrowedBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Fixed assets that specifically deal with the facilities a company owns. Include the improvements associated with buildings.
    /// </summary>
    public class BuildingsAndImprovementsBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the BuildingsAndImprovementsBalanceSheet class
        /// </summary>
        public BuildingsAndImprovementsBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the BuildingsAndImprovementsBalanceSheet class
        /// </summary>
        public BuildingsAndImprovementsBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Short-term loan, typically 90 days, used by a company to finance seasonal working capital needs.
    /// </summary>
    public class CommercialLoanBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the CommercialLoanBalanceSheet class
        /// </summary>
        public CommercialLoanBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the CommercialLoanBalanceSheet class
        /// </summary>
        public CommercialLoanBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Commercial paper is a money-market security issued by large banks and corporations. It represents the current obligation for the
    /// company. There are four basic kinds of commercial paper: promissory notes, drafts, checks, and certificates of deposit. The
    /// maturities of these money market securities generally do not exceed 270 days.
    /// </summary>
    public class CommercialPaperBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the CommercialPaperBalanceSheet class
        /// </summary>
        public CommercialPaperBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the CommercialPaperBalanceSheet class
        /// </summary>
        public CommercialPaperBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The portion of the Stockholders' Equity that reflects the amount of common stock, which are units of ownership.
    /// </summary>
    public class CommonStockEquityBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the CommonStockEquityBalanceSheet class
        /// </summary>
        public CommonStockEquityBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the CommonStockEquityBalanceSheet class
        /// </summary>
        public CommonStockEquityBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// It represents carrying amount of long-lived asset under construction that includes construction costs to date on capital projects.
    /// Assets constructed, but not completed.
    /// </summary>
    public class ConstructionInProgressBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ConstructionInProgressBalanceSheet class
        /// </summary>
        public ConstructionInProgressBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the ConstructionInProgressBalanceSheet class
        /// </summary>
        public ConstructionInProgressBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// A loan that establishes consumer credit that is granted for personal use; usually unsecured and based on the borrower's integrity
    /// and ability to pay.
    /// </summary>
    public class ConsumerLoanBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ConsumerLoanBalanceSheet class
        /// </summary>
        public ConsumerLoanBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the ConsumerLoanBalanceSheet class
        /// </summary>
        public ConsumerLoanBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The company's minimum pension obligations to its former employees, paid into a defined pension plan to satisfy all pension
    /// entitlements that have been earned by employees to date.
    /// </summary>
    public class MinimumPensionLiabilitiesBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the MinimumPensionLiabilitiesBalanceSheet class
        /// </summary>
        public MinimumPensionLiabilitiesBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the MinimumPensionLiabilitiesBalanceSheet class
        /// </summary>
        public MinimumPensionLiabilitiesBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Amounts receivable from customers on short-term negotiable time drafts drawn on and accepted by the institution (also known as
    /// banker's acceptance transactions) that are outstanding on the reporting date.
    /// </summary>
    public class CustomerAcceptancesBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the CustomerAcceptancesBalanceSheet class
        /// </summary>
        public CustomerAcceptancesBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the CustomerAcceptancesBalanceSheet class
        /// </summary>
        public CustomerAcceptancesBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The recognition of an asset where pension fund assets exceed promised benefits.
    /// </summary>
    public class DefinedPensionBenefitBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the DefinedPensionBenefitBalanceSheet class
        /// </summary>
        public DefinedPensionBenefitBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the DefinedPensionBenefitBalanceSheet class
        /// </summary>
        public DefinedPensionBenefitBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Fair values of all liabilities resulting from contracts that meet the criteria of being accounted for as derivative instruments; and
    /// which are expected to be extinguished or otherwise disposed of after one year or beyond the normal operating cycle.
    /// </summary>
    public class DerivativeProductLiabilitiesBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the DerivativeProductLiabilitiesBalanceSheet class
        /// </summary>
        public DerivativeProductLiabilitiesBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the DerivativeProductLiabilitiesBalanceSheet class
        /// </summary>
        public DerivativeProductLiabilitiesBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Fair values of assets resulting from contracts that meet the criteria of being accounted for as derivative instruments, net of the
    /// effects of master netting arrangements.
    /// </summary>
    public class DerivativeAssetsBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the DerivativeAssetsBalanceSheet class
        /// </summary>
        public DerivativeAssetsBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the DerivativeAssetsBalanceSheet class
        /// </summary>
        public DerivativeAssetsBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Sum of the carrying values of dividends declared but unpaid on equity securities issued and outstanding (also includes dividends
    /// collected on behalf of another owner of securities that are being held by entity) by the entity.
    /// </summary>
    public class DividendsPayableBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the DividendsPayableBalanceSheet class
        /// </summary>
        public DividendsPayableBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the DividendsPayableBalanceSheet class
        /// </summary>
        public DividendsPayableBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Carrying amount as of the balance sheet date of the portion of the obligations recognized for the various benefits provided to former
    /// or inactive employees, their beneficiaries, and covered dependents after employment but before retirement.
    /// </summary>
    public class EmployeeBenefitsBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the EmployeeBenefitsBalanceSheet class
        /// </summary>
        public EmployeeBenefitsBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the EmployeeBenefitsBalanceSheet class
        /// </summary>
        public EmployeeBenefitsBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The amount borrowed by a bank, at the federal funds rate, from another bank to meet its reserve requirements.  This item is
    /// typically available for the bank industry.
    /// </summary>
    public class FederalFundsPurchasedBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the FederalFundsPurchasedBalanceSheet class
        /// </summary>
        public FederalFundsPurchasedBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the FederalFundsPurchasedBalanceSheet class
        /// </summary>
        public FederalFundsPurchasedBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Federal funds transactions involve lending (federal funds sold) or borrowing (federal funds purchased) of immediately available
    /// reserve balances.  This item is typically available for the bank industry.
    /// </summary>
    public class FederalFundsSoldBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the FederalFundsSoldBalanceSheet class
        /// </summary>
        public FederalFundsSoldBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the FederalFundsSoldBalanceSheet class
        /// </summary>
        public FederalFundsSoldBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Federal Home Loan Bank stock represents an equity interest in a FHLB. It does not have a readily determinable fair value because
    /// its ownership is restricted and it lacks a market (liquidity).  This item is typically available for the bank industry.
    /// </summary>
    public class FederalHomeLoanBankStockBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the FederalHomeLoanBankStockBalanceSheet class
        /// </summary>
        public FederalHomeLoanBankStockBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the FederalHomeLoanBankStockBalanceSheet class
        /// </summary>
        public FederalHomeLoanBankStockBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Fair values as of the balance sheet date of all assets resulting from contracts that meet the criteria of being accounted for as
    /// derivative instruments, net of the effects of master netting arrangements.
    /// </summary>
    public class FinancialAssetsBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the FinancialAssetsBalanceSheet class
        /// </summary>
        public FinancialAssetsBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the FinancialAssetsBalanceSheet class
        /// </summary>
        public FinancialAssetsBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The carrying value as of the balance sheet date of securities that an institution sells and agrees to repurchase (the identical or
    /// substantially the same securities) as a seller-borrower at a specified date for a specified price, also known as a repurchase
    /// agreement.  This item is typically available for bank industry.
    /// </summary>
    public class FinancialInstrumentsSoldUnderAgreementsToRepurchaseBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the FinancialInstrumentsSoldUnderAgreementsToRepurchaseBalanceSheet class
        /// </summary>
        public FinancialInstrumentsSoldUnderAgreementsToRepurchaseBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the FinancialInstrumentsSoldUnderAgreementsToRepurchaseBalanceSheet class
        /// </summary>
        public FinancialInstrumentsSoldUnderAgreementsToRepurchaseBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The carrying amount as of the balance sheet date of merchandise or goods held by the company that are readily available for sale.
    /// This item is typically available for mining and manufacturing industries.
    /// </summary>
    public class FinishedGoodsBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the FinishedGoodsBalanceSheet class
        /// </summary>
        public FinishedGoodsBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the FinishedGoodsBalanceSheet class
        /// </summary>
        public FinishedGoodsBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// It is one of the important fixed assets for transportation industry, which includes bicycles, cars, motorcycles, trains, ships, boats,
    /// and aircraft.  This item is typically available for transportation industry.
    /// </summary>
    public class FlightFleetVehicleAndRelatedEquipmentsBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the FlightFleetVehicleAndRelatedEquipmentsBalanceSheet class
        /// </summary>
        public FlightFleetVehicleAndRelatedEquipmentsBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the FlightFleetVehicleAndRelatedEquipmentsBalanceSheet class
        /// </summary>
        public FlightFleetVehicleAndRelatedEquipmentsBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The carrying amount as of the balance sheet date of all assets obtained in full or partial satisfaction of a debt arrangement through
    /// foreclosure proceedings or defeasance; includes real and personal property; equity interests in corporations, partnerships, and joint
    /// ventures; and beneficial interest in trusts.  This item is typically typically available for bank industry.
    /// </summary>
    public class ForeclosedAssetsBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ForeclosedAssetsBalanceSheet class
        /// </summary>
        public ForeclosedAssetsBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the ForeclosedAssetsBalanceSheet class
        /// </summary>
        public ForeclosedAssetsBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Changes to accumulated comprehensive income that results from the process of translating subsidiary financial statements and
    /// foreign equity investments into functional currency of the reporting company.
    /// </summary>
    public class ForeignCurrencyTranslationAdjustmentsBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ForeignCurrencyTranslationAdjustmentsBalanceSheet class
        /// </summary>
        public ForeignCurrencyTranslationAdjustmentsBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the ForeignCurrencyTranslationAdjustmentsBalanceSheet class
        /// </summary>
        public ForeignCurrencyTranslationAdjustmentsBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// This item represents certain charges made in the current period in inventory resulting from such factors as breakage, spoilage,
    /// employee theft and shoplifting. This item is typically available for manufacturing, mining and utility industries.
    /// </summary>
    public class InventoriesAdjustmentsAllowancesBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the InventoriesAdjustmentsAllowancesBalanceSheet class
        /// </summary>
        public InventoriesAdjustmentsAllowancesBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the InventoriesAdjustmentsAllowancesBalanceSheet class
        /// </summary>
        public InventoriesAdjustmentsAllowancesBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// This item represents the carrying amount on the company's balance sheet of its investments in common stock of an equity method.
    /// This item is typically available for the insurance industry.
    /// </summary>
    public class InvestmentsInOtherVenturesUnderEquityMethodBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the InvestmentsInOtherVenturesUnderEquityMethodBalanceSheet class
        /// </summary>
        public InvestmentsInOtherVenturesUnderEquityMethodBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the InvestmentsInOtherVenturesUnderEquityMethodBalanceSheet class
        /// </summary>
        public InvestmentsInOtherVenturesUnderEquityMethodBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Fixed Assets that specifically deal with land a company owns. Includes the improvements associated with land. This excludes land
    /// held for sale.
    /// </summary>
    public class LandAndImprovementsBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the LandAndImprovementsBalanceSheet class
        /// </summary>
        public LandAndImprovementsBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the LandAndImprovementsBalanceSheet class
        /// </summary>
        public LandAndImprovementsBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Carrying amount at the balance sheet date of a long-lived, depreciable asset that is an addition or improvement to assets held
    /// under lease arrangement. This item is usually not available for the insurance industry.
    /// </summary>
    public class LeasesBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the LeasesBalanceSheet class
        /// </summary>
        public LeasesBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the LeasesBalanceSheet class
        /// </summary>
        public LeasesBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The obligations arising from the sale, disposal, or planned sale in the near future (generally within one year) of a disposal group,
    /// including a component of the entity (discontinued operation). This item is typically available for bank industry.
    /// </summary>
    public class LiabilitiesOfDiscontinuedOperationsBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the LiabilitiesOfDiscontinuedOperationsBalanceSheet class
        /// </summary>
        public LiabilitiesOfDiscontinuedOperationsBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the LiabilitiesOfDiscontinuedOperationsBalanceSheet class
        /// </summary>
        public LiabilitiesOfDiscontinuedOperationsBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The carrying value as of the balance sheet date of obligations drawn from a line of credit, which is a bank's commitment to make
    /// loans up to a specific amount.
    /// </summary>
    public class LineOfCreditBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the LineOfCreditBalanceSheet class
        /// </summary>
        public LineOfCreditBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the LineOfCreditBalanceSheet class
        /// </summary>
        public LineOfCreditBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// It means the aggregate amount of loans receivable that will be sold to other entities.  This item is typically available for bank
    /// industry.
    /// </summary>
    public class LoansHeldForSaleBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the LoansHeldForSaleBalanceSheet class
        /// </summary>
        public LoansHeldForSaleBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the LoansHeldForSaleBalanceSheet class
        /// </summary>
        public LoansHeldForSaleBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Reflects the carrying amount of unpaid loans issued to other institutions for cash needs or an asset purchase.
    /// </summary>
    public class LoansReceivableBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the LoansReceivableBalanceSheet class
        /// </summary>
        public LoansReceivableBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the LoansReceivableBalanceSheet class
        /// </summary>
        public LoansReceivableBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Fixed assets specifically dealing with tools, equipment and office furniture. This item is usually not available for the insurance and
    /// utility industries.
    /// </summary>
    public class MachineryFurnitureEquipmentBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the MachineryFurnitureEquipmentBalanceSheet class
        /// </summary>
        public MachineryFurnitureEquipmentBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the MachineryFurnitureEquipmentBalanceSheet class
        /// </summary>
        public MachineryFurnitureEquipmentBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Aggregated amount of unprocessed materials to be used in manufacturing or production process and supplies that will be
    /// consumed. This item is typically available for the utility industry.
    /// </summary>
    public class MaterialsAndSuppliesBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the MaterialsAndSuppliesBalanceSheet class
        /// </summary>
        public MaterialsAndSuppliesBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the MaterialsAndSuppliesBalanceSheet class
        /// </summary>
        public MaterialsAndSuppliesBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// A fixed asset that represents strictly mineral type properties.  This item is typically available for mining industry.
    /// </summary>
    public class MineralPropertiesBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the MineralPropertiesBalanceSheet class
        /// </summary>
        public MineralPropertiesBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the MineralPropertiesBalanceSheet class
        /// </summary>
        public MineralPropertiesBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// This is a lien on real estate to protect a lender.  This item is typically available for bank industry.
    /// </summary>
    public class MortgageLoanBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the MortgageLoanBalanceSheet class
        /// </summary>
        public MortgageLoanBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the MortgageLoanBalanceSheet class
        /// </summary>
        public MortgageLoanBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// It means the aggregate amount of mortgage and consumer loans.  This item is typically available for the insurance industry.
    /// </summary>
    public class MortgageAndConsumerloansBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the MortgageAndConsumerloansBalanceSheet class
        /// </summary>
        public MortgageAndConsumerloansBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the MortgageAndConsumerloansBalanceSheet class
        /// </summary>
        public MortgageAndConsumerloansBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// An amount representing an agreement for an unconditional promise by the maker to pay the entity (holder) a definite sum of money
    /// at a future date(s) within one year of the balance sheet date or the normal operating cycle. Such amount may include accrued
    /// interest receivable in accordance with the terms of the note. The note also may contain provisions including a discount or premium,
    /// payable on demand, secured, or unsecured, interest bearing or non-interest bearing, among myriad other features and
    /// characteristics. This item is typically available for bank industry.
    /// </summary>
    public class GrossNotesReceivableBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the GrossNotesReceivableBalanceSheet class
        /// </summary>
        public GrossNotesReceivableBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the GrossNotesReceivableBalanceSheet class
        /// </summary>
        public GrossNotesReceivableBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Other non-current assets that are not otherwise classified.
    /// </summary>
    public class OtherAssetsBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the OtherAssetsBalanceSheet class
        /// </summary>
        public OtherAssetsBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the OtherAssetsBalanceSheet class
        /// </summary>
        public OtherAssetsBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Other Capital Stock that is not otherwise classified.
    /// </summary>
    public class OtherCapitalStockBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the OtherCapitalStockBalanceSheet class
        /// </summary>
        public OtherCapitalStockBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the OtherCapitalStockBalanceSheet class
        /// </summary>
        public OtherCapitalStockBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Other current assets that are not otherwise classified.
    /// </summary>
    public class OtherCurrentAssetsBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the OtherCurrentAssetsBalanceSheet class
        /// </summary>
        public OtherCurrentAssetsBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the OtherCurrentAssetsBalanceSheet class
        /// </summary>
        public OtherCurrentAssetsBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Short Term Borrowings that are not otherwise classified.
    /// </summary>
    public class OtherCurrentBorrowingsBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the OtherCurrentBorrowingsBalanceSheet class
        /// </summary>
        public OtherCurrentBorrowingsBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the OtherCurrentBorrowingsBalanceSheet class
        /// </summary>
        public OtherCurrentBorrowingsBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Other adjustments to stockholders' equity that is not otherwise classified, including other reserves.
    /// </summary>
    public class OtherEquityAdjustmentsBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the OtherEquityAdjustmentsBalanceSheet class
        /// </summary>
        public OtherEquityAdjustmentsBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the OtherEquityAdjustmentsBalanceSheet class
        /// </summary>
        public OtherEquityAdjustmentsBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Other non-current inventories not otherwise classified.
    /// </summary>
    public class OtherInventoriesBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the OtherInventoriesBalanceSheet class
        /// </summary>
        public OtherInventoriesBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the OtherInventoriesBalanceSheet class
        /// </summary>
        public OtherInventoriesBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// An item represents all the other investments or/and securities that cannot be defined into any category above. This item is typically
    /// available for the insurance industry.
    /// </summary>
    public class OtherInvestedAssetsBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the OtherInvestedAssetsBalanceSheet class
        /// </summary>
        public OtherInvestedAssetsBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the OtherInvestedAssetsBalanceSheet class
        /// </summary>
        public OtherInvestedAssetsBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Other non-current assets that are not otherwise classified.
    /// </summary>
    public class OtherNonCurrentAssetsBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the OtherNonCurrentAssetsBalanceSheet class
        /// </summary>
        public OtherNonCurrentAssetsBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the OtherNonCurrentAssetsBalanceSheet class
        /// </summary>
        public OtherNonCurrentAssetsBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Other fixed assets not otherwise classified.
    /// </summary>
    public class OtherPropertiesBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the OtherPropertiesBalanceSheet class
        /// </summary>
        public OtherPropertiesBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the OtherPropertiesBalanceSheet class
        /// </summary>
        public OtherPropertiesBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The Carrying amount as of the balance sheet date of other real estate, which may include real estate investments, real estate loans
    /// that qualify as investments in real estate, and premises that are no longer used in operations may also be included in real estate
    /// owned. This does not include real estate assets taken in settlement of troubled loans through surrender or foreclosure.  This item is
    /// typically available for bank industry.
    /// </summary>
    public class OtherRealEstateOwnedBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the OtherRealEstateOwnedBalanceSheet class
        /// </summary>
        public OtherRealEstateOwnedBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the OtherRealEstateOwnedBalanceSheet class
        /// </summary>
        public OtherRealEstateOwnedBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Other non-current receivables not otherwise classified.
    /// </summary>
    public class OtherReceivablesBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the OtherReceivablesBalanceSheet class
        /// </summary>
        public OtherReceivablesBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the OtherReceivablesBalanceSheet class
        /// </summary>
        public OtherReceivablesBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// A loan issued by an insurance company that uses the cash value of a person's life insurance policy as collateral.  This item is usually
    /// only available in the insurance industry.
    /// </summary>
    public class NonCurrentPensionAndOtherPostretirementBenefitPlansBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the NonCurrentPensionAndOtherPostretirementBenefitPlansBalanceSheet class
        /// </summary>
        public NonCurrentPensionAndOtherPostretirementBenefitPlansBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the NonCurrentPensionAndOtherPostretirementBenefitPlansBalanceSheet class
        /// </summary>
        public NonCurrentPensionAndOtherPostretirementBenefitPlansBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// A loan issued by an insurance company that uses the cash value of a person's life insurance policy as collateral. This item is usually
    /// only available for insurance industry.
    /// </summary>
    public class PolicyLoansBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the PolicyLoansBalanceSheet class
        /// </summary>
        public PolicyLoansBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the PolicyLoansBalanceSheet class
        /// </summary>
        public PolicyLoansBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// A class of ownership in a company that has a higher claim on the assets and earnings than common stock. Preferred stock
    /// generally has a dividend that must be paid out before dividends to common stockholders and the shares usually do not have voting
    /// rights.
    /// </summary>
    public class PreferredStockEquityBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the PreferredStockEquityBalanceSheet class
        /// </summary>
        public PreferredStockEquityBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the PreferredStockEquityBalanceSheet class
        /// </summary>
        public PreferredStockEquityBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Tangible assets that are held by an entity for use in the production or supply of goods and services, for rental to others, or for
    /// administrative purposes and that are expected to provide economic benefit for more than one year. This item is available for
    /// manufacturing, bank and transportation industries.
    /// </summary>
    public class PropertiesBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the PropertiesBalanceSheet class
        /// </summary>
        public PropertiesBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the PropertiesBalanceSheet class
        /// </summary>
        public PropertiesBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Provisions are created to protect the interests of one or both parties named in a contract or legal document which is a preparatory
    /// action or measure. Current provision is expired within one accounting Intperiod.
    /// </summary>
    public class CurrentProvisionsBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the CurrentProvisionsBalanceSheet class
        /// </summary>
        public CurrentProvisionsBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the CurrentProvisionsBalanceSheet class
        /// </summary>
        public CurrentProvisionsBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Provisions are created to protect the interests of one or both parties named in a contract or legal document which is a preparatory
    /// action or measure. Long-term provision is expired beyond one accounting Intperiod.
    /// </summary>
    public class LongTermProvisionsBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the LongTermProvisionsBalanceSheet class
        /// </summary>
        public LongTermProvisionsBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the LongTermProvisionsBalanceSheet class
        /// </summary>
        public LongTermProvisionsBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Carrying amount as of the balance sheet data of unprocessed items to be consumed in the manufacturing or production process.
    /// This item is available for manufacturing and mining industries.
    /// </summary>
    public class RawMaterialsBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the RawMaterialsBalanceSheet class
        /// </summary>
        public RawMaterialsBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the RawMaterialsBalanceSheet class
        /// </summary>
        public RawMaterialsBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// A provision relating to a written agreement to receive money at a specified future date(s) (within one year from the reporting date
    /// or the normal operating cycle, whichever is longer), consisting of principal as well as any accrued interest).
    /// </summary>
    public class ReceivablesAdjustmentsAllowancesBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ReceivablesAdjustmentsAllowancesBalanceSheet class
        /// </summary>
        public ReceivablesAdjustmentsAllowancesBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the ReceivablesAdjustmentsAllowancesBalanceSheet class
        /// </summary>
        public ReceivablesAdjustmentsAllowancesBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Carrying amount as of the balance sheet date of capitalized costs of regulated entities that are expected to be recovered through
    /// revenue sources over one year or beyond the normal operating cycle.
    /// </summary>
    public class RegulatoryAssetsBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the RegulatoryAssetsBalanceSheet class
        /// </summary>
        public RegulatoryAssetsBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the RegulatoryAssetsBalanceSheet class
        /// </summary>
        public RegulatoryAssetsBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The amount for the individual regulatory noncurrent liability as itemized in a table of regulatory noncurrent liabilities as of the end of
    /// the Intperiod. Such things as the costs of energy efficiency programs and low-income energy assistances programs and deferred fuel.
    /// This item is usually only available for utility industry.
    /// </summary>
    public class RegulatoryLiabilitiesBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the RegulatoryLiabilitiesBalanceSheet class
        /// </summary>
        public RegulatoryLiabilitiesBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the RegulatoryLiabilitiesBalanceSheet class
        /// </summary>
        public RegulatoryLiabilitiesBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The carrying amount as of the balance sheet date of the known and estimated amounts owed to insurers under reinsurance
    /// treaties or other arrangements. This item is usually only available for insurance industry.
    /// </summary>
    public class ReinsuranceBalancesPayableBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ReinsuranceBalancesPayableBalanceSheet class
        /// </summary>
        public ReinsuranceBalancesPayableBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the ReinsuranceBalancesPayableBalanceSheet class
        /// </summary>
        public ReinsuranceBalancesPayableBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The carrying amounts of cash and cash equivalent items, which are restricted as to withdrawal or usage. Restrictions may include
    /// legally restricted deposits held as compensating balances against short-term borrowing arrangements, contracts entered into with
    /// others, or entity statements of intention with regard to particular deposits; however, time deposits and short-term certificates of
    /// deposit are not generally included in legally restricted deposits. Excludes compensating balance arrangements that are not
    /// agreements, which legally restrict the use of cash amounts shown on the balance sheet. For a classified balance sheet, represents
    /// the current portion only (the non-current portion has a separate concept); for an unclassified balance sheet represents the entire
    /// amount. This item is usually not available for bank and insurance industries.
    /// </summary>
    public class RestrictedCashBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the RestrictedCashBalanceSheet class
        /// </summary>
        public RestrictedCashBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the RestrictedCashBalanceSheet class
        /// </summary>
        public RestrictedCashBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The carrying amounts of cash and cash equivalent items which are restricted as to withdrawal or usage. This item is available for
    /// bank and insurance industries.
    /// </summary>
    public class RestrictedCashAndCashEquivalentsBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the RestrictedCashAndCashEquivalentsBalanceSheet class
        /// </summary>
        public RestrictedCashAndCashEquivalentsBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the RestrictedCashAndCashEquivalentsBalanceSheet class
        /// </summary>
        public RestrictedCashAndCashEquivalentsBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The cash and investments whose use in whole or in part is restricted for the long-term, generally by contractual agreements or
    /// regulatory requirements. This item is usually only available for bank industry.
    /// </summary>
    public class RestrictedCashAndInvestmentsBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the RestrictedCashAndInvestmentsBalanceSheet class
        /// </summary>
        public RestrictedCashAndInvestmentsBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the RestrictedCashAndInvestmentsBalanceSheet class
        /// </summary>
        public RestrictedCashAndInvestmentsBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Shares of stock for which sale is contractually or governmentally restricted for a given period of time. Stock that is acquired through
    /// an employee stock option plan or other private means may not be transferred. Restricted stock must be traded in compliance with
    /// special SEC regulations.
    /// </summary>
    public class RestrictedCommonStockBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the RestrictedCommonStockBalanceSheet class
        /// </summary>
        public RestrictedCommonStockBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the RestrictedCommonStockBalanceSheet class
        /// </summary>
        public RestrictedCommonStockBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Investments whose use is restricted in whole or in part, generally by contractual agreements or regulatory requirements. This item
    /// is usually only available for bank industry.
    /// </summary>
    public class RestrictedInvestmentsBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the RestrictedInvestmentsBalanceSheet class
        /// </summary>
        public RestrictedInvestmentsBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the RestrictedInvestmentsBalanceSheet class
        /// </summary>
        public RestrictedInvestmentsBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Carrying amount due within one year of the balance sheet date (or one operating cycle, if longer) from tax authorities as of the
    /// balance sheet date representing refunds of overpayments or recoveries based on agreed-upon resolutions of disputes. This item is
    /// usually not available for bank industry.
    /// </summary>
    public class TaxesReceivableBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the TaxesReceivableBalanceSheet class
        /// </summary>
        public TaxesReceivableBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the TaxesReceivableBalanceSheet class
        /// </summary>
        public TaxesReceivableBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Stockholder's Equity plus Long Term Debt.
    /// </summary>
    public class TotalCapitalizationBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the TotalCapitalizationBalanceSheet class
        /// </summary>
        public TotalCapitalizationBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the TotalCapitalizationBalanceSheet class
        /// </summary>
        public TotalCapitalizationBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Revenue received by a firm but not yet reported as income.  This item is usually only available for utility industry.
    /// </summary>
    public class TotalDeferredCreditsAndOtherNonCurrentLiabilitiesBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the TotalDeferredCreditsAndOtherNonCurrentLiabilitiesBalanceSheet class
        /// </summary>
        public TotalDeferredCreditsAndOtherNonCurrentLiabilitiesBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the TotalDeferredCreditsAndOtherNonCurrentLiabilitiesBalanceSheet class
        /// </summary>
        public TotalDeferredCreditsAndOtherNonCurrentLiabilitiesBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Revenues that are not currently billed from the customer under the terms of the contract.  This item is usually only available for
    /// utility industry.
    /// </summary>
    public class UnbilledReceivablesBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the UnbilledReceivablesBalanceSheet class
        /// </summary>
        public UnbilledReceivablesBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the UnbilledReceivablesBalanceSheet class
        /// </summary>
        public UnbilledReceivablesBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// A profit or loss that results from holding onto an asset rather than cashing it in and officially taking the profit or loss.
    /// </summary>
    public class UnrealizedGainLossBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the UnrealizedGainLossBalanceSheet class
        /// </summary>
        public UnrealizedGainLossBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the UnrealizedGainLossBalanceSheet class
        /// </summary>
        public UnrealizedGainLossBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Work, or goods, in the process of being fabricated or manufactured but not yet completed as finished goods. This item is usually
    /// available for manufacturing and mining industries.
    /// </summary>
    public class WorkInProcessBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the WorkInProcessBalanceSheet class
        /// </summary>
        public WorkInProcessBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the WorkInProcessBalanceSheet class
        /// </summary>
        public WorkInProcessBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// This item is usually not available for bank and insurance industries.
    /// </summary>
    public class OtherNonCurrentLiabilitiesBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the OtherNonCurrentLiabilitiesBalanceSheet class
        /// </summary>
        public OtherNonCurrentLiabilitiesBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the OtherNonCurrentLiabilitiesBalanceSheet class
        /// </summary>
        public OtherNonCurrentLiabilitiesBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Current Portion of Capital Lease Obligation plus Long Term Portion of Capital Lease Obligation.
    /// </summary>
    public class CapitalLeaseObligationsBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the CapitalLeaseObligationsBalanceSheet class
        /// </summary>
        public CapitalLeaseObligationsBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the CapitalLeaseObligationsBalanceSheet class
        /// </summary>
        public CapitalLeaseObligationsBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// This item is available for bank and insurance industries.
    /// </summary>
    public class OtherLiabilitiesBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the OtherLiabilitiesBalanceSheet class
        /// </summary>
        public OtherLiabilitiesBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the OtherLiabilitiesBalanceSheet class
        /// </summary>
        public OtherLiabilitiesBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Payables and Accrued Expenses that are not defined as Trade, Tax or Dividends related.
    /// </summary>
    public class OtherPayableBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the OtherPayableBalanceSheet class
        /// </summary>
        public OtherPayableBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the OtherPayableBalanceSheet class
        /// </summary>
        public OtherPayableBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The company's total book value less the value of any intangible assets.
    /// Methodology: Common Stock Equity minus Goodwill and Other Intangible Assets
    /// </summary>
    public class TangibleBookValueBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the TangibleBookValueBalanceSheet class
        /// </summary>
        public TangibleBookValueBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the TangibleBookValueBalanceSheet class
        /// </summary>
        public TangibleBookValueBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Total Equity equals Preferred Stock Equity + Common Stock Equity.
    /// </summary>
    public class TotalEquityBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the TotalEquityBalanceSheet class
        /// </summary>
        public TotalEquityBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the TotalEquityBalanceSheet class
        /// </summary>
        public TotalEquityBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Current Assets minus Current Liabilities.  This item is usually not available for bank and insurance industries.
    /// </summary>
    public class WorkingCapitalBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the WorkingCapitalBalanceSheet class
        /// </summary>
        public WorkingCapitalBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the WorkingCapitalBalanceSheet class
        /// </summary>
        public WorkingCapitalBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// All borrowings incurred by the company including debt and capital lease obligations.
    /// </summary>
    public class TotalDebtBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the TotalDebtBalanceSheet class
        /// </summary>
        public TotalDebtBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the TotalDebtBalanceSheet class
        /// </summary>
        public TotalDebtBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The amount for the other plant related to the utility industry fix assets.
    /// </summary>
    public class CommonUtilityPlantBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the CommonUtilityPlantBalanceSheet class
        /// </summary>
        public CommonUtilityPlantBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the CommonUtilityPlantBalanceSheet class
        /// </summary>
        public CommonUtilityPlantBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The amount for the electric plant related to the utility industry.
    /// </summary>
    public class ElectricUtilityPlantBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ElectricUtilityPlantBalanceSheet class
        /// </summary>
        public ElectricUtilityPlantBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the ElectricUtilityPlantBalanceSheet class
        /// </summary>
        public ElectricUtilityPlantBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The amount for the natural gas, fuel and other items related to the utility industry, which might include oil and gas wells, the
    /// properties to exploit oil and gas or liquefied natural gas sites.
    /// </summary>
    public class NaturalGasFuelAndOtherBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the NaturalGasFuelAndOtherBalanceSheet class
        /// </summary>
        public NaturalGasFuelAndOtherBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the NaturalGasFuelAndOtherBalanceSheet class
        /// </summary>
        public NaturalGasFuelAndOtherBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Net utility plant might include water production, electric utility plan, natural gas, fuel and other, common utility plant and
    /// accumulated depreciation. This item is usually only available for utility industry.
    /// </summary>
    public class NetUtilityPlantBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the NetUtilityPlantBalanceSheet class
        /// </summary>
        public NetUtilityPlantBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the NetUtilityPlantBalanceSheet class
        /// </summary>
        public NetUtilityPlantBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The amount for a facility and plant that provides water which might include wells, reservoirs, pumping stations, and control
    /// facilities; and waste water systems which includes the waste treatment and disposal facility and equipment. This item is usually
    /// only available for utility industry.
    /// </summary>
    public class WaterProductionBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the WaterProductionBalanceSheet class
        /// </summary>
        public WaterProductionBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the WaterProductionBalanceSheet class
        /// </summary>
        public WaterProductionBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Number of Common or Ordinary Shares.
    /// </summary>
    public class OrdinarySharesNumberBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the OrdinarySharesNumberBalanceSheet class
        /// </summary>
        public OrdinarySharesNumberBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the OrdinarySharesNumberBalanceSheet class
        /// </summary>
        public OrdinarySharesNumberBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Number of Preferred Shares.
    /// </summary>
    public class PreferredSharesNumberBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the PreferredSharesNumberBalanceSheet class
        /// </summary>
        public PreferredSharesNumberBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the PreferredSharesNumberBalanceSheet class
        /// </summary>
        public PreferredSharesNumberBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Number of Treasury Shares.
    /// </summary>
    public class TreasurySharesNumberBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the TreasurySharesNumberBalanceSheet class
        /// </summary>
        public TreasurySharesNumberBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the TreasurySharesNumberBalanceSheet class
        /// </summary>
        public TreasurySharesNumberBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// This will serve as the "parent" value to AccountsReceivable (DataId 23001) and OtherReceivables (DataId 23342) for all company
    /// financials reported in the IFRS GAAP.
    /// </summary>
    public class TradingAndOtherReceivableBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the TradingAndOtherReceivableBalanceSheet class
        /// </summary>
        public TradingAndOtherReceivableBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the TradingAndOtherReceivableBalanceSheet class
        /// </summary>
        public TradingAndOtherReceivableBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// </summary>
    public class EquityAttributableToOwnersOfParentBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the EquityAttributableToOwnersOfParentBalanceSheet class
        /// </summary>
        public EquityAttributableToOwnersOfParentBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the EquityAttributableToOwnersOfParentBalanceSheet class
        /// </summary>
        public EquityAttributableToOwnersOfParentBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The carrying value as of the balance sheet date of securities loaned to other broker dealers, typically used by such parties to cover
    /// short sales, secured by cash or other securities furnished by such parties until the borrowing is closed.
    /// </summary>
    public class SecuritiesLoanedBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the SecuritiesLoanedBalanceSheet class
        /// </summary>
        public SecuritiesLoanedBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the SecuritiesLoanedBalanceSheet class
        /// </summary>
        public SecuritiesLoanedBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Net assets in physical form. This is calculated using Stockholders' Equity less Intangible Assets (including Goodwill).
    /// </summary>
    public class NetTangibleAssetsBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the NetTangibleAssetsBalanceSheet class
        /// </summary>
        public NetTangibleAssetsBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the NetTangibleAssetsBalanceSheet class
        /// </summary>
        public NetTangibleAssetsBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Amounts owed to the company from a non-arm's length entity, due within the company's current operating cycle.
    /// </summary>
    public class DuefromRelatedPartiesCurrentBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the DuefromRelatedPartiesCurrentBalanceSheet class
        /// </summary>
        public DuefromRelatedPartiesCurrentBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the DuefromRelatedPartiesCurrentBalanceSheet class
        /// </summary>
        public DuefromRelatedPartiesCurrentBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Amounts owed to the company from a non-arm's length entity, due after the company's current operating cycle.
    /// </summary>
    public class DuefromRelatedPartiesNonCurrentBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the DuefromRelatedPartiesNonCurrentBalanceSheet class
        /// </summary>
        public DuefromRelatedPartiesNonCurrentBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the DuefromRelatedPartiesNonCurrentBalanceSheet class
        /// </summary>
        public DuefromRelatedPartiesNonCurrentBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Amounts owed by the company to a non-arm's length entity.
    /// </summary>
    public class DuetoRelatedPartiesBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the DuetoRelatedPartiesBalanceSheet class
        /// </summary>
        public DuetoRelatedPartiesBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the DuetoRelatedPartiesBalanceSheet class
        /// </summary>
        public DuetoRelatedPartiesBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Amounts owed by the company to a non-arm's length entity that has to be repaid within the company's current operating cycle.
    /// </summary>
    public class DuetoRelatedPartiesCurrentBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the DuetoRelatedPartiesCurrentBalanceSheet class
        /// </summary>
        public DuetoRelatedPartiesCurrentBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the DuetoRelatedPartiesCurrentBalanceSheet class
        /// </summary>
        public DuetoRelatedPartiesCurrentBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Amounts owed by the company to a non-arm's length entity that has to be repaid after the company's current operating cycle.
    /// </summary>
    public class DuetoRelatedPartiesNonCurrentBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the DuetoRelatedPartiesNonCurrentBalanceSheet class
        /// </summary>
        public DuetoRelatedPartiesNonCurrentBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the DuetoRelatedPartiesNonCurrentBalanceSheet class
        /// </summary>
        public DuetoRelatedPartiesNonCurrentBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Company's investments in properties net of accumulated depreciation, which generate a return.
    /// </summary>
    public class InvestmentPropertiesBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the InvestmentPropertiesBalanceSheet class
        /// </summary>
        public InvestmentPropertiesBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the InvestmentPropertiesBalanceSheet class
        /// </summary>
        public InvestmentPropertiesBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// A stake in any company which is more than 51%.
    /// </summary>
    public class InvestmentsinSubsidiariesatCostBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the InvestmentsinSubsidiariesatCostBalanceSheet class
        /// </summary>
        public InvestmentsinSubsidiariesatCostBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the InvestmentsinSubsidiariesatCostBalanceSheet class
        /// </summary>
        public InvestmentsinSubsidiariesatCostBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// A stake in any company which is more than 20% but less than 50%.
    /// </summary>
    public class InvestmentsinAssociatesatCostBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the InvestmentsinAssociatesatCostBalanceSheet class
        /// </summary>
        public InvestmentsinAssociatesatCostBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the InvestmentsinAssociatesatCostBalanceSheet class
        /// </summary>
        public InvestmentsinAssociatesatCostBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// A 50% stake in any company in which remaining 50% belongs to other company.
    /// </summary>
    public class InvestmentsinJointVenturesatCostBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the InvestmentsinJointVenturesatCostBalanceSheet class
        /// </summary>
        public InvestmentsinJointVenturesatCostBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the InvestmentsinJointVenturesatCostBalanceSheet class
        /// </summary>
        public InvestmentsinJointVenturesatCostBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Represents the sum of all financial investments (trading securities, available-for-sale securities, held-to-maturity securities, etc.)
    /// </summary>
    public class InvestmentinFinancialAssetsBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the InvestmentinFinancialAssetsBalanceSheet class
        /// </summary>
        public InvestmentinFinancialAssetsBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the InvestmentinFinancialAssetsBalanceSheet class
        /// </summary>
        public InvestmentinFinancialAssetsBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Accounts owed to the bank in relation to capital leases. Capital/ finance lease obligation are contractual obligations that arise from
    /// obtaining the use of property or equipment via a capital lease contract.
    /// </summary>
    public class FinanceLeaseReceivablesBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the FinanceLeaseReceivablesBalanceSheet class
        /// </summary>
        public FinanceLeaseReceivablesBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the FinanceLeaseReceivablesBalanceSheet class
        /// </summary>
        public FinanceLeaseReceivablesBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// This represents loans that entitle the lender (or the holder of loan debenture) to convert the loan to common or preferred stock
    /// (ordinary or preference shares) within the next 12 months or operating cycle.
    /// </summary>
    public class ConvertibleLoansCurrentBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ConvertibleLoansCurrentBalanceSheet class
        /// </summary>
        public ConvertibleLoansCurrentBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the ConvertibleLoansCurrentBalanceSheet class
        /// </summary>
        public ConvertibleLoansCurrentBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// A debt financing obligation issued by a bank or similar financial institution to a company, that entitles the lender or holder of the
    /// instrument to interest payments and the repayment of principal at a specified time within the next 12 months or operating cycle.
    /// </summary>
    public class BankLoansCurrentBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the BankLoansCurrentBalanceSheet class
        /// </summary>
        public BankLoansCurrentBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the BankLoansCurrentBalanceSheet class
        /// </summary>
        public BankLoansCurrentBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Other loans between the customer and bank which cannot be identified by other specific items in the Debt section, due within the
    /// next 12 months or operating cycle.
    /// </summary>
    public class OtherLoansCurrentBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the OtherLoansCurrentBalanceSheet class
        /// </summary>
        public OtherLoansCurrentBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the OtherLoansCurrentBalanceSheet class
        /// </summary>
        public OtherLoansCurrentBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Sum of accrued liabilities and deferred income (amount received in advance but the services are not provided in respect of
    /// amount).
    /// </summary>
    public class AccruedandDeferredIncomeBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the AccruedandDeferredIncomeBalanceSheet class
        /// </summary>
        public AccruedandDeferredIncomeBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the AccruedandDeferredIncomeBalanceSheet class
        /// </summary>
        public AccruedandDeferredIncomeBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// A debt financing obligation issued by a bank or similar financial institution to a company, that entitles the lender or holder of the
    /// instrument to interest payments and the repayment of principal at a specified time beyond the current accounting Intperiod.
    /// </summary>
    public class BankLoansNonCurrentBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the BankLoansNonCurrentBalanceSheet class
        /// </summary>
        public BankLoansNonCurrentBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the BankLoansNonCurrentBalanceSheet class
        /// </summary>
        public BankLoansNonCurrentBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Other loans between the customer and bank which cannot be identified by other specific items in the Debt section, due beyond the
    /// current operating cycle.
    /// </summary>
    public class OtherLoansNonCurrentBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the OtherLoansNonCurrentBalanceSheet class
        /// </summary>
        public OtherLoansNonCurrentBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the OtherLoansNonCurrentBalanceSheet class
        /// </summary>
        public OtherLoansNonCurrentBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Other reserves owned by the company that cannot be identified by other specific items in the Reserves section.
    /// </summary>
    public class OtherReservesBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the OtherReservesBalanceSheet class
        /// </summary>
        public OtherReservesBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the OtherReservesBalanceSheet class
        /// </summary>
        public OtherReservesBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The aggregate amount of loans and advances made to a bank or financial institution.
    /// </summary>
    public class LoansandAdvancestoBankBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the LoansandAdvancestoBankBalanceSheet class
        /// </summary>
        public LoansandAdvancestoBankBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the LoansandAdvancestoBankBalanceSheet class
        /// </summary>
        public LoansandAdvancestoBankBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The aggregate amount of loans and advances made to customers.
    /// </summary>
    public class LoansandAdvancestoCustomerBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the LoansandAdvancestoCustomerBalanceSheet class
        /// </summary>
        public LoansandAdvancestoCustomerBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the LoansandAdvancestoCustomerBalanceSheet class
        /// </summary>
        public LoansandAdvancestoCustomerBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Investments backed by the central government, it usually carries less risk than other investments.
    /// </summary>
    public class TreasuryBillsandOtherEligibleBillsBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the TreasuryBillsandOtherEligibleBillsBalanceSheet class
        /// </summary>
        public TreasuryBillsandOtherEligibleBillsBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the TreasuryBillsandOtherEligibleBillsBalanceSheet class
        /// </summary>
        public TreasuryBillsandOtherEligibleBillsBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Investments in shares of a company representing ownership in that company.
    /// </summary>
    public class EquitySharesInvestmentsBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the EquitySharesInvestmentsBalanceSheet class
        /// </summary>
        public EquitySharesInvestmentsBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the EquitySharesInvestmentsBalanceSheet class
        /// </summary>
        public EquitySharesInvestmentsBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Banks investment in the ongoing entity.
    /// </summary>
    public class DepositsbyBankBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the DepositsbyBankBalanceSheet class
        /// </summary>
        public DepositsbyBankBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the DepositsbyBankBalanceSheet class
        /// </summary>
        public DepositsbyBankBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Carrying value of amounts transferred by customers to third parties for security purposes that are expected to be returned or
    /// applied towards payment after one year or beyond the operating cycle, if longer.
    /// </summary>
    public class CustomerAccountsBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the CustomerAccountsBalanceSheet class
        /// </summary>
        public CustomerAccountsBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the CustomerAccountsBalanceSheet class
        /// </summary>
        public CustomerAccountsBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Carrying amount as of the balance sheet date of drafts and bills of exchange that have been accepted by the reporting bank or by
    /// others for its own account, as its liability to holders of the drafts.
    /// </summary>
    public class ItemsinTheCourseofTransmissiontoOtherBanksBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ItemsinTheCourseofTransmissiontoOtherBanksBalanceSheet class
        /// </summary>
        public ItemsinTheCourseofTransmissiontoOtherBanksBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the ItemsinTheCourseofTransmissiontoOtherBanksBalanceSheet class
        /// </summary>
        public ItemsinTheCourseofTransmissiontoOtherBanksBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Total carrying amount of total trading, financial liabilities and debt in a non-differentiated balance sheet.
    /// </summary>
    public class TradingandFinancialLiabilitiesBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the TradingandFinancialLiabilitiesBalanceSheet class
        /// </summary>
        public TradingandFinancialLiabilitiesBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the TradingandFinancialLiabilitiesBalanceSheet class
        /// </summary>
        public TradingandFinancialLiabilitiesBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Any debt financial instrument issued instead of cash loan.
    /// </summary>
    public class DebtSecuritiesinIssueBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the DebtSecuritiesinIssueBalanceSheet class
        /// </summary>
        public DebtSecuritiesinIssueBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the DebtSecuritiesinIssueBalanceSheet class
        /// </summary>
        public DebtSecuritiesinIssueBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The total carrying value of securities loaned to other broker dealers, typically used by such parties to cover short sales, secured by
    /// cash or other securities furnished by such parties until the borrowing is closed; in a Non-Differentiated Balance Sheet.
    /// </summary>
    public class SubordinatedLiabilitiesBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the SubordinatedLiabilitiesBalanceSheet class
        /// </summary>
        public SubordinatedLiabilitiesBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the SubordinatedLiabilitiesBalanceSheet class
        /// </summary>
        public SubordinatedLiabilitiesBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Provisions are created to protect the interests of one or both parties named in a contract or legal document, which is a preparatory
    /// action or measure. Current provision is expired within one accounting Intperiod.
    /// </summary>
    public class ProvisionsTotalBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ProvisionsTotalBalanceSheet class
        /// </summary>
        public ProvisionsTotalBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the ProvisionsTotalBalanceSheet class
        /// </summary>
        public ProvisionsTotalBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// A contract that allows for the use of an asset, but does not convey rights of ownership of the asset. An operating lease is not
    /// capitalized; it is accounted for as a rental expense in what is known as "off balance sheet financing." For the lessor, the asset being
    /// leased is accounted for as an asset and is depreciated as such.
    /// </summary>
    public class OperatingLeaseAssetsBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the OperatingLeaseAssetsBalanceSheet class
        /// </summary>
        public OperatingLeaseAssetsBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the OperatingLeaseAssetsBalanceSheet class
        /// </summary>
        public OperatingLeaseAssetsBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Amounts owing to policy holders who have filed claims but have not yet been settled or paid.
    /// </summary>
    public class ClaimsOutstandingBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ClaimsOutstandingBalanceSheet class
        /// </summary>
        public ClaimsOutstandingBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the ClaimsOutstandingBalanceSheet class
        /// </summary>
        public ClaimsOutstandingBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Liabilities due within the next 12 months related from an asset classified as Held for Sale.
    /// </summary>
    public class LiabilitiesHeldforSaleCurrentBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the LiabilitiesHeldforSaleCurrentBalanceSheet class
        /// </summary>
        public LiabilitiesHeldforSaleCurrentBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the LiabilitiesHeldforSaleCurrentBalanceSheet class
        /// </summary>
        public LiabilitiesHeldforSaleCurrentBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Liabilities related to an asset classified as held for sale excluding the portion due the next 12 months or operating cycle.
    /// </summary>
    public class LiabilitiesHeldforSaleNonCurrentBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the LiabilitiesHeldforSaleNonCurrentBalanceSheet class
        /// </summary>
        public LiabilitiesHeldforSaleNonCurrentBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the LiabilitiesHeldforSaleNonCurrentBalanceSheet class
        /// </summary>
        public LiabilitiesHeldforSaleNonCurrentBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Debt securities held as investments.
    /// </summary>
    public class DebtSecuritiesBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the DebtSecuritiesBalanceSheet class
        /// </summary>
        public DebtSecuritiesBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the DebtSecuritiesBalanceSheet class
        /// </summary>
        public DebtSecuritiesBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Represents the total amount of long-term capital leases that must be paid within the next accounting period for a Non-
    /// Differentiated Balance Sheet. Capital lease obligations are contractual obligations that arise from obtaining the use of property or
    /// equipment via a capital lease contract.
    /// </summary>
    public class TotalFinancialLeaseObligationsBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the TotalFinancialLeaseObligationsBalanceSheet class
        /// </summary>
        public TotalFinancialLeaseObligationsBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the TotalFinancialLeaseObligationsBalanceSheet class
        /// </summary>
        public TotalFinancialLeaseObligationsBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Sum of Accrued Liabilities and Deferred Income (amount received in advance but the services are not provided in respect of
    /// amount) due within 1 year.
    /// </summary>
    public class AccruedandDeferredIncomeCurrentBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the AccruedandDeferredIncomeCurrentBalanceSheet class
        /// </summary>
        public AccruedandDeferredIncomeCurrentBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the AccruedandDeferredIncomeCurrentBalanceSheet class
        /// </summary>
        public AccruedandDeferredIncomeCurrentBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Sum of Accrued Liabilities and Deferred Income (amount received in advance but the services are not provided in respect of
    /// amount) due after 1 year.
    /// </summary>
    public class AccruedandDeferredIncomeNonCurrentBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the AccruedandDeferredIncomeNonCurrentBalanceSheet class
        /// </summary>
        public AccruedandDeferredIncomeNonCurrentBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the AccruedandDeferredIncomeNonCurrentBalanceSheet class
        /// </summary>
        public AccruedandDeferredIncomeNonCurrentBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Accounts owed to the bank in relation to capital leases to be received within the next accounting Intperiod. Capital/ finance lease
    /// obligations are contractual obligations that arise from obtaining the use of property or equipment via a capital lease contract.
    /// </summary>
    public class FinanceLeaseReceivablesCurrentBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the FinanceLeaseReceivablesCurrentBalanceSheet class
        /// </summary>
        public FinanceLeaseReceivablesCurrentBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the FinanceLeaseReceivablesCurrentBalanceSheet class
        /// </summary>
        public FinanceLeaseReceivablesCurrentBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Accounts owed to the bank in relation to capital leases to be received beyond the next accounting Intperiod. Capital/ finance lease
    /// obligations are contractual obligations that arise from obtaining the use of property or equipment via a capital lease contract.
    /// </summary>
    public class FinanceLeaseReceivablesNonCurrentBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the FinanceLeaseReceivablesNonCurrentBalanceSheet class
        /// </summary>
        public FinanceLeaseReceivablesNonCurrentBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the FinanceLeaseReceivablesNonCurrentBalanceSheet class
        /// </summary>
        public FinanceLeaseReceivablesNonCurrentBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Financial related liabilities due within one year, including short term and current portions of long-term debt, capital leases and
    /// derivative liabilities.
    /// </summary>
    public class FinancialLiabilitiesCurrentBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the FinancialLiabilitiesCurrentBalanceSheet class
        /// </summary>
        public FinancialLiabilitiesCurrentBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the FinancialLiabilitiesCurrentBalanceSheet class
        /// </summary>
        public FinancialLiabilitiesCurrentBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Financial related liabilities due beyond one year, including long term debt, capital leases and derivative liabilities.
    /// </summary>
    public class FinancialLiabilitiesNonCurrentBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the FinancialLiabilitiesNonCurrentBalanceSheet class
        /// </summary>
        public FinancialLiabilitiesNonCurrentBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the FinancialLiabilitiesNonCurrentBalanceSheet class
        /// </summary>
        public FinancialLiabilitiesNonCurrentBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Financial assets that are held at fair value through profit or loss comprise assets held for trading and those financial assets
    /// designated as being held at fair value through profit or loss.
    /// </summary>
    public class FinancialAssetsDesignatedasFairValueThroughProfitorLossTotalBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the FinancialAssetsDesignatedasFairValueThroughProfitorLossTotalBalanceSheet class
        /// </summary>
        public FinancialAssetsDesignatedasFairValueThroughProfitorLossTotalBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the FinancialAssetsDesignatedasFairValueThroughProfitorLossTotalBalanceSheet class
        /// </summary>
        public FinancialAssetsDesignatedasFairValueThroughProfitorLossTotalBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Carrying amount due within one year of the balance sheet date (or one operating cycle, if longer) from tax authorities as of the
    /// balance sheet date representing refunds of overpayments or recoveries based on agreed-upon resolutions of disputes, and current
    /// deferred tax assets.
    /// </summary>
    public class TaxesAssetsCurrentBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the TaxesAssetsCurrentBalanceSheet class
        /// </summary>
        public TaxesAssetsCurrentBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the TaxesAssetsCurrentBalanceSheet class
        /// </summary>
        public TaxesAssetsCurrentBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Other equity instruments issued by the company that cannot be identified by other specific items in the Equity section.
    /// </summary>
    public class OtherEquityInterestBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the OtherEquityInterestBalanceSheet class
        /// </summary>
        public OtherEquityInterestBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the OtherEquityInterestBalanceSheet class
        /// </summary>
        public OtherEquityInterestBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Carrying amount of any interest-bearing loan which is due after one year.
    /// </summary>
    public class InterestBearingBorrowingsNonCurrentBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the InterestBearingBorrowingsNonCurrentBalanceSheet class
        /// </summary>
        public InterestBearingBorrowingsNonCurrentBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the InterestBearingBorrowingsNonCurrentBalanceSheet class
        /// </summary>
        public InterestBearingBorrowingsNonCurrentBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Non-interest bearing borrowings due after a year.
    /// </summary>
    public class NonInterestBearingBorrowingsNonCurrentBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the NonInterestBearingBorrowingsNonCurrentBalanceSheet class
        /// </summary>
        public NonInterestBearingBorrowingsNonCurrentBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the NonInterestBearingBorrowingsNonCurrentBalanceSheet class
        /// </summary>
        public NonInterestBearingBorrowingsNonCurrentBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Sum of all non-current payables and accrued expenses.
    /// </summary>
    public class TradeandOtherPayablesNonCurrentBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the TradeandOtherPayablesNonCurrentBalanceSheet class
        /// </summary>
        public TradeandOtherPayablesNonCurrentBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the TradeandOtherPayablesNonCurrentBalanceSheet class
        /// </summary>
        public TradeandOtherPayablesNonCurrentBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Non-interest bearing deposits in other financial institutions for short periods of time, usually less than 12 months.
    /// </summary>
    public class NonInterestBearingBorrowingsCurrentBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the NonInterestBearingBorrowingsCurrentBalanceSheet class
        /// </summary>
        public NonInterestBearingBorrowingsCurrentBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the NonInterestBearingBorrowingsCurrentBalanceSheet class
        /// </summary>
        public NonInterestBearingBorrowingsCurrentBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Total of the carrying values as of the balance sheet date of obligations incurred through that date and payable for obligations related
    /// to services received from employees, such as accrued salaries and bonuses, payroll taxes and fringe benefits.
    /// </summary>
    public class PensionandOtherPostRetirementBenefitPlansCurrentBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the PensionandOtherPostRetirementBenefitPlansCurrentBalanceSheet class
        /// </summary>
        public PensionandOtherPostRetirementBenefitPlansCurrentBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the PensionandOtherPostRetirementBenefitPlansCurrentBalanceSheet class
        /// </summary>
        public PensionandOtherPostRetirementBenefitPlansCurrentBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Reflects the carrying amount of any other unpaid loans, an asset of the bank.
    /// </summary>
    public class OtherLoanAssetsBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the OtherLoanAssetsBalanceSheet class
        /// </summary>
        public OtherLoanAssetsBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the OtherLoanAssetsBalanceSheet class
        /// </summary>
        public OtherLoanAssetsBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Total value collateral assets pledged to the bank that can be sold or used as collateral for other loans.
    /// </summary>
    public class AssetsPledgedasCollateralSubjecttoSaleorRepledgingTotalBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the AssetsPledgedasCollateralSubjecttoSaleorRepledgingTotalBalanceSheet class
        /// </summary>
        public AssetsPledgedasCollateralSubjecttoSaleorRepledgingTotalBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the AssetsPledgedasCollateralSubjecttoSaleorRepledgingTotalBalanceSheet class
        /// </summary>
        public AssetsPledgedasCollateralSubjecttoSaleorRepledgingTotalBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Sum of total tax assets in a Non-Differentiated Balance Sheet, includes Tax Receivables and Deferred Tax Assets.
    /// </summary>
    public class TaxAssetsTotalBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the TaxAssetsTotalBalanceSheet class
        /// </summary>
        public TaxAssetsTotalBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the TaxAssetsTotalBalanceSheet class
        /// </summary>
        public TaxAssetsTotalBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Borrowings from the central bank, which are primarily used to cover shortages in the required reserve balance and liquidity
    /// shortages.
    /// </summary>
    public class AdvancesfromCentralBanksBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the AdvancesfromCentralBanksBalanceSheet class
        /// </summary>
        public AdvancesfromCentralBanksBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the AdvancesfromCentralBanksBalanceSheet class
        /// </summary>
        public AdvancesfromCentralBanksBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// A savings certificate entitling the bearer to receive interest. A CD bears a maturity date, a specified fixed interest rate and can be
    /// issued in any denomination.
    /// </summary>
    public class DepositCertificatesBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the DepositCertificatesBalanceSheet class
        /// </summary>
        public DepositCertificatesBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the DepositCertificatesBalanceSheet class
        /// </summary>
        public DepositCertificatesBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Non-interest bearing deposits in other financial institutions for relatively short periods of time; on a Non-Differentiated Balance
    /// Sheet.
    /// </summary>
    public class NonInterestBearingBorrowingsTotalBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the NonInterestBearingBorrowingsTotalBalanceSheet class
        /// </summary>
        public NonInterestBearingBorrowingsTotalBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the NonInterestBearingBorrowingsTotalBalanceSheet class
        /// </summary>
        public NonInterestBearingBorrowingsTotalBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Other borrowings by the bank to fund its activities that cannot be identified by other specific items in the Liabilities section.
    /// </summary>
    public class OtherBorrowedFundsBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the OtherBorrowedFundsBalanceSheet class
        /// </summary>
        public OtherBorrowedFundsBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the OtherBorrowedFundsBalanceSheet class
        /// </summary>
        public OtherBorrowedFundsBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Financial liabilities that are held at fair value through profit or loss.
    /// </summary>
    public class FinancialLiabilitiesDesignatedasFairValueThroughProfitorLossTotalBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the FinancialLiabilitiesDesignatedasFairValueThroughProfitorLossTotalBalanceSheet class
        /// </summary>
        public FinancialLiabilitiesDesignatedasFairValueThroughProfitorLossTotalBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the FinancialLiabilitiesDesignatedasFairValueThroughProfitorLossTotalBalanceSheet class
        /// </summary>
        public FinancialLiabilitiesDesignatedasFairValueThroughProfitorLossTotalBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Financial liabilities carried at amortized cost.
    /// </summary>
    public class FinancialLiabilitiesMeasuredatAmortizedCostTotalBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the FinancialLiabilitiesMeasuredatAmortizedCostTotalBalanceSheet class
        /// </summary>
        public FinancialLiabilitiesMeasuredatAmortizedCostTotalBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the FinancialLiabilitiesMeasuredatAmortizedCostTotalBalanceSheet class
        /// </summary>
        public FinancialLiabilitiesMeasuredatAmortizedCostTotalBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Liabilities which have occurred, but have not been paid or logged under accounts payable during an accounting Intperiod. In other
    /// words, obligations for goods and services provided to a company for which invoices have not yet been received; on a Non-
    /// Differentiated Balance Sheet.
    /// </summary>
    public class AccruedLiabilitiesTotalBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the AccruedLiabilitiesTotalBalanceSheet class
        /// </summary>
        public AccruedLiabilitiesTotalBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the AccruedLiabilitiesTotalBalanceSheet class
        /// </summary>
        public AccruedLiabilitiesTotalBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Collections of cash or other assets related to revenue producing activity for which revenue has not yet been recognized on a Non-
    /// Differentiated Balance Sheet.
    /// </summary>
    public class DeferredIncomeTotalBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the DeferredIncomeTotalBalanceSheet class
        /// </summary>
        public DeferredIncomeTotalBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the DeferredIncomeTotalBalanceSheet class
        /// </summary>
        public DeferredIncomeTotalBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// A future tax liability, resulting from temporary differences between book (accounting) value of assets and liabilities and their tax
    /// value or timing differences between the recognition of gains and losses in financial statements, on a Non-Differentiated Balance
    /// Sheet.
    /// </summary>
    public class DeferredTaxLiabilitiesTotalBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the DeferredTaxLiabilitiesTotalBalanceSheet class
        /// </summary>
        public DeferredTaxLiabilitiesTotalBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the DeferredTaxLiabilitiesTotalBalanceSheet class
        /// </summary>
        public DeferredTaxLiabilitiesTotalBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Reinsurance asset is insurance that is purchased by an insurance company from another insurance company.
    /// </summary>
    public class ReinsuranceAssetsBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ReinsuranceAssetsBalanceSheet class
        /// </summary>
        public ReinsuranceAssetsBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the ReinsuranceAssetsBalanceSheet class
        /// </summary>
        public ReinsuranceAssetsBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Deposits made under reinsurance.
    /// </summary>
    public class DepositsMadeunderAssumedReinsuranceContractBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the DepositsMadeunderAssumedReinsuranceContractBalanceSheet class
        /// </summary>
        public DepositsMadeunderAssumedReinsuranceContractBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the DepositsMadeunderAssumedReinsuranceContractBalanceSheet class
        /// </summary>
        public DepositsMadeunderAssumedReinsuranceContractBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// A contract under which one party (the insurer) accepts significant insurance risk from another party (the policyholder) by agreeing
    /// to compensate the policyholder if a specified uncertain future event (the insured event) adversely affects the policyholder. This
    /// includes Insurance Receivables and Premiums Receivables.
    /// </summary>
    public class InsuranceContractAssetsBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the InsuranceContractAssetsBalanceSheet class
        /// </summary>
        public InsuranceContractAssetsBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the InsuranceContractAssetsBalanceSheet class
        /// </summary>
        public InsuranceContractAssetsBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Any type of insurance policy that protects an individual or business from the risk that they may be sued and held legally liable for
    /// something such as malpractice, injury or negligence. Liability insurance policies cover both legal costs and any legal payouts for
    /// which the insured would be responsible if found legally liable. Intentional damage and contractual liabilities are typically not covered
    /// in these types of policies.
    /// </summary>
    public class InsuranceContractLiabilitiesBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the InsuranceContractLiabilitiesBalanceSheet class
        /// </summary>
        public InsuranceContractLiabilitiesBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the InsuranceContractLiabilitiesBalanceSheet class
        /// </summary>
        public InsuranceContractLiabilitiesBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Deposit received through ceded insurance contract.
    /// </summary>
    public class DepositsReceivedunderCededInsuranceContractBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the DepositsReceivedunderCededInsuranceContractBalanceSheet class
        /// </summary>
        public DepositsReceivedunderCededInsuranceContractBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the DepositsReceivedunderCededInsuranceContractBalanceSheet class
        /// </summary>
        public DepositsReceivedunderCededInsuranceContractBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Liabilities due on the insurance investment contract.
    /// </summary>
    public class InvestmentContractLiabilitiesBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the InvestmentContractLiabilitiesBalanceSheet class
        /// </summary>
        public InvestmentContractLiabilitiesBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the InvestmentContractLiabilitiesBalanceSheet class
        /// </summary>
        public InvestmentContractLiabilitiesBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Total of the carrying values as of the balance sheet date of obligations incurred through that date and payable for obligations related
    /// to services received from employees, such as accrued salaries and bonuses, payroll taxes and fringe benefits. Used to reflect the
    /// current portion of the liabilities (due within one year or within the normal operating cycle if longer).
    /// </summary>
    public class PensionAndOtherPostretirementBenefitPlansTotalBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the PensionAndOtherPostretirementBenefitPlansTotalBalanceSheet class
        /// </summary>
        public PensionAndOtherPostretirementBenefitPlansTotalBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the PensionAndOtherPostretirementBenefitPlansTotalBalanceSheet class
        /// </summary>
        public PensionAndOtherPostretirementBenefitPlansTotalBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Liabilities related to an asset classified as held for sale.
    /// </summary>
    public class LiabilitiesHeldforSaleTotalBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the LiabilitiesHeldforSaleTotalBalanceSheet class
        /// </summary>
        public LiabilitiesHeldforSaleTotalBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the LiabilitiesHeldforSaleTotalBalanceSheet class
        /// </summary>
        public LiabilitiesHeldforSaleTotalBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// A security transaction which expires within a 12 month period that reduces the risk on an existing investment position.
    /// </summary>
    public class HedgingAssetsCurrentBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the HedgingAssetsCurrentBalanceSheet class
        /// </summary>
        public HedgingAssetsCurrentBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the HedgingAssetsCurrentBalanceSheet class
        /// </summary>
        public HedgingAssetsCurrentBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Loans that entitles the lender (or the holder of loan debenture) to convert the loan to common or preferred stock (ordinary or
    /// preference shares) at a specified rate conversion rate and a specified time frame; in a Non-Differentiated Balance Sheet.
    /// </summary>
    public class ConvertibleLoansTotalBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ConvertibleLoansTotalBalanceSheet class
        /// </summary>
        public ConvertibleLoansTotalBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the ConvertibleLoansTotalBalanceSheet class
        /// </summary>
        public ConvertibleLoansTotalBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Total debt financing obligation issued by a bank or similar financial institution to a company that entitles the lender or holder of the
    /// instrument to interest payments and the repayment of principal at a specified time; in a Non-Differentiated Balance Sheet.
    /// </summary>
    public class BankLoansTotalBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the BankLoansTotalBalanceSheet class
        /// </summary>
        public BankLoansTotalBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the BankLoansTotalBalanceSheet class
        /// </summary>
        public BankLoansTotalBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Total other loans between the customer and bank which cannot be identified by other specific items in the Debt section; in a Non-
    /// Differentiated Balance Sheet.
    /// </summary>
    public class OtherLoansTotalBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the OtherLoansTotalBalanceSheet class
        /// </summary>
        public OtherLoansTotalBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the OtherLoansTotalBalanceSheet class
        /// </summary>
        public OtherLoansTotalBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Liabilities related to insurance funds that are dissolved after one year.
    /// </summary>
    public class InsuranceFundsNonCurrentBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the InsuranceFundsNonCurrentBalanceSheet class
        /// </summary>
        public InsuranceFundsNonCurrentBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the InsuranceFundsNonCurrentBalanceSheet class
        /// </summary>
        public InsuranceFundsNonCurrentBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The total aggregate of all written promises and/or agreements to repay a stated amount of borrowed funds at a specified date in
    /// the future; in a Non-Differentiated Balance Sheet.
    /// </summary>
    public class DebtTotalBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the DebtTotalBalanceSheet class
        /// </summary>
        public DebtTotalBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the DebtTotalBalanceSheet class
        /// </summary>
        public DebtTotalBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The treasury stock number of common shares. This represents the number of common shares owned by the company as a result of
    /// share repurchase programs or donations.
    /// </summary>
    public class ComTreShaNumBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ComTreShaNumBalanceSheet class
        /// </summary>
        public ComTreShaNumBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the ComTreShaNumBalanceSheet class
        /// </summary>
        public ComTreShaNumBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The treasury stock number of preferred shares. This represents the number of preferred shares owned by the company as a result
    /// of share repurchase programs or donations.
    /// </summary>
    public class PreTreShaNumBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the PreTreShaNumBalanceSheet class
        /// </summary>
        public PreTreShaNumBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the PreTreShaNumBalanceSheet class
        /// </summary>
        public PreTreShaNumBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// This is a metric that shows a company's overall debt situation by netting the value of a company's liabilities and
    /// debts with its cash and other similar liquid assets. It is calculated using [Current Debt] + [Long Term Debt] - [Cash and Cash
    /// Equivalents].
    /// </summary>
    public class NetDebtBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the NetDebtBalanceSheet class
        /// </summary>
        public NetDebtBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the NetDebtBalanceSheet class
        /// </summary>
        public NetDebtBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The number of authorized shares that is sold to and held by the shareholders of a company, regardless of whether they are insiders,
    /// institutional investors or the general public. Unlike shares that are held as treasury stock, shares that have been retired are not
    /// included in this figure. The amount of issued shares can be all or part of the total amount of authorized shares of a corporation.
    /// </summary>
    public class ShareIssuedBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ShareIssuedBalanceSheet class
        /// </summary>
        public ShareIssuedBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the ShareIssuedBalanceSheet class
        /// </summary>
        public ShareIssuedBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Short term assets set apart for sale to liquidate in the future and are measured at the lower of carrying amount and fair value less
    /// costs to sell.
    /// </summary>
    public class AssetsHeldForSaleCurrentBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the AssetsHeldForSaleCurrentBalanceSheet class
        /// </summary>
        public AssetsHeldForSaleCurrentBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the AssetsHeldForSaleCurrentBalanceSheet class
        /// </summary>
        public AssetsHeldForSaleCurrentBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Long term assets set apart for sale to liquidate in the future and are measured at the lower of carrying amount and fair value less
    /// costs to sell.
    /// </summary>
    public class AssetsHeldForSaleNonCurrentBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the AssetsHeldForSaleNonCurrentBalanceSheet class
        /// </summary>
        public AssetsHeldForSaleNonCurrentBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the AssetsHeldForSaleNonCurrentBalanceSheet class
        /// </summary>
        public AssetsHeldForSaleNonCurrentBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Biological assets include plants and animals.
    /// </summary>
    public class BiologicalAssetsBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the BiologicalAssetsBalanceSheet class
        /// </summary>
        public BiologicalAssetsBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the BiologicalAssetsBalanceSheet class
        /// </summary>
        public BiologicalAssetsBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Cash that the company can use only for specific purposes or cash deposit or placing of owned property by a debtor (the pledger) to
    /// a creditor (the pledgee) as a security for a loan or obligation.
    /// </summary>
    public class CashRestrictedOrPledgedBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the CashRestrictedOrPledgedBalanceSheet class
        /// </summary>
        public CashRestrictedOrPledgedBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the CashRestrictedOrPledgedBalanceSheet class
        /// </summary>
        public CashRestrictedOrPledgedBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// A long term loan with a warrant attached that gives the debt holder the option to exchange all or a portion of the loan principal for
    /// an equity position in the company at a predetermined rate of conversion within a specified period of time.
    /// </summary>
    public class ConvertibleLoansNonCurrentBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ConvertibleLoansNonCurrentBalanceSheet class
        /// </summary>
        public ConvertibleLoansNonCurrentBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the ConvertibleLoansNonCurrentBalanceSheet class
        /// </summary>
        public ConvertibleLoansNonCurrentBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Financial instruments that are linked to a specific financial instrument or indicator or commodity, and through which specific
    /// financial risks can be traded in financial markets in their own right, such as financial options, futures, forwards, etc.
    /// </summary>
    public class FinancialOrDerivativeInvestmentCurrentLiabilitiesBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the FinancialOrDerivativeInvestmentCurrentLiabilitiesBalanceSheet class
        /// </summary>
        public FinancialOrDerivativeInvestmentCurrentLiabilitiesBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the FinancialOrDerivativeInvestmentCurrentLiabilitiesBalanceSheet class
        /// </summary>
        public FinancialOrDerivativeInvestmentCurrentLiabilitiesBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Investments that are neither Investment in Financial Assets nor Long term equity investment, not expected to be cashed within a
    /// year.
    /// </summary>
    public class OtherInvestmentsBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the OtherInvestmentsBalanceSheet class
        /// </summary>
        public OtherInvestmentsBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the OtherInvestmentsBalanceSheet class
        /// </summary>
        public OtherInvestmentsBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Amounts due from customers or clients, more than one year from the balance sheet date, for goods or services that have been
    /// delivered or sold in the normal course of business, or other receivables.
    /// </summary>
    public class TradeAndOtherReceivablesNonCurrentBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the TradeAndOtherReceivablesNonCurrentBalanceSheet class
        /// </summary>
        public TradeAndOtherReceivablesNonCurrentBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the TradeAndOtherReceivablesNonCurrentBalanceSheet class
        /// </summary>
        public TradeAndOtherReceivablesNonCurrentBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// For an unclassified balance sheet, carrying amount as of the balance sheet date of obligations due all related parties.
    /// </summary>
    public class DueFromRelatedPartiesBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the DueFromRelatedPartiesBalanceSheet class
        /// </summary>
        public DueFromRelatedPartiesBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the DueFromRelatedPartiesBalanceSheet class
        /// </summary>
        public DueFromRelatedPartiesBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The amount of surplus from insurance contracts which has not been allocated at the balance sheet date. This is represented as a
    /// liability to policyholders, as it pertains to cumulative income arising from the with-profits business.
    /// </summary>
    public class UnallocatedSurplusBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the UnallocatedSurplusBalanceSheet class
        /// </summary>
        public UnallocatedSurplusBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the UnallocatedSurplusBalanceSheet class
        /// </summary>
        public UnallocatedSurplusBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Debt due under 1 year according to the debt maturity schedule reported by the company.
    /// </summary>
    public class DebtDueInYear1BalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the DebtDueInYear1BalanceSheet class
        /// </summary>
        public DebtDueInYear1BalanceSheet() { }

        /// <summary>
        /// Creates an instance of the DebtDueInYear1BalanceSheet class
        /// </summary>
        public DebtDueInYear1BalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Debt due under 2 years according to the debt maturity schedule reported by the company.
    /// </summary>
    public class DebtDueInYear2BalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the DebtDueInYear2BalanceSheet class
        /// </summary>
        public DebtDueInYear2BalanceSheet() { }

        /// <summary>
        /// Creates an instance of the DebtDueInYear2BalanceSheet class
        /// </summary>
        public DebtDueInYear2BalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Debt due within 5 year if the company provide maturity schedule in range e.g. 1-5 years, 2-5 years. Debt due under 5 years
    /// according to the debt maturity schedule reported by the company. If a range is reported by the company, the value will be collected
    /// under the maximum number of years (eg. 1-5 years, 3-5 years or 5 years will all be collected under this data point.)
    /// </summary>
    public class DebtDueInYear5BalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the DebtDueInYear5BalanceSheet class
        /// </summary>
        public DebtDueInYear5BalanceSheet() { }

        /// <summary>
        /// Creates an instance of the DebtDueInYear5BalanceSheet class
        /// </summary>
        public DebtDueInYear5BalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Debt maturing beyond 5 years (eg. 5-10 years) or with no specified maturity, according to the debt maturity schedule reported by
    /// the company.
    /// </summary>
    public class DebtDueBeyondBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the DebtDueBeyondBalanceSheet class
        /// </summary>
        public DebtDueBeyondBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the DebtDueBeyondBalanceSheet class
        /// </summary>
        public DebtDueBeyondBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Total Debt in Maturity Schedule is the sum of Debt details above.
    /// </summary>
    public class TotalDebtInMaturityScheduleBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the TotalDebtInMaturityScheduleBalanceSheet class
        /// </summary>
        public TotalDebtInMaturityScheduleBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the TotalDebtInMaturityScheduleBalanceSheet class
        /// </summary>
        public TotalDebtInMaturityScheduleBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Reserves created by revaluation of assets.
    /// </summary>
    public class FixedAssetsRevaluationReserveBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the FixedAssetsRevaluationReserveBalanceSheet class
        /// </summary>
        public FixedAssetsRevaluationReserveBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the FixedAssetsRevaluationReserveBalanceSheet class
        /// </summary>
        public FixedAssetsRevaluationReserveBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Other short term financial liabilities not categorized and due within one year or a normal operating cycle (whichever is longer).
    /// </summary>
    public class CurrentOtherFinancialLiabilitiesBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the CurrentOtherFinancialLiabilitiesBalanceSheet class
        /// </summary>
        public CurrentOtherFinancialLiabilitiesBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the CurrentOtherFinancialLiabilitiesBalanceSheet class
        /// </summary>
        public CurrentOtherFinancialLiabilitiesBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Other long term financial liabilities not categorized and due over one year or a normal operating cycle (whichever is longer).
    /// </summary>
    public class NonCurrentOtherFinancialLiabilitiesBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the NonCurrentOtherFinancialLiabilitiesBalanceSheet class
        /// </summary>
        public NonCurrentOtherFinancialLiabilitiesBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the NonCurrentOtherFinancialLiabilitiesBalanceSheet class
        /// </summary>
        public NonCurrentOtherFinancialLiabilitiesBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Other financial liabilities not categorized.
    /// </summary>
    public class OtherFinancialLiabilitiesBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the OtherFinancialLiabilitiesBalanceSheet class
        /// </summary>
        public OtherFinancialLiabilitiesBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the OtherFinancialLiabilitiesBalanceSheet class
        /// </summary>
        public OtherFinancialLiabilitiesBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Total liabilities as reported by the company, may be the same or not the same as Morningstar's standardized definition.
    /// </summary>
    public class TotalLiabilitiesAsReportedBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the TotalLiabilitiesAsReportedBalanceSheet class
        /// </summary>
        public TotalLiabilitiesAsReportedBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the TotalLiabilitiesAsReportedBalanceSheet class
        /// </summary>
        public TotalLiabilitiesAsReportedBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Total Equity as reported by the company, may be the same or not the same as Morningstar's standardized definition.
    /// </summary>
    public class TotalEquityAsReportedBalanceSheet : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the TotalEquityAsReportedBalanceSheet class
        /// </summary>
        public TotalEquityAsReportedBalanceSheet() { }

        /// <summary>
        /// Creates an instance of the TotalEquityAsReportedBalanceSheet class
        /// </summary>
        public TotalEquityAsReportedBalanceSheet(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The systematic and rational apportionment of the acquisition cost of intangible operational assets to future periods in which the benefits
    /// contribute to revenue. This field is to include Amortization and any variation where Amortization is the first account listed in the line item,
    /// excluding Amortization of Intangibles.
    /// </summary>
    public class AmortizationCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the AmortizationCashFlowStatement class
        /// </summary>
        public AmortizationCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the AmortizationCashFlowStatement class
        /// </summary>
        public AmortizationCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Funds used by a company to acquire or upgrade physical assets such as property, industrial buildings or equipment. This
    /// type of outlay is made by companies to maintain or increase the scope of their operations. Capital expenditures are generally
    /// depreciated or depleted over their useful life, as distinguished from repairs, which are subtracted from the income of the current
    /// year.
    /// </summary>
    public class CapitalExpenditureCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the CapitalExpenditureCashFlowStatement class
        /// </summary>
        public CapitalExpenditureCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the CapitalExpenditureCashFlowStatement class
        /// </summary>
        public CapitalExpenditureCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Payments for the cash dividends declared by an entity to shareholders during the Intperiod. This element includes paid and unpaid
    /// dividends declared during the period for both common and preferred stock.
    /// </summary>
    public class CashDividendsPaidCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the CashDividendsPaidCashFlowStatement class
        /// </summary>
        public CashDividendsPaidCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the CashDividendsPaidCashFlowStatement class
        /// </summary>
        public CashDividendsPaidCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Cash generated by or used in financing activities of continuing operations; excludes cash flows from discontinued operations.
    /// </summary>
    public class CashFlowFromContinuingFinancingActivitiesCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the CashFlowFromContinuingFinancingActivitiesCashFlowStatement class
        /// </summary>
        public CashFlowFromContinuingFinancingActivitiesCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the CashFlowFromContinuingFinancingActivitiesCashFlowStatement class
        /// </summary>
        public CashFlowFromContinuingFinancingActivitiesCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Cash generated by or used in investing activities of continuing operations; excludes cash flows from discontinued operations.
    /// </summary>
    public class CashFlowFromContinuingInvestingActivitiesCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the CashFlowFromContinuingInvestingActivitiesCashFlowStatement class
        /// </summary>
        public CashFlowFromContinuingInvestingActivitiesCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the CashFlowFromContinuingInvestingActivitiesCashFlowStatement class
        /// </summary>
        public CashFlowFromContinuingInvestingActivitiesCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Cash generated by or used in operating activities of continuing operations; excludes cash flows from discontinued operations.
    /// </summary>
    public class CashFlowFromContinuingOperatingActivitiesCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the CashFlowFromContinuingOperatingActivitiesCashFlowStatement class
        /// </summary>
        public CashFlowFromContinuingOperatingActivitiesCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the CashFlowFromContinuingOperatingActivitiesCashFlowStatement class
        /// </summary>
        public CashFlowFromContinuingOperatingActivitiesCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The aggregate amount of cash flow from discontinued operation, including operating activities, investing activities, and financing
    /// activities.
    /// </summary>
    public class CashFlowFromDiscontinuedOperationCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the CashFlowFromDiscontinuedOperationCashFlowStatement class
        /// </summary>
        public CashFlowFromDiscontinuedOperationCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the CashFlowFromDiscontinuedOperationCashFlowStatement class
        /// </summary>
        public CashFlowFromDiscontinuedOperationCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The net cash inflow (outflow) from financing activity for the period, which involve changes to the long-term liabilities and
    /// stockholders' equity.
    /// </summary>
    public class FinancingCashFlowCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the FinancingCashFlowCashFlowStatement class
        /// </summary>
        public FinancingCashFlowCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the FinancingCashFlowCashFlowStatement class
        /// </summary>
        public FinancingCashFlowCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// An item on the cash flow statement that reports the aggregate change in a company's cash position resulting from any gains (or
    /// losses) from investments in the financial markets and operating subsidiaries, and changes resulting from amounts spent on
    /// investments in capital assets such as plant and equipment.
    /// </summary>
    public class InvestingCashFlowCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the InvestingCashFlowCashFlowStatement class
        /// </summary>
        public InvestingCashFlowCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the InvestingCashFlowCashFlowStatement class
        /// </summary>
        public InvestingCashFlowCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The net cash from (used in) all of the entity's operating activities, including those of discontinued operations, of the reporting entity.
    /// Operating activities include all transactions and events that are not defined as investing or financing activities. Operating activities
    /// generally involve producing and delivering goods and providing services. Cash flows from operating activities are generally the cash
    /// effects of transactions and other events that enter into the determination of net income.
    /// </summary>
    public class OperatingCashFlowCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the OperatingCashFlowCashFlowStatement class
        /// </summary>
        public OperatingCashFlowCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the OperatingCashFlowCashFlowStatement class
        /// </summary>
        public OperatingCashFlowCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The cash and equivalents balance at the beginning of the accounting period, as indicated on the Cash Flow statement.
    /// </summary>
    public class BeginningCashPositionCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the BeginningCashPositionCashFlowStatement class
        /// </summary>
        public BeginningCashPositionCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the BeginningCashPositionCashFlowStatement class
        /// </summary>
        public BeginningCashPositionCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The cash and cash equivalents balance at the end of the accounting period, as indicated on the Cash Flow statement. It is equal to
    /// the Beginning Cash and Equivalents, plus the Net Change in Cash and Equivalents.
    /// </summary>
    public class EndCashPositionCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the EndCashPositionCashFlowStatement class
        /// </summary>
        public EndCashPositionCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the EndCashPositionCashFlowStatement class
        /// </summary>
        public EndCashPositionCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Cash generated by or used in financing activities of discontinued operations; excludes cash flows from continued operations.
    /// </summary>
    public class CashFromDiscontinuedFinancingCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the CashFromDiscontinuedFinancingCashFlowStatement class
        /// </summary>
        public CashFromDiscontinuedFinancingCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the CashFromDiscontinuedFinancingCashFlowStatement class
        /// </summary>
        public CashFromDiscontinuedFinancingCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Cash generated by or used in financing activities of discontinued operations; excludes cash flows from continued operations.
    /// </summary>
    public class CashFromDiscontinuedFinancingActivitiesCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the CashFromDiscontinuedFinancingActivitiesCashFlowStatement class
        /// </summary>
        public CashFromDiscontinuedFinancingActivitiesCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the CashFromDiscontinuedFinancingActivitiesCashFlowStatement class
        /// </summary>
        public CashFromDiscontinuedFinancingActivitiesCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The net cash inflow (outflow) from discontinued investing activities over the designated time Intperiod.
    /// </summary>
    public class CashFromDiscontinuedInvestingCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the CashFromDiscontinuedInvestingCashFlowStatement class
        /// </summary>
        public CashFromDiscontinuedInvestingCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the CashFromDiscontinuedInvestingCashFlowStatement class
        /// </summary>
        public CashFromDiscontinuedInvestingCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The net cash inflow (outflow) from discontinued investing activities over the designated time Intperiod.
    /// </summary>
    public class CashFromDiscontinuedInvestingActivitiesCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the CashFromDiscontinuedInvestingActivitiesCashFlowStatement class
        /// </summary>
        public CashFromDiscontinuedInvestingActivitiesCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the CashFromDiscontinuedInvestingActivitiesCashFlowStatement class
        /// </summary>
        public CashFromDiscontinuedInvestingActivitiesCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The net cash from (used in) all of the entity's discontinued operating activities, excluding those of continued operations, of the
    /// reporting entity.
    /// </summary>
    public class CashFromDiscontinuedOperatingCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the CashFromDiscontinuedOperatingCashFlowStatement class
        /// </summary>
        public CashFromDiscontinuedOperatingCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the CashFromDiscontinuedOperatingCashFlowStatement class
        /// </summary>
        public CashFromDiscontinuedOperatingCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The increase or decrease between periods of the account payables.
    /// </summary>
    public class ChangeInAccountPayableCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ChangeInAccountPayableCashFlowStatement class
        /// </summary>
        public ChangeInAccountPayableCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the ChangeInAccountPayableCashFlowStatement class
        /// </summary>
        public ChangeInAccountPayableCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The increase or decrease between periods of the tax payables.
    /// </summary>
    public class ChangeInTaxPayableCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ChangeInTaxPayableCashFlowStatement class
        /// </summary>
        public ChangeInTaxPayableCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the ChangeInTaxPayableCashFlowStatement class
        /// </summary>
        public ChangeInTaxPayableCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The increase or decrease between periods of the accrued expenses.
    /// </summary>
    public class ChangeInAccruedExpenseCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ChangeInAccruedExpenseCashFlowStatement class
        /// </summary>
        public ChangeInAccruedExpenseCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the ChangeInAccruedExpenseCashFlowStatement class
        /// </summary>
        public ChangeInAccruedExpenseCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The net change during the reporting period in investment income that has been earned but not yet received in cash.
    /// </summary>
    public class ChangeInAccruedInvestmentIncomeCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ChangeInAccruedInvestmentIncomeCashFlowStatement class
        /// </summary>
        public ChangeInAccruedInvestmentIncomeCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the ChangeInAccruedInvestmentIncomeCashFlowStatement class
        /// </summary>
        public ChangeInAccruedInvestmentIncomeCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The net change between the beginning and ending balance of cash and cash equivalents.
    /// </summary>
    public class ChangesInCashCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ChangesInCashCashFlowStatement class
        /// </summary>
        public ChangesInCashCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the ChangesInCashCashFlowStatement class
        /// </summary>
        public ChangesInCashCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The change of the unamortized portion as of the balance sheet date of capitalized costs that vary with and are primarily related to
    /// the acquisition of new and renewal insurance contracts.
    /// </summary>
    public class ChangeInDeferredAcquisitionCostsCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ChangeInDeferredAcquisitionCostsCashFlowStatement class
        /// </summary>
        public ChangeInDeferredAcquisitionCostsCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the ChangeInDeferredAcquisitionCostsCashFlowStatement class
        /// </summary>
        public ChangeInDeferredAcquisitionCostsCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The amount shown on the books that a bank with insufficient reserves borrows, at the federal funds rate, from another bank to
    /// meet its reserve requirements and the amount of securities that an institution sells and agrees to repurchase at a specified date for
    /// a specified price, net of any reductions or offsets.
    /// </summary>
    public class ChangeInFederalFundsAndSecuritiesSoldForRepurchaseCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ChangeInFederalFundsAndSecuritiesSoldForRepurchaseCashFlowStatement class
        /// </summary>
        public ChangeInFederalFundsAndSecuritiesSoldForRepurchaseCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the ChangeInFederalFundsAndSecuritiesSoldForRepurchaseCashFlowStatement class
        /// </summary>
        public ChangeInFederalFundsAndSecuritiesSoldForRepurchaseCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The net change during the reporting period associated with funds withheld.
    /// </summary>
    public class ChangeInFundsWithheldCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ChangeInFundsWithheldCashFlowStatement class
        /// </summary>
        public ChangeInFundsWithheldCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the ChangeInFundsWithheldCashFlowStatement class
        /// </summary>
        public ChangeInFundsWithheldCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The increase or decrease between periods of the income tax payables.
    /// </summary>
    public class ChangeInIncomeTaxPayableCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ChangeInIncomeTaxPayableCashFlowStatement class
        /// </summary>
        public ChangeInIncomeTaxPayableCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the ChangeInIncomeTaxPayableCashFlowStatement class
        /// </summary>
        public ChangeInIncomeTaxPayableCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The increase or decrease between periods of the interest payable. Interest payable means carrying value as of the balance sheet
    /// date of interest payable on all forms of debt.
    /// </summary>
    public class ChangeInInterestPayableCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ChangeInInterestPayableCashFlowStatement class
        /// </summary>
        public ChangeInInterestPayableCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the ChangeInInterestPayableCashFlowStatement class
        /// </summary>
        public ChangeInInterestPayableCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The increase or decrease between periods of the Inventories. Inventories represent merchandise bought for resale and supplies and
    /// raw materials purchased for use in revenue producing operations.
    /// </summary>
    public class ChangeInInventoryCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ChangeInInventoryCashFlowStatement class
        /// </summary>
        public ChangeInInventoryCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the ChangeInInventoryCashFlowStatement class
        /// </summary>
        public ChangeInInventoryCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The net change that a lender gives money or property to a borrower and the borrower agrees to return the property or repay the
    /// borrowed money, along with interest, at a predetermined date in the future.
    /// </summary>
    public class ChangeInLoansCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ChangeInLoansCashFlowStatement class
        /// </summary>
        public ChangeInLoansCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the ChangeInLoansCashFlowStatement class
        /// </summary>
        public ChangeInLoansCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The net change during the reporting period in the reserve account established to account for expected but unspecified losses.
    /// </summary>
    public class ChangeInLossAndLossAdjustmentExpenseReservesCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ChangeInLossAndLossAdjustmentExpenseReservesCashFlowStatement class
        /// </summary>
        public ChangeInLossAndLossAdjustmentExpenseReservesCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the ChangeInLossAndLossAdjustmentExpenseReservesCashFlowStatement class
        /// </summary>
        public ChangeInLossAndLossAdjustmentExpenseReservesCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The increase or decrease between periods of the payables.
    /// </summary>
    public class ChangeInPayableCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ChangeInPayableCashFlowStatement class
        /// </summary>
        public ChangeInPayableCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the ChangeInPayableCashFlowStatement class
        /// </summary>
        public ChangeInPayableCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The increase or decrease between periods of the payables and accrued expenses. Accrued expenses represent expenses incurred
    /// at the end of the reporting period but not yet paid; also called accrued liabilities. The accrued liability is shown under current
    /// liabilities in the balance sheet.
    /// </summary>
    public class ChangeInPayablesAndAccruedExpenseCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ChangeInPayablesAndAccruedExpenseCashFlowStatement class
        /// </summary>
        public ChangeInPayablesAndAccruedExpenseCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the ChangeInPayablesAndAccruedExpenseCashFlowStatement class
        /// </summary>
        public ChangeInPayablesAndAccruedExpenseCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The increase or decrease between periods of the prepaid assets.
    /// </summary>
    public class ChangeInPrepaidAssetsCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ChangeInPrepaidAssetsCashFlowStatement class
        /// </summary>
        public ChangeInPrepaidAssetsCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the ChangeInPrepaidAssetsCashFlowStatement class
        /// </summary>
        public ChangeInPrepaidAssetsCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The increase or decrease between periods of the receivables. Receivables are amounts due to be paid to the company from clients
    /// and other.
    /// </summary>
    public class ChangeInReceivablesCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ChangeInReceivablesCashFlowStatement class
        /// </summary>
        public ChangeInReceivablesCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the ChangeInReceivablesCashFlowStatement class
        /// </summary>
        public ChangeInReceivablesCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The net change during the reporting period in the amount of benefits the ceding insurer expects to recover on insurance policies
    /// ceded to other insurance entities as of the balance sheet date for all guaranteed benefit types.
    /// </summary>
    public class ChangeInReinsuranceRecoverableOnPaidAndUnpaidLossesCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ChangeInReinsuranceRecoverableOnPaidAndUnpaidLossesCashFlowStatement class
        /// </summary>
        public ChangeInReinsuranceRecoverableOnPaidAndUnpaidLossesCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the ChangeInReinsuranceRecoverableOnPaidAndUnpaidLossesCashFlowStatement class
        /// </summary>
        public ChangeInReinsuranceRecoverableOnPaidAndUnpaidLossesCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The net cash inflow (outflow) for the net change associated with funds that are not available for withdrawal or use (such as funds
    /// held in escrow).
    /// </summary>
    public class ChangeInRestrictedCashCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ChangeInRestrictedCashCashFlowStatement class
        /// </summary>
        public ChangeInRestrictedCashCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the ChangeInRestrictedCashCashFlowStatement class
        /// </summary>
        public ChangeInRestrictedCashCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The net change during the reporting period associated with trading account assets. Trading account assets are bought and held
    /// principally for the purpose of selling them in the near term (thus held for only a short period of time). Unrealized holding gains and
    /// losses for trading securities are included in earnings.
    /// </summary>
    public class ChangeInTradingAccountSecuritiesCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ChangeInTradingAccountSecuritiesCashFlowStatement class
        /// </summary>
        public ChangeInTradingAccountSecuritiesCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the ChangeInTradingAccountSecuritiesCashFlowStatement class
        /// </summary>
        public ChangeInTradingAccountSecuritiesCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The increase or decrease between periods of the working capital.  Working Capital is the amount left to the company to finance
    /// operations and expansion after current liabilities have been covered.
    /// </summary>
    public class ChangeInWorkingCapitalCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ChangeInWorkingCapitalCashFlowStatement class
        /// </summary>
        public ChangeInWorkingCapitalCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the ChangeInWorkingCapitalCashFlowStatement class
        /// </summary>
        public ChangeInWorkingCapitalCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The component of income tax expense for the period representing the net change in the entities deferred tax assets and liabilities
    /// pertaining to continuing operations.
    /// </summary>
    public class DeferredIncomeTaxCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the DeferredIncomeTaxCashFlowStatement class
        /// </summary>
        public DeferredIncomeTaxCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the DeferredIncomeTaxCashFlowStatement class
        /// </summary>
        public DeferredIncomeTaxCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Future tax liability or asset, resulting from temporary differences between book (accounting) value of assets and liabilities, and their
    /// tax value. This arises due to differences between financial accounting for shareholders and tax accounting.
    /// </summary>
    public class DeferredTaxCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the DeferredTaxCashFlowStatement class
        /// </summary>
        public DeferredTaxCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the DeferredTaxCashFlowStatement class
        /// </summary>
        public DeferredTaxCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Unlike depreciation and amortization, which mainly describe the deduction of expenses due to the aging of equipment and property,
    /// depletion is the actual physical reduction of natural resources by companies.   For example, coalmines, oil fields and other natural
    /// resources are depleted on company accounting statements. This reduction in the quantity of resources is meant to assist in
    /// accurately identifying the value of the asset on the balance sheet.
    /// </summary>
    public class DepletionCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the DepletionCashFlowStatement class
        /// </summary>
        public DepletionCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the DepletionCashFlowStatement class
        /// </summary>
        public DepletionCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// An expense recorded to allocate a tangible asset's cost over its useful life. Since it is a non-cash expense, it increases free cash
    /// flow while decreasing reported earnings.
    /// </summary>
    public class DepreciationCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the DepreciationCashFlowStatement class
        /// </summary>
        public DepreciationCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the DepreciationCashFlowStatement class
        /// </summary>
        public DepreciationCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The current period expense charged against earnings on long-lived, physical assets used in the normal conduct of business and not
    /// intended for resale to allocate or recognize the cost of assets over their useful lives; or to record the reduction in book value of an
    /// intangible asset over the benefit period of such asset.
    /// </summary>
    public class DepreciationAndAmortizationCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the DepreciationAndAmortizationCashFlowStatement class
        /// </summary>
        public DepreciationAndAmortizationCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the DepreciationAndAmortizationCashFlowStatement class
        /// </summary>
        public DepreciationAndAmortizationCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// It is a non cash charge that represents a reduction in the value of fixed assets due to wear, age or obsolescence. This figure also
    /// includes amortization of leased property, intangibles, and goodwill, and depletion. This non-cash item is an add-back to the cash
    /// flow statement.
    /// </summary>
    public class DepreciationAmortizationDepletionCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the DepreciationAmortizationDepletionCashFlowStatement class
        /// </summary>
        public DepreciationAmortizationDepletionCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the DepreciationAmortizationDepletionCashFlowStatement class
        /// </summary>
        public DepreciationAmortizationDepletionCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The effect of exchange rate changes on cash balances held in foreign currencies.
    /// </summary>
    public class EffectOfExchangeRateChangesCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the EffectOfExchangeRateChangesCashFlowStatement class
        /// </summary>
        public EffectOfExchangeRateChangesCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the EffectOfExchangeRateChangesCashFlowStatement class
        /// </summary>
        public EffectOfExchangeRateChangesCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The aggregate net change during the reporting period in moneys given as security, collateral, or margin deposits.
    /// </summary>
    public class IncreaseDecreaseInDepositCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the IncreaseDecreaseInDepositCashFlowStatement class
        /// </summary>
        public IncreaseDecreaseInDepositCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the IncreaseDecreaseInDepositCashFlowStatement class
        /// </summary>
        public IncreaseDecreaseInDepositCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The increase or decrease between periods of common stock.
    /// </summary>
    public class NetCommonStockIssuanceCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the NetCommonStockIssuanceCashFlowStatement class
        /// </summary>
        public NetCommonStockIssuanceCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the NetCommonStockIssuanceCashFlowStatement class
        /// </summary>
        public NetCommonStockIssuanceCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The increase or decrease between periods of debt.
    /// </summary>
    public class NetIssuancePaymentsOfDebtCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the NetIssuancePaymentsOfDebtCashFlowStatement class
        /// </summary>
        public NetIssuancePaymentsOfDebtCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the NetIssuancePaymentsOfDebtCashFlowStatement class
        /// </summary>
        public NetIssuancePaymentsOfDebtCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The increase or decrease between periods of long term debt. Long term debt includes notes payable, bonds payable, mortgage
    /// loans, convertible debt, subordinated debt and other types of long term debt.
    /// </summary>
    public class NetLongTermDebtIssuanceCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the NetLongTermDebtIssuanceCashFlowStatement class
        /// </summary>
        public NetLongTermDebtIssuanceCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the NetLongTermDebtIssuanceCashFlowStatement class
        /// </summary>
        public NetLongTermDebtIssuanceCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The increase or decrease between periods of preferred stock.
    /// </summary>
    public class NetPreferredStockIssuanceCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the NetPreferredStockIssuanceCashFlowStatement class
        /// </summary>
        public NetPreferredStockIssuanceCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the NetPreferredStockIssuanceCashFlowStatement class
        /// </summary>
        public NetPreferredStockIssuanceCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The increase or decrease between periods of short term debt.
    /// </summary>
    public class NetShortTermDebtIssuanceCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the NetShortTermDebtIssuanceCashFlowStatement class
        /// </summary>
        public NetShortTermDebtIssuanceCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the NetShortTermDebtIssuanceCashFlowStatement class
        /// </summary>
        public NetShortTermDebtIssuanceCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The net cash from (used in) all of the entity's discontinued operating activities, excluding those of continued operations, of the
    /// reporting entity.
    /// </summary>
    public class NetCashFromDiscontinuedOperationsCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the NetCashFromDiscontinuedOperationsCashFlowStatement class
        /// </summary>
        public NetCashFromDiscontinuedOperationsCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the NetCashFromDiscontinuedOperationsCashFlowStatement class
        /// </summary>
        public NetCashFromDiscontinuedOperationsCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The aggregate amount of realized and unrealized gain or loss resulting from changes in exchange rates between currencies.
    /// (Excludes foreign currency transactions designated as hedges of net investment in a foreign entity and inter-company foreign
    /// currency transactions that are of a long-term nature, when the entities to the transaction are consolidated, combined, or accounted
    /// for by the equity method in the reporting entity's financial statements. For certain entities, primarily banks, which are dealers in
    /// foreign exchange, foreign currency transaction gains or losses, may be disclosed as dealer gains or losses.)
    /// </summary>
    public class NetForeignCurrencyExchangeGainLossCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the NetForeignCurrencyExchangeGainLossCashFlowStatement class
        /// </summary>
        public NetForeignCurrencyExchangeGainLossCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the NetForeignCurrencyExchangeGainLossCashFlowStatement class
        /// </summary>
        public NetForeignCurrencyExchangeGainLossCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Revenue less expenses and taxes from the entity's ongoing operations and before income (loss) from discontinued operations,
    /// extraordinary items, impact of changes in accounting principles, minority interest, and various other reconciling adjustments;
    /// represents the starting line for Operating Cash Flow.
    /// </summary>
    public class NetIncomeFromContinuingOperationsCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the NetIncomeFromContinuingOperationsCashFlowStatement class
        /// </summary>
        public NetIncomeFromContinuingOperationsCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the NetIncomeFromContinuingOperationsCashFlowStatement class
        /// </summary>
        public NetIncomeFromContinuingOperationsCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Payment from a bank or insurance company to the lender who lends money or property based on the agreement, along with
    /// interest, at a predetermined date in the future.
    /// </summary>
    public class PaymentForLoansCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the PaymentForLoansCashFlowStatement class
        /// </summary>
        public PaymentForLoansCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the PaymentForLoansCashFlowStatement class
        /// </summary>
        public PaymentForLoansCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The cash outflow to reacquire common stock during the Intperiod.
    /// </summary>
    public class CommonStockPaymentsCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the CommonStockPaymentsCashFlowStatement class
        /// </summary>
        public CommonStockPaymentsCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the CommonStockPaymentsCashFlowStatement class
        /// </summary>
        public CommonStockPaymentsCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The cash outflow to reacquire preferred stock during the Intperiod.
    /// </summary>
    public class PreferredStockPaymentsCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the PreferredStockPaymentsCashFlowStatement class
        /// </summary>
        public PreferredStockPaymentsCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the PreferredStockPaymentsCashFlowStatement class
        /// </summary>
        public PreferredStockPaymentsCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The cash outflow for debt initially having maturity due after one year or beyond the normal operating cycle, if longer.
    /// </summary>
    public class LongTermDebtPaymentsCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the LongTermDebtPaymentsCashFlowStatement class
        /// </summary>
        public LongTermDebtPaymentsCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the LongTermDebtPaymentsCashFlowStatement class
        /// </summary>
        public LongTermDebtPaymentsCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The cash outflow for a borrowing having initial term of repayment within one year or the normal operating cycle, if longer.
    /// </summary>
    public class ShortTermDebtPaymentsCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ShortTermDebtPaymentsCashFlowStatement class
        /// </summary>
        public ShortTermDebtPaymentsCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the ShortTermDebtPaymentsCashFlowStatement class
        /// </summary>
        public ShortTermDebtPaymentsCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The cash inflow from borrowing money or property for a bank or insurance company.
    /// </summary>
    public class ProceedsFromLoansCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ProceedsFromLoansCashFlowStatement class
        /// </summary>
        public ProceedsFromLoansCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the ProceedsFromLoansCashFlowStatement class
        /// </summary>
        public ProceedsFromLoansCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The cash inflow associated with the amount received from holders exercising their stock options.
    /// </summary>
    public class ProceedsFromStockOptionExercisedCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ProceedsFromStockOptionExercisedCashFlowStatement class
        /// </summary>
        public ProceedsFromStockOptionExercisedCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the ProceedsFromStockOptionExercisedCashFlowStatement class
        /// </summary>
        public ProceedsFromStockOptionExercisedCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The cash inflow from offering common stock, which is the additional capital contribution to the entity during the Intperiod.
    /// </summary>
    public class CommonStockIssuanceCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the CommonStockIssuanceCashFlowStatement class
        /// </summary>
        public CommonStockIssuanceCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the CommonStockIssuanceCashFlowStatement class
        /// </summary>
        public CommonStockIssuanceCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The cash inflow from a debt initially having maturity due after one year or beyond the operating cycle, if longer.
    /// </summary>
    public class LongTermDebtIssuanceCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the LongTermDebtIssuanceCashFlowStatement class
        /// </summary>
        public LongTermDebtIssuanceCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the LongTermDebtIssuanceCashFlowStatement class
        /// </summary>
        public LongTermDebtIssuanceCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The cash inflow from offering preferred stock.
    /// </summary>
    public class PreferredStockIssuanceCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the PreferredStockIssuanceCashFlowStatement class
        /// </summary>
        public PreferredStockIssuanceCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the PreferredStockIssuanceCashFlowStatement class
        /// </summary>
        public PreferredStockIssuanceCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The cash inflow from a debt initially having maturity due within one year or the normal operating cycle, if longer.
    /// </summary>
    public class ShortTermDebtIssuanceCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ShortTermDebtIssuanceCashFlowStatement class
        /// </summary>
        public ShortTermDebtIssuanceCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the ShortTermDebtIssuanceCashFlowStatement class
        /// </summary>
        public ShortTermDebtIssuanceCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The net value of proceeds or payments of loans.
    /// </summary>
    public class NetProceedsPaymentForLoanCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the NetProceedsPaymentForLoanCashFlowStatement class
        /// </summary>
        public NetProceedsPaymentForLoanCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the NetProceedsPaymentForLoanCashFlowStatement class
        /// </summary>
        public NetProceedsPaymentForLoanCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The net change on interest-bearing deposits in other financial institutions for relatively short periods of time including, for example,
    /// certificates of deposits.
    /// </summary>
    public class ProceedsPaymentInInterestBearingDepositsInBankCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ProceedsPaymentInInterestBearingDepositsInBankCashFlowStatement class
        /// </summary>
        public ProceedsPaymentInInterestBearingDepositsInBankCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the ProceedsPaymentInInterestBearingDepositsInBankCashFlowStatement class
        /// </summary>
        public ProceedsPaymentInInterestBearingDepositsInBankCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The amount of capital outlays undertaken to increase, construct or improve intangible assets.
    /// </summary>
    public class PurchaseOfIntangiblesCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the PurchaseOfIntangiblesCashFlowStatement class
        /// </summary>
        public PurchaseOfIntangiblesCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the PurchaseOfIntangiblesCashFlowStatement class
        /// </summary>
        public PurchaseOfIntangiblesCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// All purchases of investments, including both long term and short term.
    /// </summary>
    public class PurchaseOfInvestmentCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the PurchaseOfInvestmentCashFlowStatement class
        /// </summary>
        public PurchaseOfInvestmentCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the PurchaseOfInvestmentCashFlowStatement class
        /// </summary>
        public PurchaseOfInvestmentCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The amount of capital outlays undertaken to increase, construct or improve capital assets. This category includes property, plant
    /// equipment, furniture, fixed assets, buildings, and improvement.
    /// </summary>
    public class PurchaseOfPPECashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the PurchaseOfPPECashFlowStatement class
        /// </summary>
        public PurchaseOfPPECashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the PurchaseOfPPECashFlowStatement class
        /// </summary>
        public PurchaseOfPPECashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// All the purchases of business including business acquisitions, investment in subsidiary; investing in affiliated companies, and join
    /// venture.
    /// </summary>
    public class PurchaseOfBusinessCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the PurchaseOfBusinessCashFlowStatement class
        /// </summary>
        public PurchaseOfBusinessCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the PurchaseOfBusinessCashFlowStatement class
        /// </summary>
        public PurchaseOfBusinessCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The net change between Purchases/Sales of Business.
    /// </summary>
    public class NetBusinessPurchaseAndSaleCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the NetBusinessPurchaseAndSaleCashFlowStatement class
        /// </summary>
        public NetBusinessPurchaseAndSaleCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the NetBusinessPurchaseAndSaleCashFlowStatement class
        /// </summary>
        public NetBusinessPurchaseAndSaleCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The net change between Purchases/Sales of Intangibles.
    /// </summary>
    public class NetIntangiblesPurchaseAndSaleCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the NetIntangiblesPurchaseAndSaleCashFlowStatement class
        /// </summary>
        public NetIntangiblesPurchaseAndSaleCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the NetIntangiblesPurchaseAndSaleCashFlowStatement class
        /// </summary>
        public NetIntangiblesPurchaseAndSaleCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The net change between Purchases/Sales of Investments.
    /// </summary>
    public class NetInvestmentPurchaseAndSaleCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the NetInvestmentPurchaseAndSaleCashFlowStatement class
        /// </summary>
        public NetInvestmentPurchaseAndSaleCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the NetInvestmentPurchaseAndSaleCashFlowStatement class
        /// </summary>
        public NetInvestmentPurchaseAndSaleCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The net change between Purchases/Sales of PPE.
    /// </summary>
    public class NetPPEPurchaseAndSaleCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the NetPPEPurchaseAndSaleCashFlowStatement class
        /// </summary>
        public NetPPEPurchaseAndSaleCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the NetPPEPurchaseAndSaleCashFlowStatement class
        /// </summary>
        public NetPPEPurchaseAndSaleCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Proceeds received from selling a business including proceeds from a subsidiary, and proceeds from an affiliated company.
    /// </summary>
    public class SaleOfBusinessCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the SaleOfBusinessCashFlowStatement class
        /// </summary>
        public SaleOfBusinessCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the SaleOfBusinessCashFlowStatement class
        /// </summary>
        public SaleOfBusinessCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The amount of capital inflow from the sale of all kinds of intangible assets.
    /// </summary>
    public class SaleOfIntangiblesCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the SaleOfIntangiblesCashFlowStatement class
        /// </summary>
        public SaleOfIntangiblesCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the SaleOfIntangiblesCashFlowStatement class
        /// </summary>
        public SaleOfIntangiblesCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Proceeds received from selling all kind of investments, including both long term and short term.
    /// </summary>
    public class SaleOfInvestmentCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the SaleOfInvestmentCashFlowStatement class
        /// </summary>
        public SaleOfInvestmentCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the SaleOfInvestmentCashFlowStatement class
        /// </summary>
        public SaleOfInvestmentCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Proceeds from selling any fixed assets such as property, plant and equipment, which also includes retirement of equipment.
    /// </summary>
    public class SaleOfPPECashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the SaleOfPPECashFlowStatement class
        /// </summary>
        public SaleOfPPECashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the SaleOfPPECashFlowStatement class
        /// </summary>
        public SaleOfPPECashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The increase or decrease between periods of the accounts receivables.
    /// </summary>
    public class ChangesInAccountReceivablesCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ChangesInAccountReceivablesCashFlowStatement class
        /// </summary>
        public ChangesInAccountReceivablesCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the ChangesInAccountReceivablesCashFlowStatement class
        /// </summary>
        public ChangesInAccountReceivablesCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The component of interest expense representing the non-cash expenses charged against earnings in the period to allocate debt
    /// discount and premium, and the costs to issue debt and obtain financing over the related debt instruments. This item is usually only
    /// available for bank industry.
    /// </summary>
    public class AmortizationOfFinancingCostsAndDiscountsCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the AmortizationOfFinancingCostsAndDiscountsCashFlowStatement class
        /// </summary>
        public AmortizationOfFinancingCostsAndDiscountsCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the AmortizationOfFinancingCostsAndDiscountsCashFlowStatement class
        /// </summary>
        public AmortizationOfFinancingCostsAndDiscountsCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Represents amortization of the allocation of a lump sum amount to different time periods, particularly for securities, debt, loans,
    /// and other forms of financing. Does not include amortization, amortization of capital expenditure and intangible assets.
    /// </summary>
    public class AmortizationOfSecuritiesCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the AmortizationOfSecuritiesCashFlowStatement class
        /// </summary>
        public AmortizationOfSecuritiesCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the AmortizationOfSecuritiesCashFlowStatement class
        /// </summary>
        public AmortizationOfSecuritiesCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The charge against earnings resulting from the aggregate write down of all assets from their carrying value to their fair value.
    /// </summary>
    public class AssetImpairmentChargeCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the AssetImpairmentChargeCashFlowStatement class
        /// </summary>
        public AssetImpairmentChargeCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the AssetImpairmentChargeCashFlowStatement class
        /// </summary>
        public AssetImpairmentChargeCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The increase or decrease between periods of the dividend payables.
    /// </summary>
    public class ChangeInDividendPayableCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ChangeInDividendPayableCashFlowStatement class
        /// </summary>
        public ChangeInDividendPayableCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the ChangeInDividendPayableCashFlowStatement class
        /// </summary>
        public ChangeInDividendPayableCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The net change during the reporting period in the value of expenditures made during the current reporting period for benefits that
    /// will be received over a period of years. This item is usually only available for bank industry.
    /// </summary>
    public class ChangeInDeferredChargesCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ChangeInDeferredChargesCashFlowStatement class
        /// </summary>
        public ChangeInDeferredChargesCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the ChangeInDeferredChargesCashFlowStatement class
        /// </summary>
        public ChangeInDeferredChargesCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The increase or decrease between periods of the Other Current Assets. This category typically includes prepayments, deferred
    /// charges, and amounts (other than trade accounts) due from parents and subsidiaries.
    /// </summary>
    public class ChangeInOtherCurrentAssetsCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ChangeInOtherCurrentAssetsCashFlowStatement class
        /// </summary>
        public ChangeInOtherCurrentAssetsCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the ChangeInOtherCurrentAssetsCashFlowStatement class
        /// </summary>
        public ChangeInOtherCurrentAssetsCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The increase or decrease between periods of the Other Current liabilities. Other Current liabilities is a balance sheet entry used by
    /// companies to group together current liabilities that are not assigned to common liabilities such as debt obligations or accounts
    /// payable.
    /// </summary>
    public class ChangeInOtherCurrentLiabilitiesCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ChangeInOtherCurrentLiabilitiesCashFlowStatement class
        /// </summary>
        public ChangeInOtherCurrentLiabilitiesCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the ChangeInOtherCurrentLiabilitiesCashFlowStatement class
        /// </summary>
        public ChangeInOtherCurrentLiabilitiesCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The increase or decrease between periods of the other working capital.
    /// </summary>
    public class ChangeInOtherWorkingCapitalCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ChangeInOtherWorkingCapitalCashFlowStatement class
        /// </summary>
        public ChangeInOtherWorkingCapitalCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the ChangeInOtherWorkingCapitalCashFlowStatement class
        /// </summary>
        public ChangeInOtherWorkingCapitalCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The change during the period in the unearned portion of premiums written, excluding the portion amortized into income. This item is
    /// usually only available for insurance industry.
    /// </summary>
    public class ChangeInUnearnedPremiumsCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ChangeInUnearnedPremiumsCashFlowStatement class
        /// </summary>
        public ChangeInUnearnedPremiumsCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the ChangeInUnearnedPremiumsCashFlowStatement class
        /// </summary>
        public ChangeInUnearnedPremiumsCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The cash outflow from the distribution of an entity's earnings in the form of dividends to common shareholders.
    /// </summary>
    public class CommonStockDividendPaidCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the CommonStockDividendPaidCashFlowStatement class
        /// </summary>
        public CommonStockDividendPaidCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the CommonStockDividendPaidCashFlowStatement class
        /// </summary>
        public CommonStockDividendPaidCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// This item represents the entity's proportionate share for the period of the net income (loss) of its investee (such as unconsolidated
    /// subsidiaries and joint ventures) to which the equity method of accounting is applied. The amount typically reflects adjustments.
    /// </summary>
    public class EarningsLossesFromEquityInvestmentsCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the EarningsLossesFromEquityInvestmentsCashFlowStatement class
        /// </summary>
        public EarningsLossesFromEquityInvestmentsCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the EarningsLossesFromEquityInvestmentsCashFlowStatement class
        /// </summary>
        public EarningsLossesFromEquityInvestmentsCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Reductions in the entity's income taxes that arise when compensation cost (from non-qualified share-based compensation)
    /// recognized on the entities tax return exceeds compensation cost from share-based compensation recognized in financial
    /// statements. This element reduces net cash provided by operating activities.
    /// </summary>
    public class ExcessTaxBenefitFromStockBasedCompensationCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ExcessTaxBenefitFromStockBasedCompensationCashFlowStatement class
        /// </summary>
        public ExcessTaxBenefitFromStockBasedCompensationCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the ExcessTaxBenefitFromStockBasedCompensationCashFlowStatement class
        /// </summary>
        public ExcessTaxBenefitFromStockBasedCompensationCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// This item represents the net total realized gain (loss) included in earnings for the period as a result of selling or holding marketable
    /// securities categorized as trading, available-for-sale, or held-to-maturity, including the unrealized holding gain or loss of held-to-
    /// maturity securities transferred to the trading security category and the cumulative unrealized gain or loss which was included in
    /// other comprehensive income (a separate component of shareholders' equity) for available-for-sale securities transferred to trading
    /// securities during the Intperiod. Additionally, this item would include any losses recognized for other than temporary impairments of the
    /// subject investments in debt and equity securities.
    /// </summary>
    public class GainLossOnInvestmentSecuritiesCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the GainLossOnInvestmentSecuritiesCashFlowStatement class
        /// </summary>
        public GainLossOnInvestmentSecuritiesCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the GainLossOnInvestmentSecuritiesCashFlowStatement class
        /// </summary>
        public GainLossOnInvestmentSecuritiesCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The difference between the sale price or salvage price and the book value of an asset that was sold or retired during the reporting
    /// Intperiod. This element refers to the gain (loss) and not to the cash proceeds of the business. This element is a non-cash adjustment
    /// to net income when calculating net cash generated by operating activities using the indirect method.
    /// </summary>
    public class GainLossOnSaleOfBusinessCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the GainLossOnSaleOfBusinessCashFlowStatement class
        /// </summary>
        public GainLossOnSaleOfBusinessCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the GainLossOnSaleOfBusinessCashFlowStatement class
        /// </summary>
        public GainLossOnSaleOfBusinessCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The difference between the sale price or salvage price and the book value of the property, plant and equipment that was sold or
    /// retired during the reporting Intperiod. Includes the amount received from selling any fixed assets such as property, plant and
    /// equipment. Usually this section also includes any retirement of equipment. Such as Sale of business segments; Sale of credit and
    /// receivables; Property disposition; Proceeds from sale or disposition of business or investment; Decrease in excess of purchase price
    /// over acquired net assets; Abandoned project (expenditures) credit; Allowances for other funds during construction.
    /// </summary>
    public class GainLossOnSaleOfPPECashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the GainLossOnSaleOfPPECashFlowStatement class
        /// </summary>
        public GainLossOnSaleOfPPECashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the GainLossOnSaleOfPPECashFlowStatement class
        /// </summary>
        public GainLossOnSaleOfPPECashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// An expense reported in the income statement and needs to be removed from net income to arrive at cash provided by (used in)
    /// operations to the extent that such interest has not been paid. This item is usually only available for insurance industry.
    /// </summary>
    public class InterestCreditedOnPolicyholderDepositsCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the InterestCreditedOnPolicyholderDepositsCashFlowStatement class
        /// </summary>
        public InterestCreditedOnPolicyholderDepositsCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the InterestCreditedOnPolicyholderDepositsCashFlowStatement class
        /// </summary>
        public InterestCreditedOnPolicyholderDepositsCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The net cash from (used in) all of the entity's discontinued operating activities, excluding those of continued operations, of the
    /// reporting entity.
    /// </summary>
    public class CashFromDiscontinuedOperatingActivitiesCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the CashFromDiscontinuedOperatingActivitiesCashFlowStatement class
        /// </summary>
        public CashFromDiscontinuedOperatingActivitiesCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the CashFromDiscontinuedOperatingActivitiesCashFlowStatement class
        /// </summary>
        public CashFromDiscontinuedOperatingActivitiesCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The gain or loss from the entity's ongoing operations.
    /// </summary>
    public class OperatingGainsLossesCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the OperatingGainsLossesCashFlowStatement class
        /// </summary>
        public OperatingGainsLossesCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the OperatingGainsLossesCashFlowStatement class
        /// </summary>
        public OperatingGainsLossesCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Miscellaneous charges incurred due to Financing activities.
    /// </summary>
    public class NetOtherFinancingChargesCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the NetOtherFinancingChargesCashFlowStatement class
        /// </summary>
        public NetOtherFinancingChargesCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the NetOtherFinancingChargesCashFlowStatement class
        /// </summary>
        public NetOtherFinancingChargesCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Miscellaneous charges incurred due to Investing activities.
    /// </summary>
    public class NetOtherInvestingChangesCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the NetOtherInvestingChangesCashFlowStatement class
        /// </summary>
        public NetOtherInvestingChangesCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the NetOtherInvestingChangesCashFlowStatement class
        /// </summary>
        public NetOtherInvestingChangesCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Items which adjusted back from net income but without real cash outflow or inflow.
    /// </summary>
    public class OtherNonCashItemsCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the OtherNonCashItemsCashFlowStatement class
        /// </summary>
        public OtherNonCashItemsCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the OtherNonCashItemsCashFlowStatement class
        /// </summary>
        public OtherNonCashItemsCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The amount of pension and other (such as medical, dental and life insurance) postretirement benefit costs recognized during the
    /// Intperiod.
    /// </summary>
    public class PensionAndEmployeeBenefitExpenseCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the PensionAndEmployeeBenefitExpenseCashFlowStatement class
        /// </summary>
        public PensionAndEmployeeBenefitExpenseCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the PensionAndEmployeeBenefitExpenseCashFlowStatement class
        /// </summary>
        public PensionAndEmployeeBenefitExpenseCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Pay for the amount of dividends declared or paid in the period to preferred shareholders or the amount for which the obligation to
    /// pay them dividends rose in the Intperiod.
    /// </summary>
    public class PreferredStockDividendPaidCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the PreferredStockDividendPaidCashFlowStatement class
        /// </summary>
        public PreferredStockDividendPaidCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the PreferredStockDividendPaidCashFlowStatement class
        /// </summary>
        public PreferredStockDividendPaidCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The aggregate amount change of (1) the lending of excess federal funds to another commercial bank requiring such for its legal
    /// reserve requirements and (2) securities purchased under agreements to resell. This item is usually only available for bank industry.
    /// </summary>
    public class ProceedsPaymentFederalFundsSoldAndSecuritiesPurchasedUnderAgreementToResellCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ProceedsPaymentFederalFundsSoldAndSecuritiesPurchasedUnderAgreementToResellCashFlowStatement class
        /// </summary>
        public ProceedsPaymentFederalFundsSoldAndSecuritiesPurchasedUnderAgreementToResellCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the ProceedsPaymentFederalFundsSoldAndSecuritiesPurchasedUnderAgreementToResellCashFlowStatement class
        /// </summary>
        public ProceedsPaymentFederalFundsSoldAndSecuritiesPurchasedUnderAgreementToResellCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The sum of the periodic provision charged to earnings, based on an assessment of uncollectible from the counterparty on account
    /// of loan, lease or other credit losses, to reduce these accounts to the amount that approximates their net realizable value. This item
    /// is usually only available for bank industry.
    /// </summary>
    public class ProvisionForLoanLeaseAndOtherLossesCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ProvisionForLoanLeaseAndOtherLossesCashFlowStatement class
        /// </summary>
        public ProvisionForLoanLeaseAndOtherLossesCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the ProvisionForLoanLeaseAndOtherLossesCashFlowStatement class
        /// </summary>
        public ProvisionForLoanLeaseAndOtherLossesCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The gains and losses included in earnings that represent the difference between the sale price and the carrying value of loans and
    /// leases that were sold during the reporting Intperiod. This element refers to the gain (loss) and not to the cash proceeds of the sales.
    /// This element is a non-cash adjustment to net income when calculating net cash generated by operating activities using the indirect
    /// method. This item is usually only available for bank industry.
    /// </summary>
    public class RealizedGainLossOnSaleOfLoansAndLeaseCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the RealizedGainLossOnSaleOfLoansAndLeaseCashFlowStatement class
        /// </summary>
        public RealizedGainLossOnSaleOfLoansAndLeaseCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the RealizedGainLossOnSaleOfLoansAndLeaseCashFlowStatement class
        /// </summary>
        public RealizedGainLossOnSaleOfLoansAndLeaseCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Value of stock issued during the period as a result of any share-based compensation plan other than an employee stock ownership
    /// plan (ESOP).
    /// </summary>
    public class StockBasedCompensationCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the StockBasedCompensationCashFlowStatement class
        /// </summary>
        public StockBasedCompensationCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the StockBasedCompensationCashFlowStatement class
        /// </summary>
        public StockBasedCompensationCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The increases (decreases) in the market value of unsold securities whose gains (losses) were included in earnings.
    /// </summary>
    public class UnrealizedGainLossOnInvestmentSecuritiesCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the UnrealizedGainLossOnInvestmentSecuritiesCashFlowStatement class
        /// </summary>
        public UnrealizedGainLossOnInvestmentSecuritiesCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the UnrealizedGainLossOnInvestmentSecuritiesCashFlowStatement class
        /// </summary>
        public UnrealizedGainLossOnInvestmentSecuritiesCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The gross gains and losses on derivatives. This item is usually only available for insurance industry.
    /// </summary>
    public class UnrealizedGainsLossesOnDerivativesCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the UnrealizedGainsLossesOnDerivativesCashFlowStatement class
        /// </summary>
        public UnrealizedGainsLossesOnDerivativesCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the UnrealizedGainsLossesOnDerivativesCashFlowStatement class
        /// </summary>
        public UnrealizedGainsLossesOnDerivativesCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The aggregate expense charged against earnings to allocate the cost of intangible assets (nonphysical assets not used in
    /// production) in a systematic and rational manner to the periods expected to benefit from such assets.
    /// </summary>
    public class AmortizationOfIntangiblesCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the AmortizationOfIntangiblesCashFlowStatement class
        /// </summary>
        public AmortizationOfIntangiblesCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the AmortizationOfIntangiblesCashFlowStatement class
        /// </summary>
        public AmortizationOfIntangiblesCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The amount of cash paid during the current period to foreign, federal state and local authorities as taxes on income.
    /// </summary>
    public class IncomeTaxPaidSupplementalDataCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the IncomeTaxPaidSupplementalDataCashFlowStatement class
        /// </summary>
        public IncomeTaxPaidSupplementalDataCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the IncomeTaxPaidSupplementalDataCashFlowStatement class
        /// </summary>
        public IncomeTaxPaidSupplementalDataCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The amount of cash paid during the current period for interest owed on money borrowed; including amount of interest capitalized.
    /// </summary>
    public class InterestPaidSupplementalDataCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the InterestPaidSupplementalDataCashFlowStatement class
        /// </summary>
        public InterestPaidSupplementalDataCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the InterestPaidSupplementalDataCashFlowStatement class
        /// </summary>
        public InterestPaidSupplementalDataCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The cash inflow from offering common stock, which is the additional capital contribution to the entity during the Intperiod.
    /// </summary>
    public class IssuanceOfCapitalStockCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the IssuanceOfCapitalStockCashFlowStatement class
        /// </summary>
        public IssuanceOfCapitalStockCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the IssuanceOfCapitalStockCashFlowStatement class
        /// </summary>
        public IssuanceOfCapitalStockCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The cash inflow due to an increase in long term debt.
    /// </summary>
    public class IssuanceOfDebtCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the IssuanceOfDebtCashFlowStatement class
        /// </summary>
        public IssuanceOfDebtCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the IssuanceOfDebtCashFlowStatement class
        /// </summary>
        public IssuanceOfDebtCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Payments to Settle Long Term Debt plus Payments to Settle Short Term Debt.
    /// </summary>
    public class RepaymentOfDebtCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the RepaymentOfDebtCashFlowStatement class
        /// </summary>
        public RepaymentOfDebtCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the RepaymentOfDebtCashFlowStatement class
        /// </summary>
        public RepaymentOfDebtCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Payments for Common Stock plus Payments for Preferred Stock.
    /// </summary>
    public class RepurchaseOfCapitalStockCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the RepurchaseOfCapitalStockCashFlowStatement class
        /// </summary>
        public RepurchaseOfCapitalStockCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the RepurchaseOfCapitalStockCashFlowStatement class
        /// </summary>
        public RepurchaseOfCapitalStockCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Cash Flow Operations minus Capital Expenditures.
    /// </summary>
    public class FreeCashFlowCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the FreeCashFlowCashFlowStatement class
        /// </summary>
        public FreeCashFlowCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the FreeCashFlowCashFlowStatement class
        /// </summary>
        public FreeCashFlowCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The net change on interest-bearing deposits in other financial institutions for relatively short periods of time including, for example,
    /// certificates of deposits.
    /// </summary>
    public class DecreaseinInterestBearingDepositsinBankCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the DecreaseinInterestBearingDepositsinBankCashFlowStatement class
        /// </summary>
        public DecreaseinInterestBearingDepositsinBankCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the DecreaseinInterestBearingDepositsinBankCashFlowStatement class
        /// </summary>
        public DecreaseinInterestBearingDepositsinBankCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Increase in interest-bearing deposits in bank.
    /// </summary>
    public class IncreaseinInterestBearingDepositsinBankCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the IncreaseinInterestBearingDepositsinBankCashFlowStatement class
        /// </summary>
        public IncreaseinInterestBearingDepositsinBankCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the IncreaseinInterestBearingDepositsinBankCashFlowStatement class
        /// </summary>
        public IncreaseinInterestBearingDepositsinBankCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Interest received by the company, in the Operating Cash Flow section.
    /// </summary>
    public class InterestReceivedCFOCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the InterestReceivedCFOCashFlowStatement class
        /// </summary>
        public InterestReceivedCFOCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the InterestReceivedCFOCashFlowStatement class
        /// </summary>
        public InterestReceivedCFOCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Interest paid on loans, debt or borrowings, in the Operating Cash Flow section.
    /// </summary>
    public class InterestPaidCFOCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the InterestPaidCFOCashFlowStatement class
        /// </summary>
        public InterestPaidCFOCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the InterestPaidCFOCashFlowStatement class
        /// </summary>
        public InterestPaidCFOCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Purchase of subsidiaries or interest in subsidiaries (investments 51% and above).
    /// </summary>
    public class PurchaseofSubsidiariesCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the PurchaseofSubsidiariesCashFlowStatement class
        /// </summary>
        public PurchaseofSubsidiariesCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the PurchaseofSubsidiariesCashFlowStatement class
        /// </summary>
        public PurchaseofSubsidiariesCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Purchase of joint venture/associates (investment below 50%).
    /// </summary>
    public class PurchaseofJointVentureAssociateCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the PurchaseofJointVentureAssociateCashFlowStatement class
        /// </summary>
        public PurchaseofJointVentureAssociateCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the PurchaseofJointVentureAssociateCashFlowStatement class
        /// </summary>
        public PurchaseofJointVentureAssociateCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Cash inflow from the disposal of any subsidiaries.
    /// </summary>
    public class SaleofSubsidiariesCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the SaleofSubsidiariesCashFlowStatement class
        /// </summary>
        public SaleofSubsidiariesCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the SaleofSubsidiariesCashFlowStatement class
        /// </summary>
        public SaleofSubsidiariesCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Cash inflow from the disposal of joint venture/associates (investment below 50%).
    /// </summary>
    public class SaleofJointVentureAssociateCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the SaleofJointVentureAssociateCashFlowStatement class
        /// </summary>
        public SaleofJointVentureAssociateCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the SaleofJointVentureAssociateCashFlowStatement class
        /// </summary>
        public SaleofJointVentureAssociateCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Change in cash flow resulting from increase/decrease in lease financing.
    /// </summary>
    public class IncreaseDecreaseinLeaseFinancingCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the IncreaseDecreaseinLeaseFinancingCashFlowStatement class
        /// </summary>
        public IncreaseDecreaseinLeaseFinancingCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the IncreaseDecreaseinLeaseFinancingCashFlowStatement class
        /// </summary>
        public IncreaseDecreaseinLeaseFinancingCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The cash inflow from increase in lease financing.
    /// </summary>
    public class IncreaseinLeaseFinancingCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the IncreaseinLeaseFinancingCashFlowStatement class
        /// </summary>
        public IncreaseinLeaseFinancingCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the IncreaseinLeaseFinancingCashFlowStatement class
        /// </summary>
        public IncreaseinLeaseFinancingCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The cash outflow to repay lease financing during the Intperiod.
    /// </summary>
    public class RepaymentinLeaseFinancingCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the RepaymentinLeaseFinancingCashFlowStatement class
        /// </summary>
        public RepaymentinLeaseFinancingCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the RepaymentinLeaseFinancingCashFlowStatement class
        /// </summary>
        public RepaymentinLeaseFinancingCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// A non-cash adjustment for share of associates' income in respect of operating activities.
    /// </summary>
    public class ShareofAssociatesCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ShareofAssociatesCashFlowStatement class
        /// </summary>
        public ShareofAssociatesCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the ShareofAssociatesCashFlowStatement class
        /// </summary>
        public ShareofAssociatesCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The difference between the sale price or salvage price and the book value of an asset that was sold or retired during the reporting
    /// Intperiod.
    /// </summary>
    public class ProfitonDisposalsCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ProfitonDisposalsCashFlowStatement class
        /// </summary>
        public ProfitonDisposalsCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the ProfitonDisposalsCashFlowStatement class
        /// </summary>
        public ProfitonDisposalsCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// A non-cash adjustment relating to restructuring costs.
    /// </summary>
    public class ReorganizationOtherCostsCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ReorganizationOtherCostsCashFlowStatement class
        /// </summary>
        public ReorganizationOtherCostsCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the ReorganizationOtherCostsCashFlowStatement class
        /// </summary>
        public ReorganizationOtherCostsCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Adjustments due to net loans to/from outsiders in the Investing Cash Flow section.
    /// </summary>
    public class NetOutwardLoansCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the NetOutwardLoansCashFlowStatement class
        /// </summary>
        public NetOutwardLoansCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the NetOutwardLoansCashFlowStatement class
        /// </summary>
        public NetOutwardLoansCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Cost associated with issuance of debt/equity capital in the Financing Cash Flow section.
    /// </summary>
    public class IssueExpensesCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the IssueExpensesCashFlowStatement class
        /// </summary>
        public IssueExpensesCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the IssueExpensesCashFlowStatement class
        /// </summary>
        public IssueExpensesCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The increase or decrease between periods of the deposits by banks and customers.
    /// </summary>
    public class ChangeinDepositsbyBanksandCustomersCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ChangeinDepositsbyBanksandCustomersCashFlowStatement class
        /// </summary>
        public ChangeinDepositsbyBanksandCustomersCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the ChangeinDepositsbyBanksandCustomersCashFlowStatement class
        /// </summary>
        public ChangeinDepositsbyBanksandCustomersCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The net cash from (used in) all of the entity's operating activities, including those of discontinued operations, of the reporting entity
    /// under the direct method.
    /// </summary>
    public class CashFlowsfromusedinOperatingActivitiesDirectCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the CashFlowsfromusedinOperatingActivitiesDirectCashFlowStatement class
        /// </summary>
        public CashFlowsfromusedinOperatingActivitiesDirectCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the CashFlowsfromusedinOperatingActivitiesDirectCashFlowStatement class
        /// </summary>
        public CashFlowsfromusedinOperatingActivitiesDirectCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Sum of total cash receipts in the direct cash flow.
    /// </summary>
    public class ClassesofCashReceiptsfromOperatingActivitiesCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ClassesofCashReceiptsfromOperatingActivitiesCashFlowStatement class
        /// </summary>
        public ClassesofCashReceiptsfromOperatingActivitiesCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the ClassesofCashReceiptsfromOperatingActivitiesCashFlowStatement class
        /// </summary>
        public ClassesofCashReceiptsfromOperatingActivitiesCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Other cash receipts for the direct cash flow.
    /// </summary>
    public class OtherCashReceiptsfromOperatingActivitiesCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the OtherCashReceiptsfromOperatingActivitiesCashFlowStatement class
        /// </summary>
        public OtherCashReceiptsfromOperatingActivitiesCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the OtherCashReceiptsfromOperatingActivitiesCashFlowStatement class
        /// </summary>
        public OtherCashReceiptsfromOperatingActivitiesCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Sum of total cash payment in the direct cash flow.
    /// </summary>
    public class ClassesofCashPaymentsCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ClassesofCashPaymentsCashFlowStatement class
        /// </summary>
        public ClassesofCashPaymentsCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the ClassesofCashPaymentsCashFlowStatement class
        /// </summary>
        public ClassesofCashPaymentsCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Cash paid to suppliers when purchasing goods or services by the company, in the direct cash flow.
    /// </summary>
    public class PaymentstoSuppliersforGoodsandServicesCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the PaymentstoSuppliersforGoodsandServicesCashFlowStatement class
        /// </summary>
        public PaymentstoSuppliersforGoodsandServicesCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the PaymentstoSuppliersforGoodsandServicesCashFlowStatement class
        /// </summary>
        public PaymentstoSuppliersforGoodsandServicesCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Cash paid in a form of salaries or other benefits to employees of the company, in the direct cash flow.
    /// </summary>
    public class PaymentsonBehalfofEmployeesCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the PaymentsonBehalfofEmployeesCashFlowStatement class
        /// </summary>
        public PaymentsonBehalfofEmployeesCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the PaymentsonBehalfofEmployeesCashFlowStatement class
        /// </summary>
        public PaymentsonBehalfofEmployeesCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Other cash payments for the direct cash flow.
    /// </summary>
    public class OtherCashPaymentsfromOperatingActivitiesCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the OtherCashPaymentsfromOperatingActivitiesCashFlowStatement class
        /// </summary>
        public OtherCashPaymentsfromOperatingActivitiesCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the OtherCashPaymentsfromOperatingActivitiesCashFlowStatement class
        /// </summary>
        public OtherCashPaymentsfromOperatingActivitiesCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Dividend paid to the investors, for the direct cash flow.
    /// </summary>
    public class DividendsPaidDirectCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the DividendsPaidDirectCashFlowStatement class
        /// </summary>
        public DividendsPaidDirectCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the DividendsPaidDirectCashFlowStatement class
        /// </summary>
        public DividendsPaidDirectCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Dividend received on the investment, for the direct cash flow.
    /// </summary>
    public class DividendsReceivedDirectCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the DividendsReceivedDirectCashFlowStatement class
        /// </summary>
        public DividendsReceivedDirectCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the DividendsReceivedDirectCashFlowStatement class
        /// </summary>
        public DividendsReceivedDirectCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Interest paid on loans, debt or borrowings, in the direct cash flow.
    /// </summary>
    public class InterestPaidDirectCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the InterestPaidDirectCashFlowStatement class
        /// </summary>
        public InterestPaidDirectCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the InterestPaidDirectCashFlowStatement class
        /// </summary>
        public InterestPaidDirectCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Interest received by the company, in the direct cash flow.
    /// </summary>
    public class InterestReceivedDirectCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the InterestReceivedDirectCashFlowStatement class
        /// </summary>
        public InterestReceivedDirectCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the InterestReceivedDirectCashFlowStatement class
        /// </summary>
        public InterestReceivedDirectCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Tax paid/refund related to operating activities, for the direct cash flow.
    /// </summary>
    public class TaxesRefundPaidDirectCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the TaxesRefundPaidDirectCashFlowStatement class
        /// </summary>
        public TaxesRefundPaidDirectCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the TaxesRefundPaidDirectCashFlowStatement class
        /// </summary>
        public TaxesRefundPaidDirectCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Sum of all adjustments back from net income but without real cash outflow or inflow.
    /// </summary>
    public class TotalAdjustmentsforNonCashItemsCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the TotalAdjustmentsforNonCashItemsCashFlowStatement class
        /// </summary>
        public TotalAdjustmentsforNonCashItemsCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the TotalAdjustmentsforNonCashItemsCashFlowStatement class
        /// </summary>
        public TotalAdjustmentsforNonCashItemsCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The difference between the future net cash flows expected to be received from the asset and its book value, recognized in the
    /// Income Statement.
    /// </summary>
    public class ImpairmentLossReversalRecognizedinProfitorLossCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ImpairmentLossReversalRecognizedinProfitorLossCashFlowStatement class
        /// </summary>
        public ImpairmentLossReversalRecognizedinProfitorLossCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the ImpairmentLossReversalRecognizedinProfitorLossCashFlowStatement class
        /// </summary>
        public ImpairmentLossReversalRecognizedinProfitorLossCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Dividend paid to the investors, in the Operating Cash Flow section.
    /// </summary>
    public class DividendPaidCFOCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the DividendPaidCFOCashFlowStatement class
        /// </summary>
        public DividendPaidCFOCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the DividendPaidCFOCashFlowStatement class
        /// </summary>
        public DividendPaidCFOCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Dividend received on investment, in the Operating Cash Flow section.
    /// </summary>
    public class DividendReceivedCFOCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the DividendReceivedCFOCashFlowStatement class
        /// </summary>
        public DividendReceivedCFOCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the DividendReceivedCFOCashFlowStatement class
        /// </summary>
        public DividendReceivedCFOCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Total tax paid or received on operating activities.
    /// </summary>
    public class TaxesRefundPaidCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the TaxesRefundPaidCashFlowStatement class
        /// </summary>
        public TaxesRefundPaidCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the TaxesRefundPaidCashFlowStatement class
        /// </summary>
        public TaxesRefundPaidCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Any other cash inflows or outflows in the Operating Cash Flow section, not accounted for in the other specified items.
    /// </summary>
    public class OtherOperatingInflowsOutflowsofCashCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the OtherOperatingInflowsOutflowsofCashCashFlowStatement class
        /// </summary>
        public OtherOperatingInflowsOutflowsofCashCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the OtherOperatingInflowsOutflowsofCashCashFlowStatement class
        /// </summary>
        public OtherOperatingInflowsOutflowsofCashCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Cash outlay for cash advances and loans made to other parties.
    /// </summary>
    public class CashAdvancesandLoansMadetoOtherPartiesCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the CashAdvancesandLoansMadetoOtherPartiesCashFlowStatement class
        /// </summary>
        public CashAdvancesandLoansMadetoOtherPartiesCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the CashAdvancesandLoansMadetoOtherPartiesCashFlowStatement class
        /// </summary>
        public CashAdvancesandLoansMadetoOtherPartiesCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Cash received from the repayment of advances and loans made to other parties, in the Investing Cash Flow section.
    /// </summary>
    public class CashReceiptsfromRepaymentofAdvancesandLoansMadetoOtherPartiesCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the CashReceiptsfromRepaymentofAdvancesandLoansMadetoOtherPartiesCashFlowStatement class
        /// </summary>
        public CashReceiptsfromRepaymentofAdvancesandLoansMadetoOtherPartiesCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the CashReceiptsfromRepaymentofAdvancesandLoansMadetoOtherPartiesCashFlowStatement class
        /// </summary>
        public CashReceiptsfromRepaymentofAdvancesandLoansMadetoOtherPartiesCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Dividend received on investment, in the Investing Cash Flow section.
    /// </summary>
    public class DividendsReceivedCFICashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the DividendsReceivedCFICashFlowStatement class
        /// </summary>
        public DividendsReceivedCFICashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the DividendsReceivedCFICashFlowStatement class
        /// </summary>
        public DividendsReceivedCFICashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Interest received by the company, in the Investing Cash Flow section.
    /// </summary>
    public class InterestReceivedCFICashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the InterestReceivedCFICashFlowStatement class
        /// </summary>
        public InterestReceivedCFICashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the InterestReceivedCFICashFlowStatement class
        /// </summary>
        public InterestReceivedCFICashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Interest paid on loans, debt or borrowings, in the Financing Cash Flow section.
    /// </summary>
    public class InterestPaidCFFCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the InterestPaidCFFCashFlowStatement class
        /// </summary>
        public InterestPaidCFFCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the InterestPaidCFFCashFlowStatement class
        /// </summary>
        public InterestPaidCFFCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The increase or decrease between periods in the amount of outstanding money owed by a customer for goods or services provided
    /// by the company.
    /// </summary>
    public class ChangeinAccruedIncomeCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ChangeinAccruedIncomeCashFlowStatement class
        /// </summary>
        public ChangeinAccruedIncomeCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the ChangeinAccruedIncomeCashFlowStatement class
        /// </summary>
        public ChangeinAccruedIncomeCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The increase or decrease between periods of the financial assets.
    /// </summary>
    public class ChangeinFinancialAssetsCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ChangeinFinancialAssetsCashFlowStatement class
        /// </summary>
        public ChangeinFinancialAssetsCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the ChangeinFinancialAssetsCashFlowStatement class
        /// </summary>
        public ChangeinFinancialAssetsCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The increase or decrease between periods of the advances from central banks.
    /// </summary>
    public class ChangeinAdvancesfromCentralBanksCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ChangeinAdvancesfromCentralBanksCashFlowStatement class
        /// </summary>
        public ChangeinAdvancesfromCentralBanksCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the ChangeinAdvancesfromCentralBanksCashFlowStatement class
        /// </summary>
        public ChangeinAdvancesfromCentralBanksCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The increase or decrease between periods of the financial liabilities.
    /// </summary>
    public class ChangeinFinancialLiabilitiesCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ChangeinFinancialLiabilitiesCashFlowStatement class
        /// </summary>
        public ChangeinFinancialLiabilitiesCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the ChangeinFinancialLiabilitiesCashFlowStatement class
        /// </summary>
        public ChangeinFinancialLiabilitiesCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The increase or decrease between periods of the contract assets.
    /// </summary>
    public class ChangeinInsuranceContractAssetsCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ChangeinInsuranceContractAssetsCashFlowStatement class
        /// </summary>
        public ChangeinInsuranceContractAssetsCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the ChangeinInsuranceContractAssetsCashFlowStatement class
        /// </summary>
        public ChangeinInsuranceContractAssetsCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The increase or decrease between periods of the reinsurance receivable.
    /// </summary>
    public class ChangeinReinsuranceReceivablesCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ChangeinReinsuranceReceivablesCashFlowStatement class
        /// </summary>
        public ChangeinReinsuranceReceivablesCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the ChangeinReinsuranceReceivablesCashFlowStatement class
        /// </summary>
        public ChangeinReinsuranceReceivablesCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The increase or decrease between periods of the deferred acquisition costs.
    /// </summary>
    public class ChangeinDeferredAcquisitionCostsNetCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ChangeinDeferredAcquisitionCostsNetCashFlowStatement class
        /// </summary>
        public ChangeinDeferredAcquisitionCostsNetCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the ChangeinDeferredAcquisitionCostsNetCashFlowStatement class
        /// </summary>
        public ChangeinDeferredAcquisitionCostsNetCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The increase or decrease between periods of the insurance funds.
    /// </summary>
    public class ChangeinInsuranceFundsCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ChangeinInsuranceFundsCashFlowStatement class
        /// </summary>
        public ChangeinInsuranceFundsCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the ChangeinInsuranceFundsCashFlowStatement class
        /// </summary>
        public ChangeinInsuranceFundsCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The increase or decrease between periods of the investment contract liabilities.
    /// </summary>
    public class ChangeinInvestmentContractLiabilitiesCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ChangeinInvestmentContractLiabilitiesCashFlowStatement class
        /// </summary>
        public ChangeinInvestmentContractLiabilitiesCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the ChangeinInvestmentContractLiabilitiesCashFlowStatement class
        /// </summary>
        public ChangeinInvestmentContractLiabilitiesCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The increase or decrease between periods of the insurance contract liabilities.
    /// </summary>
    public class ChangeinInsuranceContractLiabilitiesCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ChangeinInsuranceContractLiabilitiesCashFlowStatement class
        /// </summary>
        public ChangeinInsuranceContractLiabilitiesCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the ChangeinInsuranceContractLiabilitiesCashFlowStatement class
        /// </summary>
        public ChangeinInsuranceContractLiabilitiesCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// A non-cash adjustment for total provision and write off on assets &amp; liabilities.
    /// </summary>
    public class ProvisionandWriteOffofAssetsCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ProvisionandWriteOffofAssetsCashFlowStatement class
        /// </summary>
        public ProvisionandWriteOffofAssetsCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the ProvisionandWriteOffofAssetsCashFlowStatement class
        /// </summary>
        public ProvisionandWriteOffofAssetsCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Payment received from customers in the Direct Cash Flow.
    /// </summary>
    public class ReceiptsfromCustomersCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ReceiptsfromCustomersCashFlowStatement class
        /// </summary>
        public ReceiptsfromCustomersCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the ReceiptsfromCustomersCashFlowStatement class
        /// </summary>
        public ReceiptsfromCustomersCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Cash received from governments in the form of grants in the Direct Cash Flow.
    /// </summary>
    public class ReceiptsfromGovernmentGrantsCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ReceiptsfromGovernmentGrantsCashFlowStatement class
        /// </summary>
        public ReceiptsfromGovernmentGrantsCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the ReceiptsfromGovernmentGrantsCashFlowStatement class
        /// </summary>
        public ReceiptsfromGovernmentGrantsCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Amount of net income (loss) for the period allocated to non-controlling shareholders, partners, or other equity holders in one or
    /// more of the entities included.
    /// </summary>
    public class MinorityInterestCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the MinorityInterestCashFlowStatement class
        /// </summary>
        public MinorityInterestCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the MinorityInterestCashFlowStatement class
        /// </summary>
        public MinorityInterestCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Capital expenditure, capitalized software development cost, maintenance capital expenditure, etc. as reported by the company.
    /// </summary>
    public class CapExReportedCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the CapExReportedCashFlowStatement class
        /// </summary>
        public CapExReportedCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the CapExReportedCashFlowStatement class
        /// </summary>
        public CapExReportedCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Cash received as refunds from tax authorities in operating cash flow, using the direct method
    /// </summary>
    public class CashReceiptsfromTaxRefundsCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the CashReceiptsfromTaxRefundsCashFlowStatement class
        /// </summary>
        public CashReceiptsfromTaxRefundsCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the CashReceiptsfromTaxRefundsCashFlowStatement class
        /// </summary>
        public CashReceiptsfromTaxRefundsCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Cash received from banks and customer deposits in operating cash flow, using the direct method. This item is usually only available
    /// for bank industry
    /// </summary>
    public class CashReceiptsfromDepositsbyBanksandCustomersCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the CashReceiptsfromDepositsbyBanksandCustomersCashFlowStatement class
        /// </summary>
        public CashReceiptsfromDepositsbyBanksandCustomersCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the CashReceiptsfromDepositsbyBanksandCustomersCashFlowStatement class
        /// </summary>
        public CashReceiptsfromDepositsbyBanksandCustomersCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Cash received from loans in operating cash flow, using the direct method. This item is usually only available for bank industry
    /// </summary>
    public class CashReceiptsfromLoansCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the CashReceiptsfromLoansCashFlowStatement class
        /// </summary>
        public CashReceiptsfromLoansCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the CashReceiptsfromLoansCashFlowStatement class
        /// </summary>
        public CashReceiptsfromLoansCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Cash received from the trading of securities in operating cash flow, using the direct method. This item is usually only available for
    /// bank and insurance industries
    /// </summary>
    public class CashReceiptsfromSecuritiesRelatedActivitiesCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the CashReceiptsfromSecuritiesRelatedActivitiesCashFlowStatement class
        /// </summary>
        public CashReceiptsfromSecuritiesRelatedActivitiesCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the CashReceiptsfromSecuritiesRelatedActivitiesCashFlowStatement class
        /// </summary>
        public CashReceiptsfromSecuritiesRelatedActivitiesCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Cash received from agency fees and commissions in operating cash flow, using the direct method. This item is usually available for
    /// bank and insurance industries
    /// </summary>
    public class CashReceiptsfromFeesandCommissionsCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the CashReceiptsfromFeesandCommissionsCashFlowStatement class
        /// </summary>
        public CashReceiptsfromFeesandCommissionsCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the CashReceiptsfromFeesandCommissionsCashFlowStatement class
        /// </summary>
        public CashReceiptsfromFeesandCommissionsCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Cash paid for deposits by banks and customers in operating cash flow, using the direct method. This item is usually only available
    /// for bank industry
    /// </summary>
    public class CashPaymentsforDepositsbyBanksandCustomersCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the CashPaymentsforDepositsbyBanksandCustomersCashFlowStatement class
        /// </summary>
        public CashPaymentsforDepositsbyBanksandCustomersCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the CashPaymentsforDepositsbyBanksandCustomersCashFlowStatement class
        /// </summary>
        public CashPaymentsforDepositsbyBanksandCustomersCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Cash paid for loans in operating cash flow, using the direct method. This item is usually only available for bank industry
    /// </summary>
    public class CashPaymentsforLoansCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the CashPaymentsforLoansCashFlowStatement class
        /// </summary>
        public CashPaymentsforLoansCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the CashPaymentsforLoansCashFlowStatement class
        /// </summary>
        public CashPaymentsforLoansCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Cash paid for interest and commission in operating cash flow, using the direct method
    /// </summary>
    public class InterestandCommissionPaidCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the InterestandCommissionPaidCashFlowStatement class
        /// </summary>
        public InterestandCommissionPaidCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the InterestandCommissionPaidCashFlowStatement class
        /// </summary>
        public InterestandCommissionPaidCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Cash paid to tax authorities in operating cash flow, using the direct method
    /// </summary>
    public class AllTaxesPaidCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the AllTaxesPaidCashFlowStatement class
        /// </summary>
        public AllTaxesPaidCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the AllTaxesPaidCashFlowStatement class
        /// </summary>
        public AllTaxesPaidCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Cash received from insurance activities in operating cash flow, using the direct method. This item is usually only available for
    /// insurance industry
    /// </summary>
    public class CashReceivedfromInsuranceActivitiesCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the CashReceivedfromInsuranceActivitiesCashFlowStatement class
        /// </summary>
        public CashReceivedfromInsuranceActivitiesCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the CashReceivedfromInsuranceActivitiesCashFlowStatement class
        /// </summary>
        public CashReceivedfromInsuranceActivitiesCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Cash received from premium income in operating cash flow, using the direct method. This item is usually only available for
    /// insurance industry
    /// </summary>
    public class PremiumReceivedCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the PremiumReceivedCashFlowStatement class
        /// </summary>
        public PremiumReceivedCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the PremiumReceivedCashFlowStatement class
        /// </summary>
        public PremiumReceivedCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Cash received from reinsurance income or other recoveries income in operating cash flow, using the direct method. This item is
    /// usually only available for insurance industry
    /// </summary>
    public class ReinsuranceandOtherRecoveriesReceivedCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ReinsuranceandOtherRecoveriesReceivedCashFlowStatement class
        /// </summary>
        public ReinsuranceandOtherRecoveriesReceivedCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the ReinsuranceandOtherRecoveriesReceivedCashFlowStatement class
        /// </summary>
        public ReinsuranceandOtherRecoveriesReceivedCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Cash received from policyholder deposit investment activities in operating cash flow, using the direct method. This item is usually
    /// only available for insurance industry
    /// </summary>
    public class PolicyholderDepositInvestmentReceivedCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the PolicyholderDepositInvestmentReceivedCashFlowStatement class
        /// </summary>
        public PolicyholderDepositInvestmentReceivedCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the PolicyholderDepositInvestmentReceivedCashFlowStatement class
        /// </summary>
        public PolicyholderDepositInvestmentReceivedCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Cash paid out for insurance activities during the period in operating cash flow, using the direct method. This item is usually only
    /// available for insurance industry
    /// </summary>
    public class CashPaidforInsuranceActivitiesCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the CashPaidforInsuranceActivitiesCashFlowStatement class
        /// </summary>
        public CashPaidforInsuranceActivitiesCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the CashPaidforInsuranceActivitiesCashFlowStatement class
        /// </summary>
        public CashPaidforInsuranceActivitiesCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Cash paid out for claims by a insurance company during the period in operating cash flow, using the direct method. This item is
    /// usually only available for insurance industry
    /// </summary>
    public class ClaimsPaidCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ClaimsPaidCashFlowStatement class
        /// </summary>
        public ClaimsPaidCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the ClaimsPaidCashFlowStatement class
        /// </summary>
        public ClaimsPaidCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Cash paid for commissions in operating cash flow, using the direct method
    /// </summary>
    public class CommissionPaidCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the CommissionPaidCashFlowStatement class
        /// </summary>
        public CommissionPaidCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the CommissionPaidCashFlowStatement class
        /// </summary>
        public CommissionPaidCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Cash paid out to reinsurers in operating cash flow, using the direct method. This item is usually only available for insurance industry
    /// </summary>
    public class CashPaidtoReinsurersCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the CashPaidtoReinsurersCashFlowStatement class
        /// </summary>
        public CashPaidtoReinsurersCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the CashPaidtoReinsurersCashFlowStatement class
        /// </summary>
        public CashPaidtoReinsurersCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Cash paid out for underwriting expenses, such as the acquisition of new and renewal insurance contracts, in operating cash flow,
    /// using the direct method. This item is usually only available for insurance industry
    /// </summary>
    public class OtherUnderwritingExpensesPaidCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the OtherUnderwritingExpensesPaidCashFlowStatement class
        /// </summary>
        public OtherUnderwritingExpensesPaidCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the OtherUnderwritingExpensesPaidCashFlowStatement class
        /// </summary>
        public OtherUnderwritingExpensesPaidCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Cash Distribution of earnings to Minority Stockholders.
    /// </summary>
    public class CashDividendsForMinoritiesCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the CashDividendsForMinoritiesCashFlowStatement class
        /// </summary>
        public CashDividendsForMinoritiesCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the CashDividendsForMinoritiesCashFlowStatement class
        /// </summary>
        public CashDividendsForMinoritiesCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The net cash from an entity's operating activities before real cash inflow or outflow for Dividend, Interest, Tax, or other unclassified
    /// operating activities.
    /// </summary>
    public class CashGeneratedfromOperatingActivitiesCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the CashGeneratedfromOperatingActivitiesCashFlowStatement class
        /// </summary>
        public CashGeneratedfromOperatingActivitiesCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the CashGeneratedfromOperatingActivitiesCashFlowStatement class
        /// </summary>
        public CashGeneratedfromOperatingActivitiesCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Funds from operations; populated only for real estate investment trusts (REITs), defined as the sum of net income, gain/loss
    /// (realized and unrealized) on investment securities, asset impairment charge, depreciation and amortization and gain/ loss on the
    /// sale of business and property plant and equipment.
    /// </summary>
    public class FundFromOperationCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the FundFromOperationCashFlowStatement class
        /// </summary>
        public FundFromOperationCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the FundFromOperationCashFlowStatement class
        /// </summary>
        public FundFromOperationCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Net increase or decrease in cash due to purchases or sales of investment properties during the accounting Intperiod.
    /// </summary>
    public class NetInvestmentPropertiesPurchaseAndSaleCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the NetInvestmentPropertiesPurchaseAndSaleCashFlowStatement class
        /// </summary>
        public NetInvestmentPropertiesPurchaseAndSaleCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the NetInvestmentPropertiesPurchaseAndSaleCashFlowStatement class
        /// </summary>
        public NetInvestmentPropertiesPurchaseAndSaleCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Cash outflow for purchases of investment properties during the accounting Intperiod.
    /// </summary>
    public class PurchaseOfInvestmentPropertiesCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the PurchaseOfInvestmentPropertiesCashFlowStatement class
        /// </summary>
        public PurchaseOfInvestmentPropertiesCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the PurchaseOfInvestmentPropertiesCashFlowStatement class
        /// </summary>
        public PurchaseOfInvestmentPropertiesCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Cash inflow from sale of investment properties during the accounting Intperiod.
    /// </summary>
    public class SaleOfInvestmentPropertiesCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the SaleOfInvestmentPropertiesCashFlowStatement class
        /// </summary>
        public SaleOfInvestmentPropertiesCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the SaleOfInvestmentPropertiesCashFlowStatement class
        /// </summary>
        public SaleOfInvestmentPropertiesCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Other cash adjustments included in change in cash not categorized above.
    /// </summary>
    public class OtherCashAdjustIncludedIntoChangeinCashCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the OtherCashAdjustIncludedIntoChangeinCashCashFlowStatement class
        /// </summary>
        public OtherCashAdjustIncludedIntoChangeinCashCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the OtherCashAdjustIncludedIntoChangeinCashCashFlowStatement class
        /// </summary>
        public OtherCashAdjustIncludedIntoChangeinCashCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Other changes to cash and cash equivalents during the accounting Intperiod.
    /// </summary>
    public class OtherCashAdjustExcludeFromChangeinCashCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the OtherCashAdjustExcludeFromChangeinCashCashFlowStatement class
        /// </summary>
        public OtherCashAdjustExcludeFromChangeinCashCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the OtherCashAdjustExcludeFromChangeinCashCashFlowStatement class
        /// </summary>
        public OtherCashAdjustExcludeFromChangeinCashCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The change in cash flow from the previous period to the current, as reported by the company, may be the same or not the same as
    /// Morningstar's standardized definition. It is a supplemental value which would be reported outside consolidated statements.
    /// </summary>
    public class ChangeinCashSupplementalAsReportedCashFlowStatement : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ChangeinCashSupplementalAsReportedCashFlowStatement class
        /// </summary>
        public ChangeinCashSupplementalAsReportedCashFlowStatement() { }

        /// <summary>
        /// Creates an instance of the ChangeinCashSupplementalAsReportedCashFlowStatement class
        /// </summary>
        public ChangeinCashSupplementalAsReportedCashFlowStatement(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The sum of Tier 1 and Tier 2 Capital. Tier 1 capital consists of common shareholders equity, perpetual preferred shareholders equity
    /// with non-cumulative dividends, retained earnings, and minority interests in the equity accounts of consolidated subsidiaries. Tier 2
    /// capital consists of subordinated debt, intermediate-term preferred stock, cumulative and long-term preferred stock, and a portion of
    /// a bank's allowance for loan and lease losses.
    /// </summary>
    public class TotalRiskBasedCapital : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the TotalRiskBasedCapital class
        /// </summary>
        public TotalRiskBasedCapital() { }

        /// <summary>
        /// Creates an instance of the TotalRiskBasedCapital class
        /// </summary>
        public TotalRiskBasedCapital(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Basic EPS from Continuing Operations is the earnings from continuing operations reported by the company divided by the weighted
    /// average number of common shares outstanding.
    /// </summary>
    public class BasicContinuousOperations : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the BasicContinuousOperations class
        /// </summary>
        public BasicContinuousOperations() { }

        /// <summary>
        /// Creates an instance of the BasicContinuousOperations class
        /// </summary>
        public BasicContinuousOperations(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Basic EPS from Discontinued Operations is the earnings from discontinued operations reported by the company divided by the
    /// weighted average number of common shares outstanding. This only includes gain or loss from discontinued operations.
    /// </summary>
    public class BasicDiscontinuousOperations : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the BasicDiscontinuousOperations class
        /// </summary>
        public BasicDiscontinuousOperations() { }

        /// <summary>
        /// Creates an instance of the BasicDiscontinuousOperations class
        /// </summary>
        public BasicDiscontinuousOperations(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Basic EPS from the Extraordinary Gains/Losses is the earnings attributable to the gains or losses (during the reporting period) from
    /// extraordinary items divided by the weighted average number of common shares outstanding.
    /// </summary>
    public class BasicExtraordinary : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the BasicExtraordinary class
        /// </summary>
        public BasicExtraordinary() { }

        /// <summary>
        /// Creates an instance of the BasicExtraordinary class
        /// </summary>
        public BasicExtraordinary(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Basic EPS from the Cumulative Effect of Accounting Change is the earnings attributable to the accounting change (during the
    /// reporting period) divided by the weighted average number of common shares outstanding.
    /// </summary>
    public class BasicAccountingChange : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the BasicAccountingChange class
        /// </summary>
        public BasicAccountingChange() { }

        /// <summary>
        /// Creates an instance of the BasicAccountingChange class
        /// </summary>
        public BasicAccountingChange(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Basic EPS is the bottom line net income divided by the weighted average number of common shares outstanding.
    /// </summary>
    public class BasicEPS : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the BasicEPS class
        /// </summary>
        public BasicEPS() { }

        /// <summary>
        /// Creates an instance of the BasicEPS class
        /// </summary>
        public BasicEPS(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Diluted EPS from Continuing Operations is the earnings from continuing operations divided by the common shares outstanding
    /// adjusted for the assumed conversion of all potentially dilutive securities.  Securities having a dilutive effect may include convertible
    /// debentures, warrants, options, and convertible preferred stock.
    /// </summary>
    public class DilutedContinuousOperations : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the DilutedContinuousOperations class
        /// </summary>
        public DilutedContinuousOperations() { }

        /// <summary>
        /// Creates an instance of the DilutedContinuousOperations class
        /// </summary>
        public DilutedContinuousOperations(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Diluted EPS from Discontinued Operations is the earnings from discontinued operations divided by the common shares outstanding
    /// adjusted for the assumed conversion of all potentially dilutive securities. Securities having a dilutive effect may include convertible
    /// debentures, warrants, options, and convertible preferred stock. This only includes gain or loss from discontinued operations.
    /// </summary>
    public class DilutedDiscontinuousOperations : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the DilutedDiscontinuousOperations class
        /// </summary>
        public DilutedDiscontinuousOperations() { }

        /// <summary>
        /// Creates an instance of the DilutedDiscontinuousOperations class
        /// </summary>
        public DilutedDiscontinuousOperations(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Diluted EPS from Extraordinary Gain/Losses is the gain or loss from extraordinary items divided by the common shares outstanding
    /// adjusted for the assumed conversion of all potentially dilutive securities. Securities having a dilutive effect may include convertible
    /// debentures, warrants, options, and convertible preferred stock.
    /// </summary>
    public class DilutedExtraordinary : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the DilutedExtraordinary class
        /// </summary>
        public DilutedExtraordinary() { }

        /// <summary>
        /// Creates an instance of the DilutedExtraordinary class
        /// </summary>
        public DilutedExtraordinary(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Diluted EPS from Cumulative Effect Accounting Changes is the earnings from accounting changes (in the reporting period) divided
    /// by the common shares outstanding adjusted for the assumed conversion of all potentially dilutive securities. Securities having a
    /// dilutive effect may include convertible debentures, warrants, options, and convertible preferred stock.
    /// </summary>
    public class DilutedAccountingChange : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the DilutedAccountingChange class
        /// </summary>
        public DilutedAccountingChange() { }

        /// <summary>
        /// Creates an instance of the DilutedAccountingChange class
        /// </summary>
        public DilutedAccountingChange(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Diluted EPS is the bottom line net income divided by the common shares outstanding adjusted for the assumed conversion of all
    /// potentially dilutive securities. Securities having a dilutive effect may include convertible debentures, warrants, options, and
    /// convertible preferred stock. This value will be derived when not reported for the fourth quarter and will be less than or equal to
    /// Basic EPS.
    /// </summary>
    public class DilutedEPS : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the DilutedEPS class
        /// </summary>
        public DilutedEPS() { }

        /// <summary>
        /// Creates an instance of the DilutedEPS class
        /// </summary>
        public DilutedEPS(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The shares outstanding used to calculate Basic EPS, which is the weighted average common share outstanding through the whole
    /// accounting Intperiod.  Note: If Basic Average Shares are not presented by the firm in the Income Statement, this data point will be
    /// null.
    /// </summary>
    public class BasicAverageShares : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the BasicAverageShares class
        /// </summary>
        public BasicAverageShares() { }

        /// <summary>
        /// Creates an instance of the BasicAverageShares class
        /// </summary>
        public BasicAverageShares(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The shares outstanding used to calculate the diluted EPS, assuming the conversion of all convertible securities and the exercise of
    /// warrants or stock options. It is the weighted average diluted share outstanding through the whole accounting Intperiod.  Note: If
    /// Diluted Average Shares are not presented by the firm in the Income Statement and Basic Average Shares are presented, Diluted
    /// Average Shares will equal Basic Average Shares.  However, if neither value is presented by the firm, Diluted Average Shares will be
    /// null.
    /// </summary>
    public class DilutedAverageShares : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the DilutedAverageShares class
        /// </summary>
        public DilutedAverageShares() { }

        /// <summary>
        /// Creates an instance of the DilutedAverageShares class
        /// </summary>
        public DilutedAverageShares(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The amount of dividend that a stockholder will receive for each share of stock held. It can be calculated by taking the total amount
    /// of dividends paid and dividing it by the total shares outstanding. Dividend per share = total dividend payment/total number of
    /// outstanding shares
    /// </summary>
    public class DividendPerShare : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the DividendPerShare class
        /// </summary>
        public DividendPerShare() { }

        /// <summary>
        /// Creates an instance of the DividendPerShare class
        /// </summary>
        public DividendPerShare(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Basic EPS from the Other Gains/Losses is the earnings attributable to the other gains/losses (during the reporting period) divided by
    /// the weighted average number of common shares outstanding.
    /// </summary>
    public class BasicEPSOtherGainsLosses : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the BasicEPSOtherGainsLosses class
        /// </summary>
        public BasicEPSOtherGainsLosses() { }

        /// <summary>
        /// Creates an instance of the BasicEPSOtherGainsLosses class
        /// </summary>
        public BasicEPSOtherGainsLosses(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Basic EPS from Continuing Operations plus Basic EPS from Discontinued Operations.
    /// </summary>
    public class ContinuingAndDiscontinuedBasicEPS : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ContinuingAndDiscontinuedBasicEPS class
        /// </summary>
        public ContinuingAndDiscontinuedBasicEPS() { }

        /// <summary>
        /// Creates an instance of the ContinuingAndDiscontinuedBasicEPS class
        /// </summary>
        public ContinuingAndDiscontinuedBasicEPS(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The earnings attributable to the tax loss carry forward (during the reporting period).
    /// </summary>
    public class TaxLossCarryforwardBasicEPS : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the TaxLossCarryforwardBasicEPS class
        /// </summary>
        public TaxLossCarryforwardBasicEPS() { }

        /// <summary>
        /// Creates an instance of the TaxLossCarryforwardBasicEPS class
        /// </summary>
        public TaxLossCarryforwardBasicEPS(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The earnings from gains and losses (in the reporting period) divided by the common shares outstanding adjusted for the assumed
    /// conversion of all potentially dilutive securities. Securities having a dilutive effect may include convertible debentures, warrants,
    /// options, convertible preferred stock, etc.
    /// </summary>
    public class DilutedEPSOtherGainsLosses : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the DilutedEPSOtherGainsLosses class
        /// </summary>
        public DilutedEPSOtherGainsLosses() { }

        /// <summary>
        /// Creates an instance of the DilutedEPSOtherGainsLosses class
        /// </summary>
        public DilutedEPSOtherGainsLosses(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Diluted EPS from Continuing Operations plus Diluted EPS from Discontinued Operations.
    /// </summary>
    public class ContinuingAndDiscontinuedDilutedEPS : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ContinuingAndDiscontinuedDilutedEPS class
        /// </summary>
        public ContinuingAndDiscontinuedDilutedEPS() { }

        /// <summary>
        /// Creates an instance of the ContinuingAndDiscontinuedDilutedEPS class
        /// </summary>
        public ContinuingAndDiscontinuedDilutedEPS(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The earnings from any tax loss carry forward (in the reporting period).
    /// </summary>
    public class TaxLossCarryforwardDilutedEPS : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the TaxLossCarryforwardDilutedEPS class
        /// </summary>
        public TaxLossCarryforwardDilutedEPS() { }

        /// <summary>
        /// Creates an instance of the TaxLossCarryforwardDilutedEPS class
        /// </summary>
        public TaxLossCarryforwardDilutedEPS(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The basic normalized earnings per share. Normalized EPS removes onetime and unusual items from EPS, to provide investors with a
    /// more accurate measure of the company's true earnings. Normalized Earnings / Basic Weighted Average Shares Outstanding.
    /// </summary>
    public class NormalizedBasicEPS : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the NormalizedBasicEPS class
        /// </summary>
        public NormalizedBasicEPS() { }

        /// <summary>
        /// Creates an instance of the NormalizedBasicEPS class
        /// </summary>
        public NormalizedBasicEPS(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The diluted normalized earnings per share. Normalized EPS removes onetime and unusual items from EPS, to provide investors with
    /// a more accurate measure of the company's true earnings. Normalized Earnings / Diluted Weighted Average Shares Outstanding.
    /// </summary>
    public class NormalizedDilutedEPS : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the NormalizedDilutedEPS class
        /// </summary>
        public NormalizedDilutedEPS() { }

        /// <summary>
        /// Creates an instance of the NormalizedDilutedEPS class
        /// </summary>
        public NormalizedDilutedEPS(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Total Dividend Per Share is cash dividends and special cash dividends paid per share over a certain period of time.
    /// </summary>
    public class TotalDividendPerShare : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the TotalDividendPerShare class
        /// </summary>
        public TotalDividendPerShare() { }

        /// <summary>
        /// Creates an instance of the TotalDividendPerShare class
        /// </summary>
        public TotalDividendPerShare(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Normalized Basic EPS as reported by the company in the financial statements.
    /// </summary>
    public class ReportedNormalizedBasicEPS : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ReportedNormalizedBasicEPS class
        /// </summary>
        public ReportedNormalizedBasicEPS() { }

        /// <summary>
        /// Creates an instance of the ReportedNormalizedBasicEPS class
        /// </summary>
        public ReportedNormalizedBasicEPS(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Normalized Diluted EPS as reported by the company in the financial statements.
    /// </summary>
    public class ReportedNormalizedDilutedEPS : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ReportedNormalizedDilutedEPS class
        /// </summary>
        public ReportedNormalizedDilutedEPS() { }

        /// <summary>
        /// Creates an instance of the ReportedNormalizedDilutedEPS class
        /// </summary>
        public ReportedNormalizedDilutedEPS(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Reflects a firm's capacity to pay a dividend, and is defined as Earnings Per Share / Dividend Per Share
    /// </summary>
    public class DividendCoverageRatio : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.TwelveMonths; } }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Gets/sets the TwelveMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwelveMonths)]
        public decimal TwelveMonths
        {
            get { return GetPeriodValue(IntPeriod.TwelveMonths); }
            set { SetPeriodValue(IntPeriod.TwelveMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the DividendCoverageRatio class
        /// </summary>
        public DividendCoverageRatio() { }

        /// <summary>
        /// Creates an instance of the DividendCoverageRatio class
        /// </summary>
        public DividendCoverageRatio(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The growth in the company's revenue on a percentage basis. Morningstar calculates the growth percentage based on the
    /// underlying revenue data reported in the Income Statement within the company filings or reports.
    /// </summary>
    public class RevenueGrowth : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.OneYear; } }

        /// <summary>
        /// Gets/sets the OneYear period value for the field
        /// </summary>
        [JsonProperty(Period.OneYear)]
        public decimal OneYear
        {
            get { return GetPeriodValue(IntPeriod.OneYear); }
            set { SetPeriodValue(IntPeriod.OneYear, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeYears period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeYears)]
        public decimal ThreeYears
        {
            get { return GetPeriodValue(IntPeriod.ThreeYears); }
            set { SetPeriodValue(IntPeriod.ThreeYears, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the FiveYears period value for the field
        /// </summary>
        [JsonProperty(Period.FiveYears)]
        public decimal FiveYears
        {
            get { return GetPeriodValue(IntPeriod.FiveYears); }
            set { SetPeriodValue(IntPeriod.FiveYears, value); }
        }

        /// <summary>
        /// Creates an instance of the RevenueGrowth class
        /// </summary>
        public RevenueGrowth() { }

        /// <summary>
        /// Creates an instance of the RevenueGrowth class
        /// </summary>
        public RevenueGrowth(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The growth in the company's operating income on a percentage basis. Morningstar calculates the growth percentage based on the
    /// underlying operating income data reported in the Income Statement within the company filings or reports.
    /// </summary>
    public class OperationIncomeGrowth : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.OneYear; } }

        /// <summary>
        /// Gets/sets the OneYear period value for the field
        /// </summary>
        [JsonProperty(Period.OneYear)]
        public decimal OneYear
        {
            get { return GetPeriodValue(IntPeriod.OneYear); }
            set { SetPeriodValue(IntPeriod.OneYear, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeYears period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeYears)]
        public decimal ThreeYears
        {
            get { return GetPeriodValue(IntPeriod.ThreeYears); }
            set { SetPeriodValue(IntPeriod.ThreeYears, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the FiveYears period value for the field
        /// </summary>
        [JsonProperty(Period.FiveYears)]
        public decimal FiveYears
        {
            get { return GetPeriodValue(IntPeriod.FiveYears); }
            set { SetPeriodValue(IntPeriod.FiveYears, value); }
        }

        /// <summary>
        /// Creates an instance of the OperationIncomeGrowth class
        /// </summary>
        public OperationIncomeGrowth() { }

        /// <summary>
        /// Creates an instance of the OperationIncomeGrowth class
        /// </summary>
        public OperationIncomeGrowth(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The growth in the company's net income on a percentage basis. Morningstar calculates the growth percentage based on the
    /// underlying net income data reported in the Income Statement within the company filings or reports.
    /// </summary>
    public class NetIncomeGrowth : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.OneYear; } }

        /// <summary>
        /// Gets/sets the OneYear period value for the field
        /// </summary>
        [JsonProperty(Period.OneYear)]
        public decimal OneYear
        {
            get { return GetPeriodValue(IntPeriod.OneYear); }
            set { SetPeriodValue(IntPeriod.OneYear, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeYears period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeYears)]
        public decimal ThreeYears
        {
            get { return GetPeriodValue(IntPeriod.ThreeYears); }
            set { SetPeriodValue(IntPeriod.ThreeYears, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the FiveYears period value for the field
        /// </summary>
        [JsonProperty(Period.FiveYears)]
        public decimal FiveYears
        {
            get { return GetPeriodValue(IntPeriod.FiveYears); }
            set { SetPeriodValue(IntPeriod.FiveYears, value); }
        }

        /// <summary>
        /// Creates an instance of the NetIncomeGrowth class
        /// </summary>
        public NetIncomeGrowth() { }

        /// <summary>
        /// Creates an instance of the NetIncomeGrowth class
        /// </summary>
        public NetIncomeGrowth(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The growth in the company's net income from continuing operations on a percentage basis. Morningstar calculates the growth
    /// percentage based on the underlying net income from continuing operations data reported in the Income Statement within the
    /// company filings or reports. This figure represents the rate of net income growth for parts of the business that will continue to
    /// generate revenue in the future.
    /// </summary>
    public class NetIncomeContOpsGrowth : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.OneYear; } }

        /// <summary>
        /// Gets/sets the OneYear period value for the field
        /// </summary>
        [JsonProperty(Period.OneYear)]
        public decimal OneYear
        {
            get { return GetPeriodValue(IntPeriod.OneYear); }
            set { SetPeriodValue(IntPeriod.OneYear, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeYears period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeYears)]
        public decimal ThreeYears
        {
            get { return GetPeriodValue(IntPeriod.ThreeYears); }
            set { SetPeriodValue(IntPeriod.ThreeYears, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the FiveYears period value for the field
        /// </summary>
        [JsonProperty(Period.FiveYears)]
        public decimal FiveYears
        {
            get { return GetPeriodValue(IntPeriod.FiveYears); }
            set { SetPeriodValue(IntPeriod.FiveYears, value); }
        }

        /// <summary>
        /// Creates an instance of the NetIncomeContOpsGrowth class
        /// </summary>
        public NetIncomeContOpsGrowth() { }

        /// <summary>
        /// Creates an instance of the NetIncomeContOpsGrowth class
        /// </summary>
        public NetIncomeContOpsGrowth(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The growth in the company's cash flow from operations on a percentage basis. Morningstar calculates the growth percentage
    /// based on the underlying cash flow from operations data reported in the Cash Flow Statement within the company filings or reports.
    /// </summary>
    public class CFOGrowth : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.OneYear; } }

        /// <summary>
        /// Gets/sets the OneYear period value for the field
        /// </summary>
        [JsonProperty(Period.OneYear)]
        public decimal OneYear
        {
            get { return GetPeriodValue(IntPeriod.OneYear); }
            set { SetPeriodValue(IntPeriod.OneYear, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeYears period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeYears)]
        public decimal ThreeYears
        {
            get { return GetPeriodValue(IntPeriod.ThreeYears); }
            set { SetPeriodValue(IntPeriod.ThreeYears, value); }
        }

        /// <summary>
        /// Gets/sets the FiveYears period value for the field
        /// </summary>
        [JsonProperty(Period.FiveYears)]
        public decimal FiveYears
        {
            get { return GetPeriodValue(IntPeriod.FiveYears); }
            set { SetPeriodValue(IntPeriod.FiveYears, value); }
        }

        /// <summary>
        /// Creates an instance of the CFOGrowth class
        /// </summary>
        public CFOGrowth() { }

        /// <summary>
        /// Creates an instance of the CFOGrowth class
        /// </summary>
        public CFOGrowth(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The growth in the company's free cash flow on a percentage basis. Morningstar calculates the growth percentage based on the
    /// underlying cash flow from operations and capital expenditures data reported in the Cash Flow Statement within the company filings
    /// or reports:   Free Cash Flow = Cash flow from operations - Capital Expenditures.
    /// </summary>
    public class FCFGrowth : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.OneYear; } }

        /// <summary>
        /// Gets/sets the OneYear period value for the field
        /// </summary>
        [JsonProperty(Period.OneYear)]
        public decimal OneYear
        {
            get { return GetPeriodValue(IntPeriod.OneYear); }
            set { SetPeriodValue(IntPeriod.OneYear, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeYears period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeYears)]
        public decimal ThreeYears
        {
            get { return GetPeriodValue(IntPeriod.ThreeYears); }
            set { SetPeriodValue(IntPeriod.ThreeYears, value); }
        }

        /// <summary>
        /// Gets/sets the FiveYears period value for the field
        /// </summary>
        [JsonProperty(Period.FiveYears)]
        public decimal FiveYears
        {
            get { return GetPeriodValue(IntPeriod.FiveYears); }
            set { SetPeriodValue(IntPeriod.FiveYears, value); }
        }

        /// <summary>
        /// Creates an instance of the FCFGrowth class
        /// </summary>
        public FCFGrowth() { }

        /// <summary>
        /// Creates an instance of the FCFGrowth class
        /// </summary>
        public FCFGrowth(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The growth in the company's operating revenue on a percentage basis. Morningstar calculates the growth percentage based on
    /// the underlying operating revenue data reported in the Income Statement within the company filings or reports.
    /// </summary>
    public class OperationRevenueGrowth3MonthAvg : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.OneYear; } }

        /// <summary>
        /// Gets/sets the OneYear period value for the field
        /// </summary>
        [JsonProperty(Period.OneYear)]
        public decimal OneYear
        {
            get { return GetPeriodValue(IntPeriod.OneYear); }
            set { SetPeriodValue(IntPeriod.OneYear, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeYears period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeYears)]
        public decimal ThreeYears
        {
            get { return GetPeriodValue(IntPeriod.ThreeYears); }
            set { SetPeriodValue(IntPeriod.ThreeYears, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the FiveYears period value for the field
        /// </summary>
        [JsonProperty(Period.FiveYears)]
        public decimal FiveYears
        {
            get { return GetPeriodValue(IntPeriod.FiveYears); }
            set { SetPeriodValue(IntPeriod.FiveYears, value); }
        }

        /// <summary>
        /// Creates an instance of the OperationRevenueGrowth3MonthAvg class
        /// </summary>
        public OperationRevenueGrowth3MonthAvg() { }

        /// <summary>
        /// Creates an instance of the OperationRevenueGrowth3MonthAvg class
        /// </summary>
        public OperationRevenueGrowth3MonthAvg(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Refers to the ratio of gross profit to revenue. Morningstar calculates the ratio by using the underlying data reported in the company
    /// filings or reports:   (Revenue - Cost of Goods Sold) / Revenue.
    /// </summary>
    public class GrossMargin : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.OneYear; } }

        /// <summary>
        /// Gets/sets the OneYear period value for the field
        /// </summary>
        [JsonProperty(Period.OneYear)]
        public decimal OneYear
        {
            get { return GetPeriodValue(IntPeriod.OneYear); }
            set { SetPeriodValue(IntPeriod.OneYear, value); }
        }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the GrossMargin class
        /// </summary>
        public GrossMargin() { }

        /// <summary>
        /// Creates an instance of the GrossMargin class
        /// </summary>
        public GrossMargin(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Refers to the ratio of operating income to revenue. Morningstar calculates the ratio by using the underlying data reported in the
    /// company filings or reports:   Operating Income / Revenue.
    /// </summary>
    public class OperationMargin : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.OneYear; } }

        /// <summary>
        /// Gets/sets the OneYear period value for the field
        /// </summary>
        [JsonProperty(Period.OneYear)]
        public decimal OneYear
        {
            get { return GetPeriodValue(IntPeriod.OneYear); }
            set { SetPeriodValue(IntPeriod.OneYear, value); }
        }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the OperationMargin class
        /// </summary>
        public OperationMargin() { }

        /// <summary>
        /// Creates an instance of the OperationMargin class
        /// </summary>
        public OperationMargin(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Refers to the ratio of pretax income to revenue. Morningstar calculates the ratio by using the underlying data reported in the
    /// company filings or reports:   Pretax Income / Revenue.
    /// </summary>
    public class PretaxMargin : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.OneYear; } }

        /// <summary>
        /// Gets/sets the OneYear period value for the field
        /// </summary>
        [JsonProperty(Period.OneYear)]
        public decimal OneYear
        {
            get { return GetPeriodValue(IntPeriod.OneYear); }
            set { SetPeriodValue(IntPeriod.OneYear, value); }
        }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the PretaxMargin class
        /// </summary>
        public PretaxMargin() { }

        /// <summary>
        /// Creates an instance of the PretaxMargin class
        /// </summary>
        public PretaxMargin(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Refers to the ratio of net income to revenue. Morningstar calculates the ratio by using the underlying data reported in the company
    /// filings or reports:   Net Income / Revenue.
    /// </summary>
    public class NetMargin : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.OneYear; } }

        /// <summary>
        /// Gets/sets the OneYear period value for the field
        /// </summary>
        [JsonProperty(Period.OneYear)]
        public decimal OneYear
        {
            get { return GetPeriodValue(IntPeriod.OneYear); }
            set { SetPeriodValue(IntPeriod.OneYear, value); }
        }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the NetMargin class
        /// </summary>
        public NetMargin() { }

        /// <summary>
        /// Creates an instance of the NetMargin class
        /// </summary>
        public NetMargin(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Refers to the ratio of tax provision to pretax income. Morningstar calculates the ratio by using the underlying data reported in the
    /// company filings or reports:   Tax Provision / Pretax Income.
    /// [Note: Valid only when positive pretax income, and positive tax expense (not tax benefit)]
    /// </summary>
    public class TaxRate : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.OneYear; } }

        /// <summary>
        /// Gets/sets the OneYear period value for the field
        /// </summary>
        [JsonProperty(Period.OneYear)]
        public decimal OneYear
        {
            get { return GetPeriodValue(IntPeriod.OneYear); }
            set { SetPeriodValue(IntPeriod.OneYear, value); }
        }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the TaxRate class
        /// </summary>
        public TaxRate() { }

        /// <summary>
        /// Creates an instance of the TaxRate class
        /// </summary>
        public TaxRate(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Refers to the ratio of earnings before interest and taxes to revenue. Morningstar calculates the ratio by using the underlying data
    /// reported in the company filings or reports:   EBIT / Revenue.
    /// </summary>
    public class EBITMargin : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.OneYear; } }

        /// <summary>
        /// Gets/sets the OneYear period value for the field
        /// </summary>
        [JsonProperty(Period.OneYear)]
        public decimal OneYear
        {
            get { return GetPeriodValue(IntPeriod.OneYear); }
            set { SetPeriodValue(IntPeriod.OneYear, value); }
        }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the EBITMargin class
        /// </summary>
        public EBITMargin() { }

        /// <summary>
        /// Creates an instance of the EBITMargin class
        /// </summary>
        public EBITMargin(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Refers to the ratio of earnings before interest, taxes and depreciation and amortization to revenue. Morningstar calculates the ratio
    /// by using the underlying data reported in the company filings or reports:   EBITDA / Revenue.
    /// </summary>
    public class EBITDAMargin : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.OneYear; } }

        /// <summary>
        /// Gets/sets the OneYear period value for the field
        /// </summary>
        [JsonProperty(Period.OneYear)]
        public decimal OneYear
        {
            get { return GetPeriodValue(IntPeriod.OneYear); }
            set { SetPeriodValue(IntPeriod.OneYear, value); }
        }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the EBITDAMargin class
        /// </summary>
        public EBITDAMargin() { }

        /// <summary>
        /// Creates an instance of the EBITDAMargin class
        /// </summary>
        public EBITDAMargin(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Refers to the ratio of Revenue to Employees. Morningstar calculates the ratio by using the underlying data reported in the company
    /// filings or reports:     Revenue / Employee Number.
    /// </summary>
    public class SalesPerEmployee : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.OneYear; } }

        /// <summary>
        /// Gets/sets the OneYear period value for the field
        /// </summary>
        [JsonProperty(Period.OneYear)]
        public decimal OneYear
        {
            get { return GetPeriodValue(IntPeriod.OneYear); }
            set { SetPeriodValue(IntPeriod.OneYear, value); }
        }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the SalesPerEmployee class
        /// </summary>
        public SalesPerEmployee() { }

        /// <summary>
        /// Creates an instance of the SalesPerEmployee class
        /// </summary>
        public SalesPerEmployee(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Refers to the ratio of Current Assets to Current Liabilities. Morningstar calculates the ratio by using the underlying data reported in
    /// the Balance Sheet within the company filings or reports:     Current Assets / Current Liabilities.
    /// </summary>
    public class CurrentRatio : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.OneYear; } }

        /// <summary>
        /// Gets/sets the OneYear period value for the field
        /// </summary>
        [JsonProperty(Period.OneYear)]
        public decimal OneYear
        {
            get { return GetPeriodValue(IntPeriod.OneYear); }
            set { SetPeriodValue(IntPeriod.OneYear, value); }
        }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the CurrentRatio class
        /// </summary>
        public CurrentRatio() { }

        /// <summary>
        /// Creates an instance of the CurrentRatio class
        /// </summary>
        public CurrentRatio(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Refers to the ratio of liquid assets to Current Liabilities. Morningstar calculates the ratio by using the underlying data reported in the
    /// Balance Sheet within the company filings or reports:(Cash, Cash Equivalents, and Short Term Investments + Receivables ) /
    /// Current Liabilities.
    /// </summary>
    public class QuickRatio : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.OneYear; } }

        /// <summary>
        /// Gets/sets the OneYear period value for the field
        /// </summary>
        [JsonProperty(Period.OneYear)]
        public decimal OneYear
        {
            get { return GetPeriodValue(IntPeriod.OneYear); }
            set { SetPeriodValue(IntPeriod.OneYear, value); }
        }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the QuickRatio class
        /// </summary>
        public QuickRatio() { }

        /// <summary>
        /// Creates an instance of the QuickRatio class
        /// </summary>
        public QuickRatio(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Refers to the ratio of Long Term Debt to Total Capital. Morningstar calculates the ratio by using the underlying data reported in the
    /// Balance Sheet within the company filings or reports:    Long-Term Debt And Capital Lease Obligation / (Long-Term Debt And Capital
    /// Lease Obligation + Total Shareholder's Equity)
    /// </summary>
    public class LongTermDebtTotalCapitalRatio : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.OneYear; } }

        /// <summary>
        /// Gets/sets the OneYear period value for the field
        /// </summary>
        [JsonProperty(Period.OneYear)]
        public decimal OneYear
        {
            get { return GetPeriodValue(IntPeriod.OneYear); }
            set { SetPeriodValue(IntPeriod.OneYear, value); }
        }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the LongTermDebtTotalCapitalRatio class
        /// </summary>
        public LongTermDebtTotalCapitalRatio() { }

        /// <summary>
        /// Creates an instance of the LongTermDebtTotalCapitalRatio class
        /// </summary>
        public LongTermDebtTotalCapitalRatio(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Refers to the ratio of EBIT to Interest Expense. Morningstar calculates the ratio by using the underlying data reported in the Income
    /// Statement within the company filings or reports:    EBIT / Interest Expense.
    /// </summary>
    public class InterestCoverage : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.OneYear; } }

        /// <summary>
        /// Gets/sets the OneYear period value for the field
        /// </summary>
        [JsonProperty(Period.OneYear)]
        public decimal OneYear
        {
            get { return GetPeriodValue(IntPeriod.OneYear); }
            set { SetPeriodValue(IntPeriod.OneYear, value); }
        }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the InterestCoverage class
        /// </summary>
        public InterestCoverage() { }

        /// <summary>
        /// Creates an instance of the InterestCoverage class
        /// </summary>
        public InterestCoverage(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Refers to the ratio of Long Term Debt to Common Equity. Morningstar calculates the ratio by using the underlying data reported in
    /// the Balance Sheet within the company filings or reports:    Long-Term Debt And Capital Lease Obligation / Common Equity.
    /// [Note: Common Equity = Total Shareholder's Equity - Preferred Stock]
    /// </summary>
    public class LongTermDebtEquityRatio : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.OneYear; } }

        /// <summary>
        /// Gets/sets the OneYear period value for the field
        /// </summary>
        [JsonProperty(Period.OneYear)]
        public decimal OneYear
        {
            get { return GetPeriodValue(IntPeriod.OneYear); }
            set { SetPeriodValue(IntPeriod.OneYear, value); }
        }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the LongTermDebtEquityRatio class
        /// </summary>
        public LongTermDebtEquityRatio() { }

        /// <summary>
        /// Creates an instance of the LongTermDebtEquityRatio class
        /// </summary>
        public LongTermDebtEquityRatio(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Refers to the ratio of Total Assets to Common Equity. Morningstar calculates the ratio by using the underlying data reported in the
    /// Balance Sheet within the company filings or reports:    Total Assets / Common Equity.   [Note: Common Equity = Total
    /// Shareholder's Equity - Preferred Stock]
    /// </summary>
    public class FinancialLeverage : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.OneYear; } }

        /// <summary>
        /// Gets/sets the OneYear period value for the field
        /// </summary>
        [JsonProperty(Period.OneYear)]
        public decimal OneYear
        {
            get { return GetPeriodValue(IntPeriod.OneYear); }
            set { SetPeriodValue(IntPeriod.OneYear, value); }
        }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the FinancialLeverage class
        /// </summary>
        public FinancialLeverage() { }

        /// <summary>
        /// Creates an instance of the FinancialLeverage class
        /// </summary>
        public FinancialLeverage(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Refers to the ratio of Total Debt to Common Equity. Morningstar calculates the ratio by using the underlying data reported in the
    /// Balance Sheet within the company filings or reports: (Current Debt And Current Capital Lease Obligation + Long-Term Debt And
    /// Long-Term Capital Lease Obligation / Common Equity.   [Note: Common Equity = Total Shareholder's Equity - Preferred Stock]
    /// </summary>
    public class TotalDebtEquityRatio : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.OneYear; } }

        /// <summary>
        /// Gets/sets the OneYear period value for the field
        /// </summary>
        [JsonProperty(Period.OneYear)]
        public decimal OneYear
        {
            get { return GetPeriodValue(IntPeriod.OneYear); }
            set { SetPeriodValue(IntPeriod.OneYear, value); }
        }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the TotalDebtEquityRatio class
        /// </summary>
        public TotalDebtEquityRatio() { }

        /// <summary>
        /// Creates an instance of the TotalDebtEquityRatio class
        /// </summary>
        public TotalDebtEquityRatio(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Normalized Income / Total Revenue. A measure of profitability of the company calculated by finding Normalized Net Profit as a
    /// percentage of Total Revenues.
    /// </summary>
    public class NormalizedNetProfitMargin : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.OneYear; } }

        /// <summary>
        /// Gets/sets the OneYear period value for the field
        /// </summary>
        [JsonProperty(Period.OneYear)]
        public decimal OneYear
        {
            get { return GetPeriodValue(IntPeriod.OneYear); }
            set { SetPeriodValue(IntPeriod.OneYear, value); }
        }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the NormalizedNetProfitMargin class
        /// </summary>
        public NormalizedNetProfitMargin() { }

        /// <summary>
        /// Creates an instance of the NormalizedNetProfitMargin class
        /// </summary>
        public NormalizedNetProfitMargin(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// 365 / Receivable Turnover
    /// </summary>
    public class DaysInSales : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.OneYear; } }

        /// <summary>
        /// Gets/sets the OneYear period value for the field
        /// </summary>
        [JsonProperty(Period.OneYear)]
        public decimal OneYear
        {
            get { return GetPeriodValue(IntPeriod.OneYear); }
            set { SetPeriodValue(IntPeriod.OneYear, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the DaysInSales class
        /// </summary>
        public DaysInSales() { }

        /// <summary>
        /// Creates an instance of the DaysInSales class
        /// </summary>
        public DaysInSales(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// 365 / Inventory turnover
    /// </summary>
    public class DaysInInventory : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.OneYear; } }

        /// <summary>
        /// Gets/sets the OneYear period value for the field
        /// </summary>
        [JsonProperty(Period.OneYear)]
        public decimal OneYear
        {
            get { return GetPeriodValue(IntPeriod.OneYear); }
            set { SetPeriodValue(IntPeriod.OneYear, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the DaysInInventory class
        /// </summary>
        public DaysInInventory() { }

        /// <summary>
        /// Creates an instance of the DaysInInventory class
        /// </summary>
        public DaysInInventory(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// 365 / Payable turnover
    /// </summary>
    public class DaysInPayment : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.OneYear; } }

        /// <summary>
        /// Gets/sets the OneYear period value for the field
        /// </summary>
        [JsonProperty(Period.OneYear)]
        public decimal OneYear
        {
            get { return GetPeriodValue(IntPeriod.OneYear); }
            set { SetPeriodValue(IntPeriod.OneYear, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the DaysInPayment class
        /// </summary>
        public DaysInPayment() { }

        /// <summary>
        /// Creates an instance of the DaysInPayment class
        /// </summary>
        public DaysInPayment(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Days In Inventory + Days In Sales - Days In Payment
    /// </summary>
    public class CashConversionCycle : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.OneYear; } }

        /// <summary>
        /// Gets/sets the OneYear period value for the field
        /// </summary>
        [JsonProperty(Period.OneYear)]
        public decimal OneYear
        {
            get { return GetPeriodValue(IntPeriod.OneYear); }
            set { SetPeriodValue(IntPeriod.OneYear, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the CashConversionCycle class
        /// </summary>
        public CashConversionCycle() { }

        /// <summary>
        /// Creates an instance of the CashConversionCycle class
        /// </summary>
        public CashConversionCycle(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Revenue / Average Accounts Receivables
    /// </summary>
    public class ReceivableTurnover : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.OneYear; } }

        /// <summary>
        /// Gets/sets the OneYear period value for the field
        /// </summary>
        [JsonProperty(Period.OneYear)]
        public decimal OneYear
        {
            get { return GetPeriodValue(IntPeriod.OneYear); }
            set { SetPeriodValue(IntPeriod.OneYear, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ReceivableTurnover class
        /// </summary>
        public ReceivableTurnover() { }

        /// <summary>
        /// Creates an instance of the ReceivableTurnover class
        /// </summary>
        public ReceivableTurnover(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Cost Of Goods Sold / Average Inventory
    /// </summary>
    public class InventoryTurnover : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.OneYear; } }

        /// <summary>
        /// Gets/sets the OneYear period value for the field
        /// </summary>
        [JsonProperty(Period.OneYear)]
        public decimal OneYear
        {
            get { return GetPeriodValue(IntPeriod.OneYear); }
            set { SetPeriodValue(IntPeriod.OneYear, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the InventoryTurnover class
        /// </summary>
        public InventoryTurnover() { }

        /// <summary>
        /// Creates an instance of the InventoryTurnover class
        /// </summary>
        public InventoryTurnover(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Cost of Goods Sold / Average Accounts Payables
    /// </summary>
    public class PaymentTurnover : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.OneYear; } }

        /// <summary>
        /// Gets/sets the OneYear period value for the field
        /// </summary>
        [JsonProperty(Period.OneYear)]
        public decimal OneYear
        {
            get { return GetPeriodValue(IntPeriod.OneYear); }
            set { SetPeriodValue(IntPeriod.OneYear, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the PaymentTurnover class
        /// </summary>
        public PaymentTurnover() { }

        /// <summary>
        /// Creates an instance of the PaymentTurnover class
        /// </summary>
        public PaymentTurnover(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Revenue / Average PP&amp;E
    /// </summary>
    public class FixAssetsTuronver : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.OneYear; } }

        /// <summary>
        /// Gets/sets the OneYear period value for the field
        /// </summary>
        [JsonProperty(Period.OneYear)]
        public decimal OneYear
        {
            get { return GetPeriodValue(IntPeriod.OneYear); }
            set { SetPeriodValue(IntPeriod.OneYear, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the FixAssetsTuronver class
        /// </summary>
        public FixAssetsTuronver() { }

        /// <summary>
        /// Creates an instance of the FixAssetsTuronver class
        /// </summary>
        public FixAssetsTuronver(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Revenue / Average Total Assets
    /// </summary>
    public class AssetsTurnover : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.OneYear; } }

        /// <summary>
        /// Gets/sets the OneYear period value for the field
        /// </summary>
        [JsonProperty(Period.OneYear)]
        public decimal OneYear
        {
            get { return GetPeriodValue(IntPeriod.OneYear); }
            set { SetPeriodValue(IntPeriod.OneYear, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the AssetsTurnover class
        /// </summary>
        public AssetsTurnover() { }

        /// <summary>
        /// Creates an instance of the AssetsTurnover class
        /// </summary>
        public AssetsTurnover(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Net Income / Average Total Common Equity
    /// </summary>
    public class ROE : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.OneYear; } }

        /// <summary>
        /// Gets/sets the OneYear period value for the field
        /// </summary>
        [JsonProperty(Period.OneYear)]
        public decimal OneYear
        {
            get { return GetPeriodValue(IntPeriod.OneYear); }
            set { SetPeriodValue(IntPeriod.OneYear, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ROE class
        /// </summary>
        public ROE() { }

        /// <summary>
        /// Creates an instance of the ROE class
        /// </summary>
        public ROE(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Net Income / Average Total Assets
    /// </summary>
    public class ROA : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.OneYear; } }

        /// <summary>
        /// Gets/sets the OneYear period value for the field
        /// </summary>
        [JsonProperty(Period.OneYear)]
        public decimal OneYear
        {
            get { return GetPeriodValue(IntPeriod.OneYear); }
            set { SetPeriodValue(IntPeriod.OneYear, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ROA class
        /// </summary>
        public ROA() { }

        /// <summary>
        /// Creates an instance of the ROA class
        /// </summary>
        public ROA(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Net Income / (Total Equity + Long-term Debt and Capital Lease Obligation + Short-term Debt and Capital Lease Obligation)
    /// </summary>
    public class ROIC : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.OneYear; } }

        /// <summary>
        /// Gets/sets the OneYear period value for the field
        /// </summary>
        [JsonProperty(Period.OneYear)]
        public decimal OneYear
        {
            get { return GetPeriodValue(IntPeriod.OneYear); }
            set { SetPeriodValue(IntPeriod.OneYear, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ROIC class
        /// </summary>
        public ROIC() { }

        /// <summary>
        /// Creates an instance of the ROIC class
        /// </summary>
        public ROIC(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Free Cash flow / Revenue
    /// </summary>
    public class FCFSalesRatio : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.OneYear; } }

        /// <summary>
        /// Gets/sets the OneYear period value for the field
        /// </summary>
        [JsonProperty(Period.OneYear)]
        public decimal OneYear
        {
            get { return GetPeriodValue(IntPeriod.OneYear); }
            set { SetPeriodValue(IntPeriod.OneYear, value); }
        }

        /// <summary>
        /// Creates an instance of the FCFSalesRatio class
        /// </summary>
        public FCFSalesRatio() { }

        /// <summary>
        /// Creates an instance of the FCFSalesRatio class
        /// </summary>
        public FCFSalesRatio(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Free Cash Flow / Net Income
    /// </summary>
    public class FCFNetIncomeRatio : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.OneYear; } }

        /// <summary>
        /// Gets/sets the OneYear period value for the field
        /// </summary>
        [JsonProperty(Period.OneYear)]
        public decimal OneYear
        {
            get { return GetPeriodValue(IntPeriod.OneYear); }
            set { SetPeriodValue(IntPeriod.OneYear, value); }
        }

        /// <summary>
        /// Creates an instance of the FCFNetIncomeRatio class
        /// </summary>
        public FCFNetIncomeRatio() { }

        /// <summary>
        /// Creates an instance of the FCFNetIncomeRatio class
        /// </summary>
        public FCFNetIncomeRatio(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Capital Expenditure / Revenue
    /// </summary>
    public class CapExSalesRatio : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.OneYear; } }

        /// <summary>
        /// Gets/sets the OneYear period value for the field
        /// </summary>
        [JsonProperty(Period.OneYear)]
        public decimal OneYear
        {
            get { return GetPeriodValue(IntPeriod.OneYear); }
            set { SetPeriodValue(IntPeriod.OneYear, value); }
        }

        /// <summary>
        /// Creates an instance of the CapExSalesRatio class
        /// </summary>
        public CapExSalesRatio() { }

        /// <summary>
        /// Creates an instance of the CapExSalesRatio class
        /// </summary>
        public CapExSalesRatio(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// This is a leverage ratio used to determine how much debt (a sum of long term and current portion of debt) a company has on its
    /// balance sheet relative to total assets. This ratio examines the percent of the company that is financed by debt.
    /// </summary>
    public class DebttoAssets : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.OneYear; } }

        /// <summary>
        /// Gets/sets the OneYear period value for the field
        /// </summary>
        [JsonProperty(Period.OneYear)]
        public decimal OneYear
        {
            get { return GetPeriodValue(IntPeriod.OneYear); }
            set { SetPeriodValue(IntPeriod.OneYear, value); }
        }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the DebttoAssets class
        /// </summary>
        public DebttoAssets() { }

        /// <summary>
        /// Creates an instance of the DebttoAssets class
        /// </summary>
        public DebttoAssets(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// This is a financial ratio of common stock equity to total assets that indicates the relative proportion of equity used to finance a
    /// company's assets.
    /// </summary>
    public class CommonEquityToAssets : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.OneYear; } }

        /// <summary>
        /// Gets/sets the OneYear period value for the field
        /// </summary>
        [JsonProperty(Period.OneYear)]
        public decimal OneYear
        {
            get { return GetPeriodValue(IntPeriod.OneYear); }
            set { SetPeriodValue(IntPeriod.OneYear, value); }
        }

        /// <summary>
        /// Gets/sets the OneMonth period value for the field
        /// </summary>
        [JsonProperty(Period.OneMonth)]
        public decimal OneMonth
        {
            get { return GetPeriodValue(IntPeriod.OneMonth); }
            set { SetPeriodValue(IntPeriod.OneMonth, value); }
        }

        /// <summary>
        /// Gets/sets the TwoMonths period value for the field
        /// </summary>
        [JsonProperty(Period.TwoMonths)]
        public decimal TwoMonths
        {
            get { return GetPeriodValue(IntPeriod.TwoMonths); }
            set { SetPeriodValue(IntPeriod.TwoMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Gets/sets the NineMonths period value for the field
        /// </summary>
        [JsonProperty(Period.NineMonths)]
        public decimal NineMonths
        {
            get { return GetPeriodValue(IntPeriod.NineMonths); }
            set { SetPeriodValue(IntPeriod.NineMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the CommonEquityToAssets class
        /// </summary>
        public CommonEquityToAssets() { }

        /// <summary>
        /// Creates an instance of the CommonEquityToAssets class
        /// </summary>
        public CommonEquityToAssets(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// This is the compound annual growth rate of the company's capital spending over the last 5 years. Capital Spending is the sum of
    /// the Capital Expenditure items found in the Statement of Cash Flows.
    /// </summary>
    public class CapitalExpenditureAnnual5YrGrowth : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.OneYear; } }

        /// <summary>
        /// Gets/sets the OneYear period value for the field
        /// </summary>
        [JsonProperty(Period.OneYear)]
        public decimal OneYear
        {
            get { return GetPeriodValue(IntPeriod.OneYear); }
            set { SetPeriodValue(IntPeriod.OneYear, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeYears period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeYears)]
        public decimal ThreeYears
        {
            get { return GetPeriodValue(IntPeriod.ThreeYears); }
            set { SetPeriodValue(IntPeriod.ThreeYears, value); }
        }

        /// <summary>
        /// Gets/sets the FiveYears period value for the field
        /// </summary>
        [JsonProperty(Period.FiveYears)]
        public decimal FiveYears
        {
            get { return GetPeriodValue(IntPeriod.FiveYears); }
            set { SetPeriodValue(IntPeriod.FiveYears, value); }
        }

        /// <summary>
        /// Creates an instance of the CapitalExpenditureAnnual5YrGrowth class
        /// </summary>
        public CapitalExpenditureAnnual5YrGrowth() { }

        /// <summary>
        /// Creates an instance of the CapitalExpenditureAnnual5YrGrowth class
        /// </summary>
        public CapitalExpenditureAnnual5YrGrowth(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// This is the compound annual growth rate of the company's Gross Profit over the last 5 years.
    /// </summary>
    public class GrossProfitAnnual5YrGrowth : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.OneYear; } }

        /// <summary>
        /// Gets/sets the OneYear period value for the field
        /// </summary>
        [JsonProperty(Period.OneYear)]
        public decimal OneYear
        {
            get { return GetPeriodValue(IntPeriod.OneYear); }
            set { SetPeriodValue(IntPeriod.OneYear, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeYears period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeYears)]
        public decimal ThreeYears
        {
            get { return GetPeriodValue(IntPeriod.ThreeYears); }
            set { SetPeriodValue(IntPeriod.ThreeYears, value); }
        }

        /// <summary>
        /// Gets/sets the FiveYears period value for the field
        /// </summary>
        [JsonProperty(Period.FiveYears)]
        public decimal FiveYears
        {
            get { return GetPeriodValue(IntPeriod.FiveYears); }
            set { SetPeriodValue(IntPeriod.FiveYears, value); }
        }

        /// <summary>
        /// Creates an instance of the GrossProfitAnnual5YrGrowth class
        /// </summary>
        public GrossProfitAnnual5YrGrowth() { }

        /// <summary>
        /// Creates an instance of the GrossProfitAnnual5YrGrowth class
        /// </summary>
        public GrossProfitAnnual5YrGrowth(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// This is the simple average of the company's Annual Gross Margin over the last 5 years. Gross Margin is Total Revenue minus Cost
    /// of Goods Sold divided by Total Revenue and is expressed as a percentage.
    /// </summary>
    public class GrossMargin5YrAvg : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.FiveYears; } }

        /// <summary>
        /// Gets/sets the FiveYears period value for the field
        /// </summary>
        [JsonProperty(Period.FiveYears)]
        public decimal FiveYears
        {
            get { return GetPeriodValue(IntPeriod.FiveYears); }
            set { SetPeriodValue(IntPeriod.FiveYears, value); }
        }

        /// <summary>
        /// Creates an instance of the GrossMargin5YrAvg class
        /// </summary>
        public GrossMargin5YrAvg() { }

        /// <summary>
        /// Creates an instance of the GrossMargin5YrAvg class
        /// </summary>
        public GrossMargin5YrAvg(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// This is the simple average of the company's Annual Post Tax Margin over the last 5 years. Post tax margin is Post tax divided by
    /// total revenue for the same Intperiod.
    /// </summary>
    public class PostTaxMargin5YrAvg : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.FiveYears; } }

        /// <summary>
        /// Gets/sets the FiveYears period value for the field
        /// </summary>
        [JsonProperty(Period.FiveYears)]
        public decimal FiveYears
        {
            get { return GetPeriodValue(IntPeriod.FiveYears); }
            set { SetPeriodValue(IntPeriod.FiveYears, value); }
        }

        /// <summary>
        /// Creates an instance of the PostTaxMargin5YrAvg class
        /// </summary>
        public PostTaxMargin5YrAvg() { }

        /// <summary>
        /// Creates an instance of the PostTaxMargin5YrAvg class
        /// </summary>
        public PostTaxMargin5YrAvg(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// This is the simple average of the company's Annual Pre Tax Margin over the last 5 years. Pre tax margin is Pre tax divided by total
    /// revenue for the same Intperiod.
    /// </summary>
    public class PreTaxMargin5YrAvg : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.FiveYears; } }

        /// <summary>
        /// Gets/sets the FiveYears period value for the field
        /// </summary>
        [JsonProperty(Period.FiveYears)]
        public decimal FiveYears
        {
            get { return GetPeriodValue(IntPeriod.FiveYears); }
            set { SetPeriodValue(IntPeriod.FiveYears, value); }
        }

        /// <summary>
        /// Creates an instance of the PreTaxMargin5YrAvg class
        /// </summary>
        public PreTaxMargin5YrAvg() { }

        /// <summary>
        /// Creates an instance of the PreTaxMargin5YrAvg class
        /// </summary>
        public PreTaxMargin5YrAvg(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// This is the simple average of the company's Annual Net Profit Margin over the last 5 years. Net profit margin is post tax income
    /// divided by total revenue for the same Intperiod.
    /// </summary>
    public class ProfitMargin5YrAvg : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.FiveYears; } }

        /// <summary>
        /// Gets/sets the FiveYears period value for the field
        /// </summary>
        [JsonProperty(Period.FiveYears)]
        public decimal FiveYears
        {
            get { return GetPeriodValue(IntPeriod.FiveYears); }
            set { SetPeriodValue(IntPeriod.FiveYears, value); }
        }

        /// <summary>
        /// Creates an instance of the ProfitMargin5YrAvg class
        /// </summary>
        public ProfitMargin5YrAvg() { }

        /// <summary>
        /// Creates an instance of the ProfitMargin5YrAvg class
        /// </summary>
        public ProfitMargin5YrAvg(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// This is the simple average of the company's ROE over the last 5 years. Return on equity reveals how much profit a company has
    /// earned in comparison to the total amount of shareholder equity found on the balance sheet.
    /// </summary>
    public class ROE5YrAvg : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.FiveYears; } }

        /// <summary>
        /// Gets/sets the FiveYears period value for the field
        /// </summary>
        [JsonProperty(Period.FiveYears)]
        public decimal FiveYears
        {
            get { return GetPeriodValue(IntPeriod.FiveYears); }
            set { SetPeriodValue(IntPeriod.FiveYears, value); }
        }

        /// <summary>
        /// Creates an instance of the ROE5YrAvg class
        /// </summary>
        public ROE5YrAvg() { }

        /// <summary>
        /// Creates an instance of the ROE5YrAvg class
        /// </summary>
        public ROE5YrAvg(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// This is the simple average of the company's ROA over the last 5 years. Return on asset is calculated by dividing a company's annual
    /// earnings by its average total assets.
    /// </summary>
    public class ROA5YrAvg : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.FiveYears; } }

        /// <summary>
        /// Gets/sets the FiveYears period value for the field
        /// </summary>
        [JsonProperty(Period.FiveYears)]
        public decimal FiveYears
        {
            get { return GetPeriodValue(IntPeriod.FiveYears); }
            set { SetPeriodValue(IntPeriod.FiveYears, value); }
        }

        /// <summary>
        /// Creates an instance of the ROA5YrAvg class
        /// </summary>
        public ROA5YrAvg() { }

        /// <summary>
        /// Creates an instance of the ROA5YrAvg class
        /// </summary>
        public ROA5YrAvg(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// This is the simple average of the company's ROIC over the last 5 years. Return on invested capital is calculated by taking net
    /// operating profit after taxes and dividends and dividing by the total amount of capital invested and expressing the result as a
    /// percentage.
    /// </summary>
    public class AVG5YrsROIC : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.FiveYears; } }

        /// <summary>
        /// Gets/sets the FiveYears period value for the field
        /// </summary>
        [JsonProperty(Period.FiveYears)]
        public decimal FiveYears
        {
            get { return GetPeriodValue(IntPeriod.FiveYears); }
            set { SetPeriodValue(IntPeriod.FiveYears, value); }
        }

        /// <summary>
        /// Creates an instance of the AVG5YrsROIC class
        /// </summary>
        public AVG5YrsROIC() { }

        /// <summary>
        /// Creates an instance of the AVG5YrsROIC class
        /// </summary>
        public AVG5YrsROIC(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// [Normalized Income + (Interest Expense * (1-Tax Rate))]  / Invested Capital
    /// </summary>
    public class NormalizedROIC : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.OneYear; } }

        /// <summary>
        /// Gets/sets the OneYear period value for the field
        /// </summary>
        [JsonProperty(Period.OneYear)]
        public decimal OneYear
        {
            get { return GetPeriodValue(IntPeriod.OneYear); }
            set { SetPeriodValue(IntPeriod.OneYear, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the SixMonths period value for the field
        /// </summary>
        [JsonProperty(Period.SixMonths)]
        public decimal SixMonths
        {
            get { return GetPeriodValue(IntPeriod.SixMonths); }
            set { SetPeriodValue(IntPeriod.SixMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the NormalizedROIC class
        /// </summary>
        public NormalizedROIC() { }

        /// <summary>
        /// Creates an instance of the NormalizedROIC class
        /// </summary>
        public NormalizedROIC(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The five-year growth rate of operating revenue, calculated using regression analysis.
    /// </summary>
    public class RegressionGrowthOperatingRevenue5Years : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.FiveYears; } }

        /// <summary>
        /// Gets/sets the FiveYears period value for the field
        /// </summary>
        [JsonProperty(Period.FiveYears)]
        public decimal FiveYears
        {
            get { return GetPeriodValue(IntPeriod.FiveYears); }
            set { SetPeriodValue(IntPeriod.FiveYears, value); }
        }

        /// <summary>
        /// Creates an instance of the RegressionGrowthOperatingRevenue5Years class
        /// </summary>
        public RegressionGrowthOperatingRevenue5Years() { }

        /// <summary>
        /// Creates an instance of the RegressionGrowthOperatingRevenue5Years class
        /// </summary>
        public RegressionGrowthOperatingRevenue5Years(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Indicates a company's short-term liquidity, defined as short term liquid investments (cash, cash equivalents, short term
    /// investments) divided by current liabilities.
    /// </summary>
    public class CashRatio : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.OneYear; } }

        /// <summary>
        /// Gets/sets the OneYear period value for the field
        /// </summary>
        [JsonProperty(Period.OneYear)]
        public decimal OneYear
        {
            get { return GetPeriodValue(IntPeriod.OneYear); }
            set { SetPeriodValue(IntPeriod.OneYear, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the CashRatio class
        /// </summary>
        public CashRatio() { }

        /// <summary>
        /// Creates an instance of the CashRatio class
        /// </summary>
        public CashRatio(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Represents the percentage of a company's total assets is in cash.
    /// </summary>
    public class CashtoTotalAssets : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.OneYear; } }

        /// <summary>
        /// Gets/sets the OneYear period value for the field
        /// </summary>
        [JsonProperty(Period.OneYear)]
        public decimal OneYear
        {
            get { return GetPeriodValue(IntPeriod.OneYear); }
            set { SetPeriodValue(IntPeriod.OneYear, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the CashtoTotalAssets class
        /// </summary>
        public CashtoTotalAssets() { }

        /// <summary>
        /// Creates an instance of the CashtoTotalAssets class
        /// </summary>
        public CashtoTotalAssets(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Measures the amount a company is investing in its business relative to EBITDA generated in a given Intperiod.
    /// </summary>
    public class CapitalExpendituretoEBITDA : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.OneYear; } }

        /// <summary>
        /// Gets/sets the OneYear period value for the field
        /// </summary>
        [JsonProperty(Period.OneYear)]
        public decimal OneYear
        {
            get { return GetPeriodValue(IntPeriod.OneYear); }
            set { SetPeriodValue(IntPeriod.OneYear, value); }
        }

        /// <summary>
        /// Creates an instance of the CapitalExpendituretoEBITDA class
        /// </summary>
        public CapitalExpendituretoEBITDA() { }

        /// <summary>
        /// Creates an instance of the CapitalExpendituretoEBITDA class
        /// </summary>
        public CapitalExpendituretoEBITDA(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Indicates the percentage of a company's operating cash flow is free to be invested in its business after capital expenditures.
    /// </summary>
    public class FCFtoCFO : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.OneYear; } }

        /// <summary>
        /// Gets/sets the OneYear period value for the field
        /// </summary>
        [JsonProperty(Period.OneYear)]
        public decimal OneYear
        {
            get { return GetPeriodValue(IntPeriod.OneYear); }
            set { SetPeriodValue(IntPeriod.OneYear, value); }
        }

        /// <summary>
        /// Creates an instance of the FCFtoCFO class
        /// </summary>
        public FCFtoCFO() { }

        /// <summary>
        /// Creates an instance of the FCFtoCFO class
        /// </summary>
        public FCFtoCFO(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The growth in the stockholder's equity on a percentage basis. Morningstar calculates the growth percentage based on the residual
    /// interest in the assets of the enterprise that remains after deducting its liabilities reported in the Balance Sheet within the company
    /// filings or reports.
    /// </summary>
    public class StockholdersEquityGrowth : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.OneYear; } }

        /// <summary>
        /// Gets/sets the OneYear period value for the field
        /// </summary>
        [JsonProperty(Period.OneYear)]
        public decimal OneYear
        {
            get { return GetPeriodValue(IntPeriod.OneYear); }
            set { SetPeriodValue(IntPeriod.OneYear, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeYears period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeYears)]
        public decimal ThreeYears
        {
            get { return GetPeriodValue(IntPeriod.ThreeYears); }
            set { SetPeriodValue(IntPeriod.ThreeYears, value); }
        }

        /// <summary>
        /// Gets/sets the FiveYears period value for the field
        /// </summary>
        [JsonProperty(Period.FiveYears)]
        public decimal FiveYears
        {
            get { return GetPeriodValue(IntPeriod.FiveYears); }
            set { SetPeriodValue(IntPeriod.FiveYears, value); }
        }

        /// <summary>
        /// Creates an instance of the StockholdersEquityGrowth class
        /// </summary>
        public StockholdersEquityGrowth() { }

        /// <summary>
        /// Creates an instance of the StockholdersEquityGrowth class
        /// </summary>
        public StockholdersEquityGrowth(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The growth in the total assets on a percentage basis. Morningstar calculates the growth percentage based on the total assets
    /// reported in the Balance Sheet within the company filings or reports.
    /// </summary>
    public class TotalAssetsGrowth : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.OneYear; } }

        /// <summary>
        /// Gets/sets the OneYear period value for the field
        /// </summary>
        [JsonProperty(Period.OneYear)]
        public decimal OneYear
        {
            get { return GetPeriodValue(IntPeriod.OneYear); }
            set { SetPeriodValue(IntPeriod.OneYear, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeYears period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeYears)]
        public decimal ThreeYears
        {
            get { return GetPeriodValue(IntPeriod.ThreeYears); }
            set { SetPeriodValue(IntPeriod.ThreeYears, value); }
        }

        /// <summary>
        /// Gets/sets the FiveYears period value for the field
        /// </summary>
        [JsonProperty(Period.FiveYears)]
        public decimal FiveYears
        {
            get { return GetPeriodValue(IntPeriod.FiveYears); }
            set { SetPeriodValue(IntPeriod.FiveYears, value); }
        }

        /// <summary>
        /// Creates an instance of the TotalAssetsGrowth class
        /// </summary>
        public TotalAssetsGrowth() { }

        /// <summary>
        /// Creates an instance of the TotalAssetsGrowth class
        /// </summary>
        public TotalAssetsGrowth(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The growth in the total liabilities on a percentage basis. Morningstar calculates the growth percentage based on the total liabilities
    /// reported in the Balance Sheet within the company filings or reports.
    /// </summary>
    public class TotalLiabilitiesGrowth : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.OneYear; } }

        /// <summary>
        /// Gets/sets the OneYear period value for the field
        /// </summary>
        [JsonProperty(Period.OneYear)]
        public decimal OneYear
        {
            get { return GetPeriodValue(IntPeriod.OneYear); }
            set { SetPeriodValue(IntPeriod.OneYear, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeYears period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeYears)]
        public decimal ThreeYears
        {
            get { return GetPeriodValue(IntPeriod.ThreeYears); }
            set { SetPeriodValue(IntPeriod.ThreeYears, value); }
        }

        /// <summary>
        /// Gets/sets the FiveYears period value for the field
        /// </summary>
        [JsonProperty(Period.FiveYears)]
        public decimal FiveYears
        {
            get { return GetPeriodValue(IntPeriod.FiveYears); }
            set { SetPeriodValue(IntPeriod.FiveYears, value); }
        }

        /// <summary>
        /// Creates an instance of the TotalLiabilitiesGrowth class
        /// </summary>
        public TotalLiabilitiesGrowth() { }

        /// <summary>
        /// Creates an instance of the TotalLiabilitiesGrowth class
        /// </summary>
        public TotalLiabilitiesGrowth(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The growth in the company's total debt to equity ratio on a percentage basis. Morningstar calculates the growth percentage based
    /// on the total debt divided by the shareholder's equity reported in the Balance Sheet within the company filings or reports.
    /// </summary>
    public class TotalDebtEquityRatioGrowth : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.OneYear; } }

        /// <summary>
        /// Gets/sets the OneYear period value for the field
        /// </summary>
        [JsonProperty(Period.OneYear)]
        public decimal OneYear
        {
            get { return GetPeriodValue(IntPeriod.OneYear); }
            set { SetPeriodValue(IntPeriod.OneYear, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeYears period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeYears)]
        public decimal ThreeYears
        {
            get { return GetPeriodValue(IntPeriod.ThreeYears); }
            set { SetPeriodValue(IntPeriod.ThreeYears, value); }
        }

        /// <summary>
        /// Gets/sets the FiveYears period value for the field
        /// </summary>
        [JsonProperty(Period.FiveYears)]
        public decimal FiveYears
        {
            get { return GetPeriodValue(IntPeriod.FiveYears); }
            set { SetPeriodValue(IntPeriod.FiveYears, value); }
        }

        /// <summary>
        /// Creates an instance of the TotalDebtEquityRatioGrowth class
        /// </summary>
        public TotalDebtEquityRatioGrowth() { }

        /// <summary>
        /// Creates an instance of the TotalDebtEquityRatioGrowth class
        /// </summary>
        public TotalDebtEquityRatioGrowth(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The growth in the company's cash ratio on a percentage basis. Morningstar calculates the growth percentage based on the short
    /// term liquid investments (cash, cash equivalents, short term investments) divided by current liabilities reported in the Balance Sheet
    /// within the company filings or reports.
    /// </summary>
    public class CashRatioGrowth : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.OneYear; } }

        /// <summary>
        /// Gets/sets the OneYear period value for the field
        /// </summary>
        [JsonProperty(Period.OneYear)]
        public decimal OneYear
        {
            get { return GetPeriodValue(IntPeriod.OneYear); }
            set { SetPeriodValue(IntPeriod.OneYear, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeYears period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeYears)]
        public decimal ThreeYears
        {
            get { return GetPeriodValue(IntPeriod.ThreeYears); }
            set { SetPeriodValue(IntPeriod.ThreeYears, value); }
        }

        /// <summary>
        /// Gets/sets the FiveYears period value for the field
        /// </summary>
        [JsonProperty(Period.FiveYears)]
        public decimal FiveYears
        {
            get { return GetPeriodValue(IntPeriod.FiveYears); }
            set { SetPeriodValue(IntPeriod.FiveYears, value); }
        }

        /// <summary>
        /// Creates an instance of the CashRatioGrowth class
        /// </summary>
        public CashRatioGrowth() { }

        /// <summary>
        /// Creates an instance of the CashRatioGrowth class
        /// </summary>
        public CashRatioGrowth(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The growth in the company's EBITDA on a percentage basis. Morningstar calculates the growth percentage based on the earnings
    /// minus expenses (excluding interest, tax, depreciation, and amortization expenses) reported in the Financial Statements within the
    /// company filings or reports.
    /// </summary>
    public class EBITDAGrowth : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.OneYear; } }

        /// <summary>
        /// Gets/sets the OneYear period value for the field
        /// </summary>
        [JsonProperty(Period.OneYear)]
        public decimal OneYear
        {
            get { return GetPeriodValue(IntPeriod.OneYear); }
            set { SetPeriodValue(IntPeriod.OneYear, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeYears period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeYears)]
        public decimal ThreeYears
        {
            get { return GetPeriodValue(IntPeriod.ThreeYears); }
            set { SetPeriodValue(IntPeriod.ThreeYears, value); }
        }

        /// <summary>
        /// Gets/sets the FiveYears period value for the field
        /// </summary>
        [JsonProperty(Period.FiveYears)]
        public decimal FiveYears
        {
            get { return GetPeriodValue(IntPeriod.FiveYears); }
            set { SetPeriodValue(IntPeriod.FiveYears, value); }
        }

        /// <summary>
        /// Creates an instance of the EBITDAGrowth class
        /// </summary>
        public EBITDAGrowth() { }

        /// <summary>
        /// Creates an instance of the EBITDAGrowth class
        /// </summary>
        public EBITDAGrowth(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The growth in the company's cash flows from financing on a percentage basis. Morningstar calculates the growth percentage
    /// based on the financing cash flows reported in the Cash Flow Statement within the company filings or reports.
    /// </summary>
    public class CashFlowfromFinancingGrowth : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.OneYear; } }

        /// <summary>
        /// Gets/sets the OneYear period value for the field
        /// </summary>
        [JsonProperty(Period.OneYear)]
        public decimal OneYear
        {
            get { return GetPeriodValue(IntPeriod.OneYear); }
            set { SetPeriodValue(IntPeriod.OneYear, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeYears period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeYears)]
        public decimal ThreeYears
        {
            get { return GetPeriodValue(IntPeriod.ThreeYears); }
            set { SetPeriodValue(IntPeriod.ThreeYears, value); }
        }

        /// <summary>
        /// Gets/sets the FiveYears period value for the field
        /// </summary>
        [JsonProperty(Period.FiveYears)]
        public decimal FiveYears
        {
            get { return GetPeriodValue(IntPeriod.FiveYears); }
            set { SetPeriodValue(IntPeriod.FiveYears, value); }
        }

        /// <summary>
        /// Creates an instance of the CashFlowfromFinancingGrowth class
        /// </summary>
        public CashFlowfromFinancingGrowth() { }

        /// <summary>
        /// Creates an instance of the CashFlowfromFinancingGrowth class
        /// </summary>
        public CashFlowfromFinancingGrowth(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The growth in the company's cash flows from investing on a percentage basis. Morningstar calculates the growth percentage
    /// based on the cash flows from investing reported in the Cash Flow Statement within the company filings or reports.
    /// </summary>
    public class CashFlowfromInvestingGrowth : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.OneYear; } }

        /// <summary>
        /// Gets/sets the OneYear period value for the field
        /// </summary>
        [JsonProperty(Period.OneYear)]
        public decimal OneYear
        {
            get { return GetPeriodValue(IntPeriod.OneYear); }
            set { SetPeriodValue(IntPeriod.OneYear, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeYears period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeYears)]
        public decimal ThreeYears
        {
            get { return GetPeriodValue(IntPeriod.ThreeYears); }
            set { SetPeriodValue(IntPeriod.ThreeYears, value); }
        }

        /// <summary>
        /// Gets/sets the FiveYears period value for the field
        /// </summary>
        [JsonProperty(Period.FiveYears)]
        public decimal FiveYears
        {
            get { return GetPeriodValue(IntPeriod.FiveYears); }
            set { SetPeriodValue(IntPeriod.FiveYears, value); }
        }

        /// <summary>
        /// Creates an instance of the CashFlowfromInvestingGrowth class
        /// </summary>
        public CashFlowfromInvestingGrowth() { }

        /// <summary>
        /// Creates an instance of the CashFlowfromInvestingGrowth class
        /// </summary>
        public CashFlowfromInvestingGrowth(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The growth in the company's capital expenditures on a percentage basis. Morningstar calculates the growth percentage based on
    /// the capital expenditures reported in the Cash Flow Statement within the company filings or reports.
    /// </summary>
    public class CapExGrowth : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.OneYear; } }

        /// <summary>
        /// Gets/sets the OneYear period value for the field
        /// </summary>
        [JsonProperty(Period.OneYear)]
        public decimal OneYear
        {
            get { return GetPeriodValue(IntPeriod.OneYear); }
            set { SetPeriodValue(IntPeriod.OneYear, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeYears period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeYears)]
        public decimal ThreeYears
        {
            get { return GetPeriodValue(IntPeriod.ThreeYears); }
            set { SetPeriodValue(IntPeriod.ThreeYears, value); }
        }

        /// <summary>
        /// Gets/sets the FiveYears period value for the field
        /// </summary>
        [JsonProperty(Period.FiveYears)]
        public decimal FiveYears
        {
            get { return GetPeriodValue(IntPeriod.FiveYears); }
            set { SetPeriodValue(IntPeriod.FiveYears, value); }
        }

        /// <summary>
        /// Creates an instance of the CapExGrowth class
        /// </summary>
        public CapExGrowth() { }

        /// <summary>
        /// Creates an instance of the CapExGrowth class
        /// </summary>
        public CapExGrowth(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The growth in the company's current ratio on a percentage basis. Morningstar calculates the growth percentage based on the
    /// current assets divided by current liabilities reported in the Balance Sheet within the company filings or reports.
    /// </summary>
    public class CurrentRatioGrowth : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.OneYear; } }

        /// <summary>
        /// Gets/sets the OneYear period value for the field
        /// </summary>
        [JsonProperty(Period.OneYear)]
        public decimal OneYear
        {
            get { return GetPeriodValue(IntPeriod.OneYear); }
            set { SetPeriodValue(IntPeriod.OneYear, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeYears period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeYears)]
        public decimal ThreeYears
        {
            get { return GetPeriodValue(IntPeriod.ThreeYears); }
            set { SetPeriodValue(IntPeriod.ThreeYears, value); }
        }

        /// <summary>
        /// Gets/sets the FiveYears period value for the field
        /// </summary>
        [JsonProperty(Period.FiveYears)]
        public decimal FiveYears
        {
            get { return GetPeriodValue(IntPeriod.FiveYears); }
            set { SetPeriodValue(IntPeriod.FiveYears, value); }
        }

        /// <summary>
        /// Creates an instance of the CurrentRatioGrowth class
        /// </summary>
        public CurrentRatioGrowth() { }

        /// <summary>
        /// Creates an instance of the CurrentRatioGrowth class
        /// </summary>
        public CurrentRatioGrowth(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Total revenue / working capital (current assets minus current liabilities)
    /// </summary>
    public class WorkingCapitalTurnoverRatio : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.OneYear; } }

        /// <summary>
        /// Gets/sets the OneYear period value for the field
        /// </summary>
        [JsonProperty(Period.OneYear)]
        public decimal OneYear
        {
            get { return GetPeriodValue(IntPeriod.OneYear); }
            set { SetPeriodValue(IntPeriod.OneYear, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the WorkingCapitalTurnoverRatio class
        /// </summary>
        public WorkingCapitalTurnoverRatio() { }

        /// <summary>
        /// Creates an instance of the WorkingCapitalTurnoverRatio class
        /// </summary>
        public WorkingCapitalTurnoverRatio(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Refers to the ratio of Net Income to Employees. Morningstar calculates the ratio by using the underlying data reported in the
    /// company filings or reports:     Net Income / Employee Number.
    /// </summary>
    public class NetIncomePerEmployee : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.OneYear; } }

        /// <summary>
        /// Gets/sets the OneYear period value for the field
        /// </summary>
        [JsonProperty(Period.OneYear)]
        public decimal OneYear
        {
            get { return GetPeriodValue(IntPeriod.OneYear); }
            set { SetPeriodValue(IntPeriod.OneYear, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the NetIncomePerEmployee class
        /// </summary>
        public NetIncomePerEmployee() { }

        /// <summary>
        /// Creates an instance of the NetIncomePerEmployee class
        /// </summary>
        public NetIncomePerEmployee(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// Measure of whether a company's cash flow is sufficient to meet its short-term and long-term debt requirements. The lower this
    /// ratio is, the greater the probability that the company will be in financial distress. Net Income + Depreciation, Depletion and
    /// Amortization/ average of annual Total Liabilities over the most recent two periods.
    /// </summary>
    public class SolvencyRatio : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.OneYear; } }

        /// <summary>
        /// Gets/sets the OneYear period value for the field
        /// </summary>
        [JsonProperty(Period.OneYear)]
        public decimal OneYear
        {
            get { return GetPeriodValue(IntPeriod.OneYear); }
            set { SetPeriodValue(IntPeriod.OneYear, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the SolvencyRatio class
        /// </summary>
        public SolvencyRatio() { }

        /// <summary>
        /// Creates an instance of the SolvencyRatio class
        /// </summary>
        public SolvencyRatio(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// A measure of operating performance for Insurance companies, as it shows the relationship between the premiums earned and
    /// administrative expenses related to claims such as fees and commissions. A number of 1 or lower is preferred, as this means the
    /// premiums exceed the expenses. Calculated as: (Deferred Policy Acquisition Amortization Expense+Fees and Commission
    /// Expense+Other Underwriting Expenses+Selling, General and Administrative) / Net Premiums Earned
    /// </summary>
    public class ExpenseRatio : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.OneYear; } }

        /// <summary>
        /// Gets/sets the OneYear period value for the field
        /// </summary>
        [JsonProperty(Period.OneYear)]
        public decimal OneYear
        {
            get { return GetPeriodValue(IntPeriod.OneYear); }
            set { SetPeriodValue(IntPeriod.OneYear, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the ExpenseRatio class
        /// </summary>
        public ExpenseRatio() { }

        /// <summary>
        /// Creates an instance of the ExpenseRatio class
        /// </summary>
        public ExpenseRatio(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// A measure of operating performance for Insurance companies, as it shows the relationship between the premiums earned and the
    /// expenses related to claims. A number of 1 or lower is preferred, as this means the premiums exceed the expenses. Calculated as:
    /// Benefits, Claims and Loss Adjustment Expense, Net / Net Premiums Earned
    /// </summary>
    public class LossRatio : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.OneYear; } }

        /// <summary>
        /// Gets/sets the OneYear period value for the field
        /// </summary>
        [JsonProperty(Period.OneYear)]
        public decimal OneYear
        {
            get { return GetPeriodValue(IntPeriod.OneYear); }
            set { SetPeriodValue(IntPeriod.OneYear, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Creates an instance of the LossRatio class
        /// </summary>
        public LossRatio() { }

        /// <summary>
        /// Creates an instance of the LossRatio class
        /// </summary>
        public LossRatio(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The growth in the company's diluted earnings per share (EPS) on a percentage basis. Morningstar calculates the annualized growth
    /// percentage based on the underlying diluted EPS reported in the Income Statement within the company filings or reports.
    /// </summary>
    public class DilutedEPSGrowth : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.OneYear; } }

        /// <summary>
        /// Gets/sets the OneYear period value for the field
        /// </summary>
        [JsonProperty(Period.OneYear)]
        public decimal OneYear
        {
            get { return GetPeriodValue(IntPeriod.OneYear); }
            set { SetPeriodValue(IntPeriod.OneYear, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeYears period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeYears)]
        public decimal ThreeYears
        {
            get { return GetPeriodValue(IntPeriod.ThreeYears); }
            set { SetPeriodValue(IntPeriod.ThreeYears, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the FiveYears period value for the field
        /// </summary>
        [JsonProperty(Period.FiveYears)]
        public decimal FiveYears
        {
            get { return GetPeriodValue(IntPeriod.FiveYears); }
            set { SetPeriodValue(IntPeriod.FiveYears, value); }
        }

        /// <summary>
        /// Creates an instance of the DilutedEPSGrowth class
        /// </summary>
        public DilutedEPSGrowth() { }

        /// <summary>
        /// Creates an instance of the DilutedEPSGrowth class
        /// </summary>
        public DilutedEPSGrowth(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The growth in the company's diluted EPS from continuing operations on a percentage basis. Morningstar calculates the annualized
    /// growth percentage based on the underlying diluted EPS from continuing operations reported in the Income Statement within the
    /// company filings or reports.
    /// </summary>
    public class DilutedContEPSGrowth : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.OneYear; } }

        /// <summary>
        /// Gets/sets the OneYear period value for the field
        /// </summary>
        [JsonProperty(Period.OneYear)]
        public decimal OneYear
        {
            get { return GetPeriodValue(IntPeriod.OneYear); }
            set { SetPeriodValue(IntPeriod.OneYear, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeYears period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeYears)]
        public decimal ThreeYears
        {
            get { return GetPeriodValue(IntPeriod.ThreeYears); }
            set { SetPeriodValue(IntPeriod.ThreeYears, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the FiveYears period value for the field
        /// </summary>
        [JsonProperty(Period.FiveYears)]
        public decimal FiveYears
        {
            get { return GetPeriodValue(IntPeriod.FiveYears); }
            set { SetPeriodValue(IntPeriod.FiveYears, value); }
        }

        /// <summary>
        /// Creates an instance of the DilutedContEPSGrowth class
        /// </summary>
        public DilutedContEPSGrowth() { }

        /// <summary>
        /// Creates an instance of the DilutedContEPSGrowth class
        /// </summary>
        public DilutedContEPSGrowth(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The growth in the company's dividends per share (DPS) on a percentage basis. Morningstar calculates the annualized growth
    /// percentage based on the underlying DPS from its dividend database.  Morningstar collects its DPS from company filings and
    /// reports, as well as from third party sources.
    /// </summary>
    public class DPSGrowth : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.OneYear; } }

        /// <summary>
        /// Gets/sets the OneYear period value for the field
        /// </summary>
        [JsonProperty(Period.OneYear)]
        public decimal OneYear
        {
            get { return GetPeriodValue(IntPeriod.OneYear); }
            set { SetPeriodValue(IntPeriod.OneYear, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeYears period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeYears)]
        public decimal ThreeYears
        {
            get { return GetPeriodValue(IntPeriod.ThreeYears); }
            set { SetPeriodValue(IntPeriod.ThreeYears, value); }
        }

        /// <summary>
        /// Gets/sets the FiveYears period value for the field
        /// </summary>
        [JsonProperty(Period.FiveYears)]
        public decimal FiveYears
        {
            get { return GetPeriodValue(IntPeriod.FiveYears); }
            set { SetPeriodValue(IntPeriod.FiveYears, value); }
        }

        /// <summary>
        /// Creates an instance of the DPSGrowth class
        /// </summary>
        public DPSGrowth() { }

        /// <summary>
        /// Creates an instance of the DPSGrowth class
        /// </summary>
        public DPSGrowth(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The growth in the company's book value per share on a percentage basis. Morningstar calculates the annualized growth
    /// percentage based on the underlying equity and end of period shares outstanding reported in the company filings or reports.
    /// </summary>
    public class EquityPerShareGrowth : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.OneYear; } }

        /// <summary>
        /// Gets/sets the OneYear period value for the field
        /// </summary>
        [JsonProperty(Period.OneYear)]
        public decimal OneYear
        {
            get { return GetPeriodValue(IntPeriod.OneYear); }
            set { SetPeriodValue(IntPeriod.OneYear, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeYears period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeYears)]
        public decimal ThreeYears
        {
            get { return GetPeriodValue(IntPeriod.ThreeYears); }
            set { SetPeriodValue(IntPeriod.ThreeYears, value); }
        }

        /// <summary>
        /// Gets/sets the FiveYears period value for the field
        /// </summary>
        [JsonProperty(Period.FiveYears)]
        public decimal FiveYears
        {
            get { return GetPeriodValue(IntPeriod.FiveYears); }
            set { SetPeriodValue(IntPeriod.FiveYears, value); }
        }

        /// <summary>
        /// Creates an instance of the EquityPerShareGrowth class
        /// </summary>
        public EquityPerShareGrowth() { }

        /// <summary>
        /// Creates an instance of the EquityPerShareGrowth class
        /// </summary>
        public EquityPerShareGrowth(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The five-year growth rate of dividends per share, calculated using regression analysis.
    /// </summary>
    public class RegressionGrowthofDividends5Years : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.FiveYears; } }

        /// <summary>
        /// Gets/sets the FiveYears period value for the field
        /// </summary>
        [JsonProperty(Period.FiveYears)]
        public decimal FiveYears
        {
            get { return GetPeriodValue(IntPeriod.FiveYears); }
            set { SetPeriodValue(IntPeriod.FiveYears, value); }
        }

        /// <summary>
        /// Creates an instance of the RegressionGrowthofDividends5Years class
        /// </summary>
        public RegressionGrowthofDividends5Years() { }

        /// <summary>
        /// Creates an instance of the RegressionGrowthofDividends5Years class
        /// </summary>
        public RegressionGrowthofDividends5Years(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The growth in the company's free cash flow per share on a percentage basis. Morningstar calculates the growth percentage based
    /// on the free cash flow divided by average diluted shares outstanding reported in the Financial Statements within the company filings
    /// or reports.
    /// </summary>
    public class FCFPerShareGrowth : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.OneYear; } }

        /// <summary>
        /// Gets/sets the OneYear period value for the field
        /// </summary>
        [JsonProperty(Period.OneYear)]
        public decimal OneYear
        {
            get { return GetPeriodValue(IntPeriod.OneYear); }
            set { SetPeriodValue(IntPeriod.OneYear, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeYears period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeYears)]
        public decimal ThreeYears
        {
            get { return GetPeriodValue(IntPeriod.ThreeYears); }
            set { SetPeriodValue(IntPeriod.ThreeYears, value); }
        }

        /// <summary>
        /// Gets/sets the FiveYears period value for the field
        /// </summary>
        [JsonProperty(Period.FiveYears)]
        public decimal FiveYears
        {
            get { return GetPeriodValue(IntPeriod.FiveYears); }
            set { SetPeriodValue(IntPeriod.FiveYears, value); }
        }

        /// <summary>
        /// Creates an instance of the FCFPerShareGrowth class
        /// </summary>
        public FCFPerShareGrowth() { }

        /// <summary>
        /// Creates an instance of the FCFPerShareGrowth class
        /// </summary>
        public FCFPerShareGrowth(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The growth in the company's book value per share on a percentage basis. Morningstar calculates the growth percentage based on
    /// the common shareholder's equity reported in the Balance Sheet divided by the diluted shares outstanding within the company
    /// filings or reports.
    /// </summary>
    public class BookValuePerShareGrowth : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.OneYear; } }

        /// <summary>
        /// Gets/sets the OneYear period value for the field
        /// </summary>
        [JsonProperty(Period.OneYear)]
        public decimal OneYear
        {
            get { return GetPeriodValue(IntPeriod.OneYear); }
            set { SetPeriodValue(IntPeriod.OneYear, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeYears period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeYears)]
        public decimal ThreeYears
        {
            get { return GetPeriodValue(IntPeriod.ThreeYears); }
            set { SetPeriodValue(IntPeriod.ThreeYears, value); }
        }

        /// <summary>
        /// Gets/sets the FiveYears period value for the field
        /// </summary>
        [JsonProperty(Period.FiveYears)]
        public decimal FiveYears
        {
            get { return GetPeriodValue(IntPeriod.FiveYears); }
            set { SetPeriodValue(IntPeriod.FiveYears, value); }
        }

        /// <summary>
        /// Creates an instance of the BookValuePerShareGrowth class
        /// </summary>
        public BookValuePerShareGrowth() { }

        /// <summary>
        /// Creates an instance of the BookValuePerShareGrowth class
        /// </summary>
        public BookValuePerShareGrowth(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The growth in the company's Normalized Diluted EPS on a percentage basis.
    /// </summary>
    public class NormalizedDilutedEPSGrowth : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.OneYear; } }

        /// <summary>
        /// Gets/sets the OneYear period value for the field
        /// </summary>
        [JsonProperty(Period.OneYear)]
        public decimal OneYear
        {
            get { return GetPeriodValue(IntPeriod.OneYear); }
            set { SetPeriodValue(IntPeriod.OneYear, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeYears period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeYears)]
        public decimal ThreeYears
        {
            get { return GetPeriodValue(IntPeriod.ThreeYears); }
            set { SetPeriodValue(IntPeriod.ThreeYears, value); }
        }

        /// <summary>
        /// Gets/sets the FiveYears period value for the field
        /// </summary>
        [JsonProperty(Period.FiveYears)]
        public decimal FiveYears
        {
            get { return GetPeriodValue(IntPeriod.FiveYears); }
            set { SetPeriodValue(IntPeriod.FiveYears, value); }
        }

        /// <summary>
        /// Creates an instance of the NormalizedDilutedEPSGrowth class
        /// </summary>
        public NormalizedDilutedEPSGrowth() { }

        /// <summary>
        /// Creates an instance of the NormalizedDilutedEPSGrowth class
        /// </summary>
        public NormalizedDilutedEPSGrowth(List<PeriodField> store) { Store = store.ToArray(); }
    }

    /// <summary>
    /// The growth in the company's Normalized Basic EPS on a percentage basis.
    /// </summary>
    public class NormalizedBasicEPSGrowth : MultiPeriodField
    {
        /// <summary>
        /// Gets the default period for the field
        /// </summary>
        protected override byte DefaultPeriod { get { return IntPeriod.OneYear; } }

        /// <summary>
        /// Gets/sets the OneYear period value for the field
        /// </summary>
        [JsonProperty(Period.OneYear)]
        public decimal OneYear
        {
            get { return GetPeriodValue(IntPeriod.OneYear); }
            set { SetPeriodValue(IntPeriod.OneYear, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeMonths period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeMonths)]
        public decimal ThreeMonths
        {
            get { return GetPeriodValue(IntPeriod.ThreeMonths); }
            set { SetPeriodValue(IntPeriod.ThreeMonths, value); }
        }

        /// <summary>
        /// Gets/sets the ThreeYears period value for the field
        /// </summary>
        [JsonProperty(Period.ThreeYears)]
        public decimal ThreeYears
        {
            get { return GetPeriodValue(IntPeriod.ThreeYears); }
            set { SetPeriodValue(IntPeriod.ThreeYears, value); }
        }

        /// <summary>
        /// Gets/sets the FiveYears period value for the field
        /// </summary>
        [JsonProperty(Period.FiveYears)]
        public decimal FiveYears
        {
            get { return GetPeriodValue(IntPeriod.FiveYears); }
            set { SetPeriodValue(IntPeriod.FiveYears, value); }
        }

        /// <summary>
        /// Creates an instance of the NormalizedBasicEPSGrowth class
        /// </summary>
        public NormalizedBasicEPSGrowth() { }

        /// <summary>
        /// Creates an instance of the NormalizedBasicEPSGrowth class
        /// </summary>
        public NormalizedBasicEPSGrowth(List<PeriodField> store) { Store = store.ToArray(); }
    }

}
